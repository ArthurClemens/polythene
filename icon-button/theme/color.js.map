{"version":3,"sources":["color.es6"],"names":["_mixin","require","style","config","tint","type","scope","arguments","length","undefined","_defineProperty","color","background"," .pe-button__wash","opacity","&.pe-button--focus, &.pe-button--selected"," .pe-button__focus","background-color","&.pe-button--disabled","&.pe-button--raised"," .pe-button__content","noTouch","createStyles","html.pe-no-touch",".pe-dark-theme","html.pe-no-touch .pe-dark-theme","_mixin2","default"],"mappings":"yTAAA,IAAAA,QAAAC,QAAA,iEAEMC,MAAQ,SAACC,OAAQC,KAAMC,MAAqB,GAAfC,OAAeC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAP,EACvC,QAAOG,mBACFJ,MAAQ,8BACLK,MAAOR,OAAO,SAAWC,KAAO,IAAMC,KAAO,gBAC7CO,WAAY,OAEZC,qBACIC,QAASX,OAAO,SAAWC,KAAO,kBAGtCW,6CACIC,sBACIF,QAASX,OAAO,SAAWC,KAAO,kBAClCa,mBAAoB,iBAI5BC,yBACIP,MAAOR,OAAO,SAAWC,KAAO,IAAMC,KAAO,mBAGjDc,uBACIF,mBAAoBd,OAAO,SAAWC,KAAO,eAE7CgB,wBACIR,WAAY,oBAO1BS,QAAU,SAAClB,OAAQC,KAAMC,MAAqB,GAAfC,OAAeC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAP,EACzC,QAAOG,mBACFJ,MAAQ,mCACC,UAATF,MAEOS,qBACII,mBAAoB,kBAIxBJ,qBACII,mBAAoBd,OAAO,SAAWC,KAAO,IAAMC,KAAO,qBAMxEiB,aAAe,SAACnB,QAClB,OACID,MAAMC,OAAQ,QAAS,SAEnBoB,oBACIF,QAAQlB,OAAQ,QAAS,OAAQ,QAIrCqB,kBAEItB,MAAMC,OAAQ,OAAQ,OAAQ,KAE9BD,MAAMC,OAAQ,OAAQ,OAAQ,QAIlCsB,mCACIJ,QAAQlB,OAAQ,OAAQ,OAAQ,yBAMjC,SAACA,QAAD,MAAauB,SAAAC,QAAML,aAAanB,OAAQmB","file":"color.js","sourcesContent":["import mixin from 'polythene/common/mixin';\n\nconst style = (config, tint, type, scope = '') => {\n    return [{\n        [scope + '.pe-button.pe-button--icon']: {\n            color: config['color_' + tint + '_' + type + '_normal_text'],\n            background: 'none',\n\n            ' .pe-button__wash': {\n                opacity: config['color_' + tint + '_wash_opacity']\n            },\n\n            '&.pe-button--focus, &.pe-button--selected': {\n                ' .pe-button__focus': {\n                    opacity: config['color_' + tint + '_focus_opacity'],\n                    'background-color': 'currentcolor'\n                }\n            },\n\n            '&.pe-button--disabled': {\n                color: config['color_' + tint + '_' + type + '_disabled_text']\n            },\n\n            '&.pe-button--raised': {\n                'background-color': config['color_' + tint + '_background'],\n\n                ' .pe-button__content': {\n                    background: 'transparent'\n                }\n            }\n        }\n    }];\n};\n\nconst noTouch = (config, tint, type, scope = '') => {\n    return [{\n        [scope + '.pe-button.pe-button--icon:hover']:\n        (tint === 'light')\n            ? {\n                ' .pe-button__wash': {\n                    'background-color': 'currentcolor'\n                }\n            }\n            : {\n                ' .pe-button__wash': {\n                    'background-color': config['color_' + tint + '_' + type + '_normal_text']\n                }\n            }\n    }];\n};\n\nconst createStyles = (config) => {\n    return [\n        style(config, 'light', 'flat'),\n        {\n            'html.pe-no-touch': [\n                noTouch(config, 'light', 'flat', ' ')\n            ]\n        },\n        {\n            '.pe-dark-theme': [\n                // inside dark theme\n                style(config, 'dark', 'flat', ' '),\n                // has dark theme\n                style(config, 'dark', 'flat', '&')\n            ]\n        },\n        {\n            'html.pe-no-touch .pe-dark-theme': [\n                noTouch(config, 'dark', 'flat', ' ')\n            ]\n        }\n    ];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}