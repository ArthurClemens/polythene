{"version":3,"sources":["color.es6"],"names":["style","scope","color","config","tint","type","background","opacity","noTouch","createStyles"],"mappings":"oEAAA,oF,8MAEA,GAAMA,OAAQ,eAAoC,8DAAP,EAAO,CAC9C,MAAO,oBACFC,EAAQ,4BADN,CACqC,CACpCC,MAAOC,EAAO,SAAWC,CAAX,CAAkB,GAAlB,CAAwBC,CAAxB,CAA+B,cAAtC,CAD6B,CAEpCC,WAAY,MAFwB,CAIpC,oBAAqB,CACjBC,QAASJ,EAAO,SAAWC,CAAX,CAAkB,eAAzB,CADQ,CAJe,CAQpC,4CAA6C,CACzC,qBAAsB,CAClBG,QAASJ,EAAO,SAAWC,CAAX,CAAkB,gBAAzB,CADS,CAElB,mBAAoB,cAFF,CADmB,CART,CAepC,wBAAyB,CACrBF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,GAAlB,CAAwBC,CAAxB,CAA+B,gBAAtC,CADc,CAfW,CAmBpC,sBAAuB,CACnB,mBAAoBF,EAAO,SAAWC,CAAX,CAAkB,aAAzB,CADD,CAGnB,uBAAwB,CACpBE,WAAY,aADQ,CAHL,CAnBa,CADrC,EA6BV,CA9BD,CAgCME,QAAU,eAAoC,8DAAP,EAAO,CAChD,MAAO,oBACFP,EAAQ,kCADN,CAEO,OAAT,IAAD,2DAMM,CACE,oBAAqB,CACjB,mBAAoBE,EAAO,SAAWC,CAAX,CAAkB,GAAlB,CAAwBC,CAAxB,CAA+B,cAAtC,CADH,CADvB,CARH,EAcV,CA/CD,CAiDMI,aAAe,WAAY,CAC7B,MAAO,CACHT,MAAMG,CAAN,CAAc,OAAd,CAAuB,MAAvB,CADG,CAEH,CACI,mBAAoB,CAChBK,QAAQL,CAAR,CAAgB,OAAhB,CAAyB,MAAzB,CAAiC,GAAjC,CADgB,CADxB,CAFG,CAOH,CACI,iBAAkB,CAEdH,MAAMG,CAAN,CAAc,MAAd,CAAsB,MAAtB,CAA8B,GAA9B,CAFc,CAIdH,MAAMG,CAAN,CAAc,MAAd,CAAsB,MAAtB,CAA8B,GAA9B,CAJc,CADtB,CAPG,CAeH,CACI,kCAAmC,CAC/BK,QAAQL,CAAR,CAAgB,MAAhB,CAAwB,MAAxB,CAAgC,GAAhC,CAD+B,CADvC,CAfG,CAqBV,CAvED,C,gBAyEe,kBAAa,iBAAMM,YAAN,CAAmBN,CAAnB,CAA2BM,YAA3B,CAAb,C","file":"color.js","sourcesContent":["import mixin from 'polythene/common/mixin';\n\nconst style = (config, tint, type, scope = '') => {\n    return [{\n        [scope + '.pe-button.pe-button--icon']: {\n            color: config['color_' + tint + '_' + type + '_normal_text'],\n            background: 'none',\n\n            ' .pe-button__wash': {\n                opacity: config['color_' + tint + '_wash_opacity']\n            },\n\n            '&.pe-button--focus, &.pe-button--selected': {\n                ' .pe-button__focus': {\n                    opacity: config['color_' + tint + '_focus_opacity'],\n                    'background-color': 'currentcolor'\n                }\n            },\n\n            '&.pe-button--disabled': {\n                color: config['color_' + tint + '_' + type + '_disabled_text']\n            },\n\n            '&.pe-button--raised': {\n                'background-color': config['color_' + tint + '_background'],\n\n                ' .pe-button__content': {\n                    background: 'transparent'\n                }\n            }\n        }\n    }];\n};\n\nconst noTouch = (config, tint, type, scope = '') => {\n    return [{\n        [scope + '.pe-button.pe-button--icon:hover']:\n        (tint === 'light')\n            ? {\n                ' .pe-button__wash': {\n                    'background-color': 'currentcolor'\n                }\n            }\n            : {\n                ' .pe-button__wash': {\n                    'background-color': config['color_' + tint + '_' + type + '_normal_text']\n                }\n            }\n    }];\n};\n\nconst createStyles = (config) => {\n    return [\n        style(config, 'light', 'flat'),\n        {\n            'html.pe-no-touch': [\n                noTouch(config, 'light', 'flat', ' ')\n            ]\n        },\n        {\n            '.pe-dark-theme': [\n                // inside dark theme\n                style(config, 'dark', 'flat', ' '),\n                // has dark theme\n                style(config, 'dark', 'flat', '&')\n            ]\n        },\n        {\n            'html.pe-no-touch .pe-dark-theme': [\n                noTouch(config, 'dark', 'flat', ' ')\n            ]\n        }\n    ];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}