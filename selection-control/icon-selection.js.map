{"version":3,"sources":["icon-selection.es6"],"names":["require","_mithril","_icon","_iconButton","CSS_CLASSES","box","button","buttonOn","buttonOff","createIcon","onOffType","opts","Object","assign","msvg","theme","class","icon","size","type","createSelection","checked","selectable","_mithril2","default","component","_iconButton2","tag","content","_icon2","ripple","center","disabled","inactive","iconButton"],"mappings":"sJACAA,QAAA,iCACA,IAAAC,UAAAD,QAAA,sDACAE,MAAAF,QAAA,4DACAG,YAAAH,QAAA,sFAEMI,aACFC,IAAK,kBACLC,OAAQ,qBACRC,SAAU,yBACVC,UAAW,2BAGTC,WAAa,SAACC,UAAWC,MAG3B,MAAOC,QAAOC,UAEVF,KAAKD,WACCC,KAAKD,YAEHI,KAAMH,KAAKI,MAAML,aAGrBM,MAAOL,KAAKK,OAEhBL,KAAKM,KACLN,KAAKO,MAEGC,KAAMR,KAAKO,MAEb,OAIRE,gBAAkB,SAACC,QAASV,MAC9B,GAAMW,YAAaX,KAAKW,WAAWD,QACnC,QAAO,EAAAE,UAAAC,SAAE,OACLR,MAAOZ,YAAYC,KACpBkB,UAAAC,QAAEC,UAAFC,aAAAF,QAAwBZ,OAAOC,WAG1Bc,IAAK,MACLX,MAAOZ,YAAYE,OACnBsB,SACIL,UAAAC,QAAEC,UAAFI,OAAAL,QAAkBf,WAAW,SAAUG,OAAOC,WAGtCG,MAAOZ,YAAYG,UAEvBI,QAEJY,UAAAC,QAAEC,UAAFI,OAAAL,QAAkBf,WAAW,UAAWG,OAAOC,WAGvCG,MAAOZ,YAAYI,WAEvBG,SAGRmB,QACIC,QAAQ,GAEZC,SAAUrB,KAAKqB,SACfC,UAAWX,YAEfX,KAAKuB,+BAIEd","file":"icon-selection.js","sourcesContent":["// Helper function for checkbox and radio button\nimport 'polythene/common/object.assign';\nimport m from 'mithril';\nimport icon from 'polythene/icon/icon';\nimport iconButton from 'polythene/icon-button/icon-button';\n\nconst CSS_CLASSES = {\n    box: 'pe-control__box',\n    button: 'pe-control__button',\n    buttonOn: 'pe-control__button--on',\n    buttonOff: 'pe-control__button--off'\n};\n\nconst createIcon = (onOffType, opts) => {\n    // if opts.iconOn/Off is passed, use that icon options object and ignore size\n    // otherwise create a new object\n    return Object.assign(\n        {},\n        opts[onOffType]\n            ? opts[onOffType]\n            : {\n                msvg: opts.theme[onOffType]\n            },\n        {\n            class: opts.class\n        },\n        opts.icon,\n        opts.size\n            ? {\n                type: opts.size\n            }\n            : null\n    );\n};\n\nconst createSelection = (checked, opts) => {\n    const selectable = opts.selectable(checked);\n    return m('div', {\n        class: CSS_CLASSES.box\n    }, m.component(iconButton, Object.assign(\n        {},\n        {\n            tag: 'div',\n            class: CSS_CLASSES.button,\n            content: [\n                m.component(icon, createIcon('iconOn', Object.assign(\n                    {},\n                    {\n                        class: CSS_CLASSES.buttonOn\n                    },\n                    opts\n                ))),\n                m.component(icon, createIcon('iconOff', Object.assign(\n                    {},\n                    {\n                        class: CSS_CLASSES.buttonOff\n                    },\n                    opts\n                )))\n            ],\n            ripple: {\n                center: true\n            },\n            disabled: opts.disabled,\n            inactive: !selectable\n        },\n        opts.iconButton\n    )));\n};\n\nexport default createSelection;\n"]}