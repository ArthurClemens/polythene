{"version":3,"sources":["notification-instance.es6"],"names":["require","_mithril","_timer","_transition","CSS_CLASSES","content","title","multilineTitle","action","horizontal","vertical","DEFAULT_TIME_OUT","pause","ctrl","isPaused","timer","unpause","resume","stopTimer","stop","show","opts","id","instanceId","isTransitioning","_transition2","default","Object","assign","transitions","then","didShow","timeout","timeoutSeconds","undefined","_timer2","hide","didHide","_mithril2","redraw","createView","arguments","length","tag","props","class","layout","join","config","el","inited","context","vdom","containerEl","document","querySelector","containerSelector","onclick","e","preventDefault","titleConfig","height","getBoundingClientRect","lineHeight","parseInt","window","getComputedStyle","paddingTop","paddingBottom","classList","add","component","controller","instanceData","dismissEl","view"],"mappings":"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","file":"notification-instance.js","sourcesContent":["import 'polythene/common/object.assign';\nimport m from 'mithril';\nimport Timer from 'polythene/common/timer';\nimport transition from 'polythene/common/transition';\n\nconst CSS_CLASSES = {\n    content: 'pe-notification__content',\n    title: 'pe-notification__title',\n    multilineTitle: 'pe-notification__title--multiline',\n    action: 'pe-notification__action',\n    horizontal: 'pe-notification--horizontal',\n    vertical: 'pe-notification--vertical'\n};\n\nconst DEFAULT_TIME_OUT = 3;\n\nconst pause = (ctrl) => {\n    ctrl.isPaused = true;\n    if (ctrl.timer) {\n        ctrl.timer.pause();\n    }\n};\n\nconst unpause = (ctrl) => {\n    ctrl.isPaused = false;\n    if (ctrl.timer) {\n        ctrl.timer.resume();\n    }\n};\n\nconst stopTimer = (ctrl) => {\n    if (ctrl.timer) {\n        ctrl.timer.stop();\n    }\n};\n\nconst show = (ctrl, opts) => {\n    stopTimer(ctrl);\n    const id = ctrl.instanceId;\n    ctrl.isTransitioning = true;\n    return transition.show(Object.assign(\n        {},\n        opts,\n        ctrl.transitions.show(ctrl, opts)\n    )).then(() => {\n        ctrl.isTransitioning = false;\n        if (ctrl.didShow) {\n            // notify multiple\n            ctrl.didShow(id);\n            // this will call opts.didShow\n        }\n\n        // set timer to hide in a few seconds\n        const timeout = opts.timeout;\n        if (timeout === 0) {\n            // do not time out\n        } else {\n            const timeoutSeconds = (timeout !== undefined) ? timeout : DEFAULT_TIME_OUT;\n            ctrl.timer = new Timer(() => {\n                hide(ctrl, opts);\n            }, timeoutSeconds * 1000);\n        }\n    });\n};\n\nconst hide = (ctrl, opts) => {\n    stopTimer(ctrl);\n    const id = ctrl.instanceId;\n    ctrl.isTransitioning = true;\n    return transition.hide(Object.assign(\n        {},\n        opts,\n        ctrl.transitions.hide(ctrl, opts)\n    )).then(() => {\n        stopTimer(ctrl);\n        ctrl.isTransitioning = false;\n        if (ctrl.didHide) {\n            // notify multiple\n            ctrl.didHide(id);\n            // this will call opts.didHide\n        }\n        m.redraw(); // removes remainder of drawn component\n    });\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const tag = opts.tag || 'div';\n    const props = {\n        class: [ctrl.class, (opts.layout === 'vertical' ? CSS_CLASSES.vertical : CSS_CLASSES.horizontal), opts.class].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context, vdom) => {\n            if (inited) return;\n            if (opts.config) {\n                opts.config(el, inited, context, vdom);\n            }\n            ctrl.el = el;\n\n            // container element is used for transitioning the notification\n            ctrl.containerEl = document.querySelector(opts.containerSelector || '.pe-notification__holder');\n            show(ctrl, opts);\n        },\n        onclick: (e) => {\n            e.preventDefault();\n        }\n    };\n    const titleConfig = (el, inited) => {\n        if (inited) return;\n        const height = el.getBoundingClientRect().height;\n        const lineHeight = parseInt(window.getComputedStyle(el).lineHeight, 10);\n        const paddingTop = parseInt(window.getComputedStyle(el).paddingTop, 10);\n        const paddingBottom = parseInt(window.getComputedStyle(el).paddingBottom, 10);\n        if (height > (lineHeight + paddingTop + paddingBottom)) {\n            el.classList.add(CSS_CLASSES.multilineTitle);\n        }\n    };\n    const title = opts.title;\n    const content = m('div', {\n        class: CSS_CLASSES.content\n    }, [\n        title ? m('div', {\n            class: CSS_CLASSES.title,\n            config: titleConfig\n        }, title) : null,\n        opts.action ? m('div', {\n            class: CSS_CLASSES.action\n        }, [\n            opts.action\n        ]) : null\n    ]);\n    return m(tag, props, content);\n};\n\nconst component = {\n    controller: (instanceData = {}) => {\n        // instanceData contains {id, opts}\n        return Object.assign({}, instanceData, {\n            el: null,\n            containerEl: null,\n            dismissEl: null,\n            isTransitioning: false,\n            timer: null,\n            isPaused: false\n        });\n    },\n    view: (ctrl, instanceData) => {\n        // instanceData contains {id, opts}\n        const opts = (typeof instanceData.opts === 'function')\n            ? instanceData.opts()\n            : instanceData.opts;\n        if (instanceData.hide && !ctrl.isTransitioning) {\n            hide(ctrl, opts);\n        }\n        if (instanceData.pause && !ctrl.isPaused) {\n            pause(ctrl, opts);\n        } else if (instanceData.unpause && ctrl.isPaused) {\n            unpause(ctrl, opts);\n        }\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}