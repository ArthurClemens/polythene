{"version":3,"sources":["notification-instance.es6"],"names":["CSS_CLASSES","content","title","multilineTitle","action","horizontal","vertical","DEFAULT_TIME_OUT","pause","ctrl","isPaused","timer","unpause","resume","stopTimer","stop","show","instanceId","isTransitioning","Object","assign","opts","transitions","then","didShow","id","timeout","hide","didHide","redraw","createView","tag","class","layout","join","config","inited","el","context","vdom","containerEl","isClient","document","querySelector","containerSelector","onclick","e","preventDefault","titleConfig","isServer","getBoundingClientRect","height","parseInt","window","getComputedStyle","lineHeight","paddingTop","paddingBottom","classList","add","props","component","controller","instanceData","dismissEl","view"],"mappings":"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","file":"notification-instance.js","sourcesContent":["import 'polythene/common/object.assign';\nimport m from 'mithril';\nimport Timer from 'polythene/common/timer';\nimport transition from 'polythene/common/transition';\nimport isomorphic from 'polythene/common/isomorphic';\n\nconst CSS_CLASSES = {\n    content: 'pe-notification__content',\n    title: 'pe-notification__title',\n    multilineTitle: 'pe-notification__title--multiline',\n    action: 'pe-notification__action',\n    horizontal: 'pe-notification--horizontal',\n    vertical: 'pe-notification--vertical'\n};\n\nconst DEFAULT_TIME_OUT = 3;\n\nconst pause = (ctrl) => {\n    ctrl.isPaused = true;\n    if (ctrl.timer) {\n        ctrl.timer.pause();\n    }\n};\n\nconst unpause = (ctrl) => {\n    ctrl.isPaused = false;\n    if (ctrl.timer) {\n        ctrl.timer.resume();\n    }\n};\n\nconst stopTimer = (ctrl) => {\n    if (ctrl.timer) {\n        ctrl.timer.stop();\n    }\n};\n\nconst show = (ctrl, opts) => {\n    stopTimer(ctrl);\n    const id = ctrl.instanceId;\n    ctrl.isTransitioning = true;\n    return transition.show(Object.assign(\n        {},\n        opts,\n        ctrl.transitions.show(ctrl, opts)\n    )).then(() => {\n        ctrl.isTransitioning = false;\n        if (ctrl.didShow) {\n            // notify multiple\n            ctrl.didShow(id);\n            // this will call opts.didShow\n        }\n\n        // set timer to hide in a few seconds\n        const timeout = opts.timeout;\n        if (timeout === 0) {\n            // do not time out\n        } else {\n            const timeoutSeconds = (timeout !== undefined) ? timeout : DEFAULT_TIME_OUT;\n            ctrl.timer = new Timer(() => {\n                hide(ctrl, opts);\n            }, timeoutSeconds * 1000);\n        }\n    });\n};\n\nconst hide = (ctrl, opts) => {\n    stopTimer(ctrl);\n    const id = ctrl.instanceId;\n    ctrl.isTransitioning = true;\n    return transition.hide(Object.assign(\n        {},\n        opts,\n        ctrl.transitions.hide(ctrl, opts)\n    )).then(() => {\n        stopTimer(ctrl);\n        ctrl.isTransitioning = false;\n        if (ctrl.didHide) {\n            // notify multiple\n            ctrl.didHide(id);\n            // this will call opts.didHide\n        }\n        m.redraw(); // removes remainder of drawn component\n    });\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const tag = opts.tag || 'div';\n    const props = {\n        class: [ctrl.class, (opts.layout === 'vertical' ? CSS_CLASSES.vertical : CSS_CLASSES.horizontal), opts.class].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context, vdom) => {\n            if (inited) return;\n            if (opts.config) {\n                opts.config(el, inited, context, vdom);\n            }\n            ctrl.el = el;\n\n            // container element is used for transitioning the notification\n            ctrl.containerEl = isomorphic.isClient()? document.querySelector(opts.containerSelector || '.pe-notification__holder'): null;\n            show(ctrl, opts);\n        },\n        onclick: (e) => {\n            e.preventDefault();\n        }\n    };\n    const titleConfig = (el, inited) => {\n\t\tif(isomorphic.isServer()){\n\t\t\treturn;\n\t\t}\n        if (inited) return;\n        const height = el.getBoundingClientRect().height;\n        const lineHeight = parseInt(window.getComputedStyle(el).lineHeight, 10);\n        const paddingTop = parseInt(window.getComputedStyle(el).paddingTop, 10);\n        const paddingBottom = parseInt(window.getComputedStyle(el).paddingBottom, 10);\n        if (height > (lineHeight + paddingTop + paddingBottom)) {\n            el.classList.add(CSS_CLASSES.multilineTitle);\n        }\n    };\n    const title = opts.title;\n    const content = m('div', {\n        class: CSS_CLASSES.content\n    }, [\n        title ? m('div', {\n            class: CSS_CLASSES.title,\n            config: titleConfig\n        }, title) : null,\n        opts.action ? m('div', {\n            class: CSS_CLASSES.action\n        }, [\n            opts.action\n        ]) : null\n    ]);\n    return m(tag, props, content);\n};\n\nconst component = {\n    controller: (instanceData = {}) => {\n        // instanceData contains {id, opts}\n        return Object.assign({}, instanceData, {\n            el: null,\n            containerEl: null,\n            dismissEl: null,\n            isTransitioning: false,\n            timer: null,\n            isPaused: false\n        });\n    },\n    view: (ctrl, instanceData) => {\n        // instanceData contains {id, opts}\n        const opts = (typeof instanceData.opts === 'function')\n            ? instanceData.opts()\n            : instanceData.opts;\n        if (instanceData.hide && !ctrl.isTransitioning) {\n            hide(ctrl, opts);\n        }\n        if (instanceData.pause && !ctrl.isPaused) {\n            pause(ctrl, opts);\n        } else if (instanceData.unpause && ctrl.isPaused) {\n            unpause(ctrl, opts);\n        }\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}