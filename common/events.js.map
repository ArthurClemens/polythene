{"version":3,"sources":["events.es6"],"names":["listeners","throttle","func","s","arguments","length","undefined","context","window","wait","_len","args","Array","_key","later","apply","setTimeout","subscribe","eventName","listener","delay","push","unsubscribe","index","indexOf","splice","emit","event","forEach","addEventListener","e"],"mappings":"mEAAA,IAAMA,cAGAC,SAAW,SAACC,MAAwE,GAAlEC,GAAkEC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAA9D,IAAMG,QAAwDH,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAA5B,mBAAXI,QAAwBA,UACnEC,MAAO,CACX,OAAO,YAAa,IAAA,GAAAC,MAAAN,UAAAC,OAATM,KAASC,MAAAF,MAAAG,KAAA,EAAAA,KAAAH,KAAAG,OAATF,KAASE,MAAAT,UAAAS,KAChB,IAAMC,OAAQ,WACVZ,KAAKa,MAAMR,QAASI,MAEnBF,QACDK,QACAL,MAAO,EACPO,WAAW,WACPP,MAAO,GACRN,MAKTc,UAAY,SAACC,UAAWC,SAAUC,OACpCpB,UAAUkB,WAAalB,UAAUkB,eACjClB,UAAUkB,WAAWG,KAAKD,MAAQnB,SAASkB,SAAUC,OAASD,WAI5DG,YAAc,SAACJ,UAAWC,UAC5B,GAAKnB,UAAUkB,WAAf,CAGA,GAAMK,OAAQvB,UAAUkB,WAAWM,QAAQL,SACvCI,QAAQ,GACRvB,UAAUkB,WAAWO,OAAOF,MAAO,KAKrCG,KAAO,SAACR,UAAWS,OAChB3B,UAAUkB,YAGflB,UAAUkB,WAAWU,QAAQ,SAACT,UAC1BA,SAASQ,SAII,oBAAXnB,UACTA,OAAOqB,iBAAiB,SAAU,SAAAC,GAAA,MAAMJ,MAAK,SAAUI,KACvDtB,OAAOqB,iBAAiB,SAAU,SAAAC,GAAA,MAAMJ,MAAK,SAAUI,KACvDtB,OAAOqB,iBAAiB,UAAW,SAAAC,GAAA,MAAMJ,MAAK,UAAWI,uBAItD7B,SAAAA,SACAgB,UAAAA,UACAK,YAAAA,YACAI,KAAAA","file":"events.js","sourcesContent":["const listeners = {};\n\n// https://gist.github.com/Eartz/fe651f2fadcc11444549\nconst throttle = (func, s = 0.05, context = typeof window !== \"undefined\"? window: {}) => {\n    let wait = false;\n    return (...args) => {\n        const later = () => {\n            func.apply(context, args);\n        };\n        if (!wait) {\n            later();\n            wait = true;\n            setTimeout(() => {\n                wait = false;\n            }, s);\n        }\n    };\n};\n\nconst subscribe = (eventName, listener, delay) => {\n    listeners[eventName] = listeners[eventName] || [];\n    listeners[eventName].push(delay ? throttle(listener, delay) : listener);\n};\n\n\nconst unsubscribe = (eventName, listener) => {\n    if (!listeners[eventName]) {\n        return;\n    }\n    const index = listeners[eventName].indexOf(listener);\n    if (index > -1) {\n        listeners[eventName].splice(index, 1);\n    }\n};\n\n\nconst emit = (eventName, event) => {\n    if (!listeners[eventName]) {\n        return;\n    }\n    listeners[eventName].forEach((listener) => {\n        listener(event);\n    });\n};\n\nif(typeof window !== \"undefined\") {\n\twindow.addEventListener('resize', e => (emit('resize', e)));\n\twindow.addEventListener('scroll', e => (emit('scroll', e)));\n\twindow.addEventListener('keydown', e => (emit('keydown', e)));\n}\n\nexport default {\n    throttle,\n    subscribe,\n    unsubscribe,\n    emit\n};\n"]}