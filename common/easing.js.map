{"version":3,"sources":["easing.es6"],"names":["linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"oFAOe,CAEXA,OAAQ,yBAAQC,EAAR,CAFG,CAIXC,WAAY,6BAAQD,GAAIA,CAAZ,CAJD,CAMXE,YAAa,8BAAQF,IAAK,EAAIA,CAAT,CAAR,CANF,CAQXG,cAAe,gCAAY,GAAJ,GAAS,EAAIH,CAAJ,CAAQA,CAAjB,CAAqB,CAAC,CAAD,CAAK,CAAC,EAAI,EAAIA,CAAT,EAAcA,CAAhD,CARJ,CAUXI,YAAa,8BAAQJ,GAAIA,CAAJ,CAAQA,CAAhB,CAVF,CAYXK,aAAc,+BAAS,GAAD,CAAQL,CAAR,CAAYA,CAAZ,CAAgB,CAAxB,CAZH,CAcXM,eAAgB,iCAAY,GAAJ,GAAS,EAAIN,CAAJ,CAAQA,CAAR,CAAYA,CAArB,CAAyB,CAACA,EAAI,CAAL,GAAW,EAAIA,CAAJ,CAAQ,CAAnB,GAAyB,EAAIA,CAAJ,CAAQ,CAAjC,EAAsC,CAAvE,CAdL,CAgBXO,YAAa,8BAAQP,GAAIA,CAAJ,CAAQA,CAAR,CAAYA,CAApB,CAhBF,CAkBXQ,aAAc,+BAAQ,GAAK,IAAD,CAAQR,CAAR,CAAYA,CAAZ,CAAgBA,CAA5B,CAlBH,CAoBXS,eAAgB,iCAAY,GAAJ,GAAS,EAAIT,CAAJ,CAAQA,CAAR,CAAYA,CAAZ,CAAgBA,CAAzB,CAA6B,EAAI,EAAI,GAAJ,CAAWA,CAAX,CAAeA,CAAf,CAAmBA,CAA5D,CApBL,CAsBXU,YAAa,8BAAQV,GAAIA,CAAJ,CAAQA,CAAR,CAAYA,CAAZ,CAAgBA,CAAxB,CAtBF,CAwBXW,aAAc,+BAAQ,GAAK,GAAD,CAAQX,CAAR,CAAYA,CAAZ,CAAgBA,CAAhB,CAAoBA,CAAhC,CAxBH,CA0BXY,eAAgB,iCAAY,GAAJ,GAAS,GAAKZ,CAAL,CAASA,CAAT,CAAaA,CAAb,CAAiBA,CAAjB,CAAqBA,CAA9B,CAAkC,EAAI,GAAM,GAAN,CAAaA,CAAb,CAAiBA,CAAjB,CAAqBA,CAArB,CAAyBA,CAAvE,CA1BL,C","file":"easing.js","sourcesContent":["\n/*\nhttps://gist.github.com/gre/1650294\nEasing Functions - inspired from http://gizma.com/easing/\nOnly considering the t value for the range [0, 1] => [0, 1]\n*/\n\nexport default {\n    // no easing, no acceleration\n    linear: (t) => (t),\n    // accelerating from zero velocity\n    easeInQuad: (t) => (t * t),\n    // decelerating to zero velocity\n    easeOutQuad: (t) => (t * (2 - t)),\n    // acceleration until halfway, then deceleration\n    easeInOutQuad: (t) => (t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\n    // accelerating from zero velocity\n    easeInCubic: (t) => (t * t * t),\n    // decelerating to zero velocity\n    easeOutCubic: (t) => ((--t) * t * t + 1),\n    // acceleration until halfway, then deceleration\n    easeInOutCubic: (t) => (t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1),\n    // accelerating from zero velocity\n    easeInQuart: (t) => (t * t * t * t),\n    // decelerating to zero velocity\n    easeOutQuart: (t) => (1 - (--t) * t * t * t),\n    // acceleration until halfway, then deceleration\n    easeInOutQuart: (t) => (t < .5 ? 8 * t * t * t * t : 1 - 8* (--t) * t * t * t),\n    // accelerating from zero velocity\n    easeInQuint: (t) => (t * t * t * t * t),\n    // decelerating to zero velocity\n    easeOutQuint: (t) => (1 + (--t) * t * t * t * t),\n    // acceleration until halfway, then deceleration\n    easeInOutQuint: (t) => (t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t)\n};\n"]}