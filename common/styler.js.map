{"version":3,"sources":["styler.es6"],"names":["_j2c","require","remove","id","old","document","getElementById","parentNode","removeChild","add","_len","arguments","length","styles","Array","_key","addToDocument","apply","undefined","concat","opts","_len2","_key2","window","documentRef","styleEl","createElement","setAttribute","forEach","styleList","Object","keys","style","scoped","@global","sheet","_j2c2","default","appendChild","createTextNode","head"],"mappings":"qJAAA,IAAAA,MAAAC,QAAA,0CAEMC,OAAS,SAACC,IACZ,GAAIA,GAAI,CACJ,GAAMC,KAAMC,SAASC,eAAeH,GAChCC,MACAA,IAAIG,WAAWC,YAAYJ,OASjCK,IAAM,SAACN,IAAkB,IAAA,GAAAO,MAAAC,UAAAC,OAAXC,OAAWC,MAAAJ,KAAA,EAAAA,KAAA,EAAA,GAAAK,KAAA,EAAAA,KAAAL,KAAAK,OAAXF,OAAWE,KAAA,GAAAJ,UAAAI,KAC3BC,eAAAC,MAAAC,SAAef,GAAAA,KAAfgB,OAAuBN,UASrBG,cAAgB,SAACI,MAAoB,IAAA,GAAAC,OAAAV,UAAAC,OAAXC,OAAWC,MAAAO,MAAA,EAAAA,MAAA,EAAA,GAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAXT,OAAWS,MAAA,GAAAX,UAAAW,MAC1C,IAAqB,mBAAXC,QAAV,CAGG,GAAMpB,IAAKiB,KAAKjB,GACVqB,YAAcJ,KAAKf,UAAYkB,OAAOlB,QAC5CH,QAAOC,GACP,IAAMsB,SAAUD,YAAYE,cAAc,QACtCvB,KACAsB,QAAQE,aAAa,KAAMxB,IAE/BU,OAAOe,QAAQ,SAACC,WAERC,OAAOC,KAAKF,WAAWjB,QACvBiB,UAAUD,QAAQ,SAACI,OACf,GAAMC,SAAUC,UAAWF,OACrBG,MAAQC,MAAAC,QAAIF,MAAMF,OACxBR,SAAQa,YAAYd,YAAYe,eAAeJ,YAI3DX,YAAYgB,KAAKF,YAAYb,4BAI7BhB,IAAAA,IACAO,cAAAA,cACAd,OAAAA","file":"styler.js","sourcesContent":["import j2c from 'j2c';\n\nconst remove = (id) => {\n    if (id) {\n        const old = document.getElementById(id);\n        if (old) {\n            old.parentNode.removeChild(old);\n        }\n    }\n};\n\n/*\n* id: identifier, used as HTMLElement id for the attached <style></style> element\n* styles: list of lists style Objects\n*/\nconst add = (id, ...styles) => {\n    addToDocument({id}, ...styles);\n};\n\n/*\n* opts: options object\n  * id: identifier, used as HTMLElement id for the attached <style></style> element\n  * document: document reference; default window.document\n* styles: list of lists style Objects\n*/\nconst addToDocument = (opts, ...styles) => {\n\tif(typeof window === \"undefined\"){\n\t\treturn;\n\t}\n    const id = opts.id;\n    const documentRef = opts.document || window.document;\n    remove(id);\n    const styleEl = documentRef.createElement('style');\n    if (id) {\n        styleEl.setAttribute('id', id);\n    }\n    styles.forEach((styleList) => {\n        // each style returns a list\n        if (Object.keys(styleList).length) {\n            styleList.forEach((style) => {\n                const scoped = {'@global': style};\n                const sheet = j2c.sheet(scoped);\n                styleEl.appendChild(documentRef.createTextNode(sheet));\n            });\n        }\n    });\n    documentRef.head.appendChild(styleEl);\n};\n\nexport default {\n    add,\n    addToDocument,\n    remove\n};\n"]}