{"version":3,"sources":["multiple.es6"],"names":["multiple","itemIndex","findItem","id","items","indexOf","item","removeItem","splice","index","replaceItem","newItem","i","length","instanceId","next","show","redraw","remove","mOpts","queue","shift","setTimeout","setPauseState","pause","unpause","makeItem","Promise","resolve","Object","assign","opts","itemOpts","showPromise","hidePromise","didShow","resolveShow","didHide","resolveHide","count","clear","defaultId","push","storedItem","hide","view","filter","toShowItems","isClient","document","body","classList","add","bodyShowClass","tag","map","component","instance","itemData","transitions","key","noneTag"],"mappings":"oEAGA,2E,0CAEA,wG,wEAUA,GAAMA,UAAW,WAAW,CACxB,GAAM,KAAN,CAEM,EAAY,QAAZC,UAAY,GAAQ,CACtB,GAAM,GAAOC,EAASC,CAAT,CAAb,CACA,MAAOC,GAAMC,OAAN,CAAcC,CAAd,CACV,CALD,CAOM,EAAa,QAAbC,WAAa,GAAQ,CACvB,GAAM,GAAQN,EAAUE,CAAV,CAAd,CACc,CAAC,CAAX,IAFmB,EAGnBC,EAAMI,MAAN,CAAaC,CAAb,CAAoB,CAApB,CAEP,CAZD,CAcM,EAAc,QAAdC,YAAc,KAAiB,CACjC,GAAM,GAAQT,EAAUE,CAAV,CAAd,CACc,CAAC,CAAX,IAF6B,GAG7BC,EAAMK,CAAN,EAAeE,CAHc,CAKpC,CAnBD,CAqBM,EAAW,QAAXT,SAAW,GAAQ,CAErB,IAAK,GAAI,GAAI,CAAb,CAAgBU,EAAIR,EAAMS,MAA1B,CAAkC,GAAlC,CACI,GAAIT,EAAMQ,CAAN,EAASE,UAAT,GAAwBX,CAA5B,CACI,MAAOC,GAAMQ,CAAN,CAGlB,CA5BD,CA8BM,EAAO,QAAPG,KAAO,EAAM,CACXX,EAAMS,MADK,GAEXT,EAAM,CAAN,EAASY,IAAT,GAFW,CAGX,kBAAEC,MAAF,EAHW,CAKlB,CAnCD,CAqCM,EAAS,QAATC,QAAS,GAAgB,CACvBC,EAAMC,KADiB,EAEvBhB,EAAMiB,KAAN,EAFuB,CAIvBC,WAAWP,CAAX,CAAiB,CAAjB,CAJuB,EAMvBR,EAAWO,CAAX,CAEP,CA7CD,CA+CM,EAAgB,QAAhBS,cAAgB,KAAuB,CACzC,GAAM,GAAOrB,EAASY,CAAT,CAAb,CACIR,CAFqC,GAGrCA,EAAKkB,KAAL,CAAaA,CAHwB,CAIrClB,EAAKmB,OAAL,CAAe,CAACD,CAJqB,CAM5C,CArDD,CAuDM,EAAW,QAAXE,SAAW,KAA0B,CACvC,GAAI,EAAJ,CAUM,EAAc,GAAIC,QAAJ,CAAY,WAAkB,CAC9C,EAAcC,CACjB,CAFmB,CAVpB,CAcI,CAdJ,CA2BM,EAAc,GAAID,QAAJ,CAAY,WAAkB,CAC9C,EAAcC,CACjB,CAFmB,CA3BpB,CA+BA,MAAOC,QAAOC,MAAP,IAAkBX,CAAlB,CAAyB,CAC5BL,YAD4B,CAE5BiB,KAAMC,CAFsB,CAG5BhB,MAAMG,EAAMC,KAHgB,CAI5Ba,aAJ4B,CAK5BC,aAL4B,CAM5BC,QApCY,QAAVA,QAAU,EAAM,CAClB,GAAM,GAA4B,UAApB,QAAOH,EAAR,CACPA,GADO,CAEPA,CAFN,CAMA,MAHID,GAAKI,OAGT,EAFIJ,EAAKI,OAAL,CAAarB,CAAb,CAEJ,CAAOsB,EAAYtB,CAAZ,CACV,CAsB+B,CAO5BuB,QAvBY,QAAVA,QAAU,EAAM,CAClB,GAAM,GAA4B,UAApB,QAAOL,EAAR,CACPA,GADO,CAEPA,CAFN,CASA,MANID,GAAKM,OAMT,EALIN,EAAKM,OAAL,CAAavB,CAAb,CAKJ,CAHIK,EAAMC,KAGV,EAFIF,EAAOJ,CAAP,CAEJ,CAAOwB,EAAYxB,CAAZ,CACV,CAK+B,CAAzB,CASV,CAhGD,CAkGA,MAAO,CAEHyB,MAAO,uBAAOnC,GAAMS,MAAb,CAFJ,CAIH2B,MAAO,uBAAOpC,GAAMS,MAAN,CAAe,CAAtB,CAJJ,CAMHG,KAAM,gBAAwC,8DAApBG,EAAMsB,SAAc,CACtC,QADsC,CAE1C,GAAItB,EAAMC,KAAV,CACI,EAAOM,EAASK,CAAT,CAAejB,CAAf,CADX,CAEIV,EAAMsC,IAAN,CAAWpC,CAAX,CAFJ,CAGyB,CAAjB,KAAMO,MAHd,EAIQE,GAJR,KAMO,CACH,GAAM,GAAab,EAASY,CAAT,CAAnB,CACA,EAAOY,EAASK,CAAT,CAAejB,CAAf,CAFJ,CAGE6B,CAHF,CAMCjC,EAAYI,CAAZ,CAAwBR,CAAxB,CAND,CAICF,EAAMsC,IAAN,CAAWpC,CAAX,CAIP,CACD,MAAOA,GAAK2B,WACf,CAxBE,CA0BHW,KAAM,eAAkC,8DAApBzB,EAAMsB,SAAc,CAChC,QADgC,OAEhCtB,GAAMC,KAF0B,CAG5BhB,EAAMS,MAHsB,GAI5B,EAAOT,EAAM,CAAN,CAJqB,EAOhC,EAAOF,EAASY,CAAT,CAPyB,CAShCR,CATgC,EAUhCA,EAAKsC,IAAL,GAVgC,CAWzBtC,EAAK4B,WAXoB,EAa7BP,QAAQC,OAAR,CAAgBd,CAAhB,CACV,CAxCE,CA0CHI,OAAQ,iBAAkC,8DAApBC,EAAMsB,SAAc,CACtCvB,EAAOJ,CAAP,CACH,CA5CE,CA8CHU,MAAO,gBAAkC,8DAApBL,EAAMsB,SAAc,CACrClB,KAAoBT,CAApB,CACH,CAhDE,CAkDHW,QAAS,kBAAkC,8DAApBN,EAAMsB,SAAc,CACvClB,KAAqBT,CAArB,CACH,CApDE,CAsDH+B,KAAM,eAAM,CACR,GAAM,GAAczC,EAAM0C,MAAN,CAAa,WAAU,CACvC,MAAOxC,GAAKU,IACf,CAFmB,CAApB,CADQ,MAIH+B,GAAYlC,MAJT,EAWb,qBAAWmC,QAAX,EAXa,EAYHC,SAASC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4BjC,EAAMkC,aAAlC,CAZG,CAeD,sBAAElC,EAAMmC,GAAR,CAAaP,EAAYQ,GAAZ,CAAgB,WAAc,CAC9C,MAAO,mBAAEC,SAAF,CAAYrC,EAAMsC,QAAlB,CAA4B5B,OAAOC,MAAP,IAAkB4B,CAAlB,CAA4B,CAC3DC,YAAaxC,EAAMwC,WADwC,CAE3DC,IAAKF,EAASE,GAAT,EAAgBF,EAAS5C,UAF6B,CAA5B,CAA5B,CAIV,CALmB,CAAb,CAfC,GAKb,qBAAWkC,QAAX,EALa,EAMHC,SAASC,IAAT,CAAcC,SAAd,CAAwBjC,MAAxB,CAA+BC,EAAMkC,aAArC,CANG,CASG,sBAAElC,EAAM0C,OAAR,CATH,CAqBX,CA3EE,CA6EV,CAhLD,C,gBAkLe7D,Q","file":"multiple.js","sourcesContent":["/*\nHelper module to manage multiple items of the same component type.\n*/\nimport m from 'mithril';\nimport 'polythene/common/object.assign';\nimport isomorphic from 'polythene/common/isomorphic';\n\n/*\nmOpts:\n- instance\n- defaultId\n- tag\n- noneTag\n- bodyShowClass\n*/\nconst multiple = (mOpts) => {\n    const items = [];\n\n    const itemIndex = (id) => {\n        const item = findItem(id);\n        return items.indexOf(item);\n    };\n\n    const removeItem = (id) => {\n        const index = itemIndex(id);\n        if (index !== -1) {\n            items.splice(index, 1);\n        }\n    };\n\n    const replaceItem = (id, newItem) => {\n        const index = itemIndex(id);\n        if (index !== -1) {\n            items[index] = newItem;\n        }\n    };\n\n    const findItem = (id) => {\n        // traditional for loop for IE10\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].instanceId === id) {\n                return items[i];\n            }\n        }\n    };\n\n    const next = () => {\n        if (items.length) {\n            items[0].show = true;\n            m.redraw();\n        }\n    };\n\n    const remove = (instanceId) => {\n        if (mOpts.queue) {\n            items.shift();\n            // add time to remove the previous instance before drawing the next one\n            setTimeout(next, 0);\n        } else {\n            removeItem(instanceId);\n        }\n    };\n\n    const setPauseState = (pause, instanceId) => {\n        const item = findItem(instanceId);\n        if (item) {\n            item.pause = pause;\n            item.unpause = !pause;\n        }\n    };\n\n    const makeItem = (itemOpts, instanceId) => {\n        let resolveShow;\n        const didShow = () => {\n            const opts = (typeof itemOpts === 'function')\n                ? itemOpts()\n                : itemOpts;\n            if (opts.didShow) {\n                opts.didShow(instanceId);\n            }\n            return resolveShow(instanceId);\n        };\n        const showPromise = new Promise(function(resolve) {\n            resolveShow = resolve;\n        });\n\n        let resolveHide;\n        const didHide = () => {\n            const opts = (typeof itemOpts === 'function')\n                ? itemOpts()\n                : itemOpts;\n            if (opts.didHide) {\n                opts.didHide(instanceId);\n            }\n            if (mOpts.queue) {\n                remove(instanceId);\n            }\n            return resolveHide(instanceId);\n        };\n        const hidePromise = new Promise(function(resolve) {\n            resolveHide = resolve;\n        });\n\n        return Object.assign({}, mOpts, {\n            instanceId,\n            opts: itemOpts,\n            show: mOpts.queue ? false : true,\n            showPromise,\n            hidePromise,\n            didShow,\n            didHide\n        });\n    };\n\n    return {\n\n        count: () => (items.length),\n\n        clear: () => (items.length = 0),\n\n        show: (opts, instanceId = mOpts.defaultId) => {\n            let item;\n            if (mOpts.queue) {\n                item = makeItem(opts, instanceId);\n                items.push(item);\n                if (items.length === 1) {\n                    next();\n                }\n            } else {\n                const storedItem = findItem(instanceId);\n                item = makeItem(opts, instanceId);\n                if (!storedItem) {\n                    items.push(item);\n                } else {\n                    replaceItem(instanceId, item);\n                }\n            }\n            return item.showPromise;\n        },\n\n        hide: (instanceId = mOpts.defaultId) => {\n            let item;\n            if (mOpts.queue) {\n                if (items.length) {\n                    item = items[0];\n                }\n            } else {\n                item = findItem(instanceId);\n            }\n            if (item) {\n                item.hide = true;\n                return item.hidePromise;\n            }\n            return Promise.resolve(instanceId);\n        },\n\n        remove: (instanceId = mOpts.defaultId) => {\n            remove(instanceId);\n        },\n\n        pause: (instanceId = mOpts.defaultId) => {\n            setPauseState(true, instanceId);\n        },\n\n        unpause: (instanceId = mOpts.defaultId) => {\n            setPauseState(false, instanceId);\n        },\n\n        view: () => {\n            const toShowItems = items.filter((item) => {\n                return item.show;\n            });\n            if (!toShowItems.length) {\n\t\t\t\tif(isomorphic.isClient()) {\n\t                document.body.classList.remove(mOpts.bodyShowClass);\n\t\t\t\t}\n                // placeholder because we cannot return null\n                return m(mOpts.noneTag);\n            } else {\n\t\t\t\tif(isomorphic.isClient()) {\n                \tdocument.body.classList.add(mOpts.bodyShowClass);\n\t\t\t\t}\n            }\n            return m(mOpts.tag, toShowItems.map((itemData) => {\n                return m.component(mOpts.instance, Object.assign({}, itemData, {\n                    transitions: mOpts.transitions,\n                    key: itemData.key || itemData.instanceId\n                }));\n            }));\n        }\n    };\n};\n\nexport default multiple;\n"]}