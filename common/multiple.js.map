{"version":3,"sources":["multiple.es6"],"names":["_mithril","require","_isomorphic","multiple","mOpts","items","itemIndex","id","item","findItem","indexOf","removeItem","index","splice","replaceItem","newItem","i","length","instanceId","next","show","_mithril2","default","redraw","_remove","queue","shift","setTimeout","setPauseState","pause","unpause","makeItem","itemOpts","resolveShow","didShow","opts","showPromise","Promise","resolve","resolveHide","didHide","hidePromise","Object","assign","count","clear","arguments","undefined","defaultId","push","storedItem","hide","remove","view","toShowItems","filter","_isomorphic2","isClient","document","body","classList","add","bodyShowClass","tag","map","itemData","component","instance","transitions","key","noneTag"],"mappings":"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","file":"multiple.js","sourcesContent":["/*\nHelper module to manage multiple items of the same component type.\n*/\nimport m from 'mithril';\nimport 'polythene/common/object.assign';\nimport isomorphic from 'polythene/common/isomorphic';\n\n/*\nmOpts:\n- instance\n- defaultId\n- tag\n- noneTag\n- bodyShowClass\n*/\nconst multiple = (mOpts) => {\n    const items = [];\n\n    const itemIndex = (id) => {\n        const item = findItem(id);\n        return items.indexOf(item);\n    };\n\n    const removeItem = (id) => {\n        const index = itemIndex(id);\n        if (index !== -1) {\n            items.splice(index, 1);\n        }\n    };\n\n    const replaceItem = (id, newItem) => {\n        const index = itemIndex(id);\n        if (index !== -1) {\n            items[index] = newItem;\n        }\n    };\n\n    const findItem = (id) => {\n        // traditional for loop for IE10\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].instanceId === id) {\n                return items[i];\n            }\n        }\n    };\n\n    const next = () => {\n        if (items.length) {\n            items[0].show = true;\n            m.redraw();\n        }\n    };\n\n    const remove = (instanceId) => {\n        if (mOpts.queue) {\n            items.shift();\n            // add time to remove the previous instance before drawing the next one\n            setTimeout(next, 0);\n        } else {\n            removeItem(instanceId);\n        }\n    };\n\n    const setPauseState = (pause, instanceId) => {\n        const item = findItem(instanceId);\n        if (item) {\n            item.pause = pause;\n            item.unpause = !pause;\n        }\n    };\n\n    const makeItem = (itemOpts, instanceId) => {\n        let resolveShow;\n        const didShow = () => {\n            const opts = (typeof itemOpts === 'function')\n                ? itemOpts()\n                : itemOpts;\n            if (opts.didShow) {\n                opts.didShow(instanceId);\n            }\n            return resolveShow(instanceId);\n        };\n        const showPromise = new Promise(function(resolve) {\n            resolveShow = resolve;\n        });\n\n        let resolveHide;\n        const didHide = () => {\n            const opts = (typeof itemOpts === 'function')\n                ? itemOpts()\n                : itemOpts;\n            if (opts.didHide) {\n                opts.didHide(instanceId);\n            }\n            if (mOpts.queue) {\n                remove(instanceId);\n            }\n            return resolveHide(instanceId);\n        };\n        const hidePromise = new Promise(function(resolve) {\n            resolveHide = resolve;\n        });\n\n        return Object.assign({}, mOpts, {\n            instanceId,\n            opts: itemOpts,\n            show: mOpts.queue ? false : true,\n            showPromise,\n            hidePromise,\n            didShow,\n            didHide\n        });\n    };\n\n    return {\n\n        count: () => (items.length),\n\n        clear: () => (items.length = 0),\n\n        show: (opts, instanceId = mOpts.defaultId) => {\n            let item;\n            if (mOpts.queue) {\n                item = makeItem(opts, instanceId);\n                items.push(item);\n                if (items.length === 1) {\n                    next();\n                }\n            } else {\n                const storedItem = findItem(instanceId);\n                item = makeItem(opts, instanceId);\n                if (!storedItem) {\n                    items.push(item);\n                } else {\n                    replaceItem(instanceId, item);\n                }\n            }\n            return item.showPromise;\n        },\n\n        hide: (instanceId = mOpts.defaultId) => {\n            let item;\n            if (mOpts.queue) {\n                if (items.length) {\n                    item = items[0];\n                }\n            } else {\n                item = findItem(instanceId);\n            }\n            if (item) {\n                item.hide = true;\n                return item.hidePromise;\n            }\n            return Promise.resolve(instanceId);\n        },\n\n        remove: (instanceId = mOpts.defaultId) => {\n            remove(instanceId);\n        },\n\n        pause: (instanceId = mOpts.defaultId) => {\n            setPauseState(true, instanceId);\n        },\n\n        unpause: (instanceId = mOpts.defaultId) => {\n            setPauseState(false, instanceId);\n        },\n\n        view: () => {\n            const toShowItems = items.filter((item) => {\n                return item.show;\n            });\n            if (!toShowItems.length) {\n\t\t\t\tif(isomorphic.isClient()) {\n\t                document.body.classList.remove(mOpts.bodyShowClass);\n\t\t\t\t}\n                // placeholder because we cannot return null\n                return m(mOpts.noneTag);\n            } else {\n\t\t\t\tif(isomorphic.isClient()) {\n                \tdocument.body.classList.add(mOpts.bodyShowClass);\n\t\t\t\t}\n            }\n            return m(mOpts.tag, toShowItems.map((itemData) => {\n                return m.component(mOpts.instance, Object.assign({}, itemData, {\n                    transitions: mOpts.transitions,\n                    key: itemData.key || itemData.instanceId\n                }));\n            }));\n        }\n    };\n};\n\nexport default multiple;\n"]}