{"version":3,"sources":["validation-helper.es6"],"names":["opts","element","invalid","getIndex","i","fieldStates","length","elProp","el","getInvalidIndex","invalidProp","submit","e","preventDefault","firstInvalidIndex","onValidated","focus","update","state","index","push"],"mappings":"oFACe,UAAe,iEACpB,EAASA,EAAKC,OAAL,EAAgB,IADL,CAEpB,EAAcD,EAAKE,OAAL,EAAgB,SAFV,CAIpB,IAJoB,CAkBpB,EAAW,QAAXC,SAAW,GAAQ,CACrB,IAAK,GAAI,GAAI,CAAb,CAAgBC,EAAIC,EAAYC,MAAhC,CAAwC,GAAxC,CACI,GAAID,EAAYD,CAAZ,EAAeG,CAAf,IAA2BC,CAA/B,CACI,MAAOJ,EAGlB,CAxByB,CA0BpB,EAAkB,QAAlBK,gBAAkB,EAAM,CAC1B,IAAK,GAAI,GAAI,CAAb,CAAgBL,EAAIC,EAAYC,MAAhC,CAAwC,GAAxC,CACI,GAAID,EAAYD,CAAZ,EAAeM,CAAf,CAAJ,CACI,MAAON,EAGlB,CAhCyB,CA2C1B,MAAO,CACHO,OAtCW,QAATA,OAAS,KAAoB,CAC/BC,EAAEC,cAAF,EAD+B,CAE/B,GAAM,GAAoBJ,GAA1B,CACIK,UAH2B,CAQ3BC,EAAYH,CAAZ,CAR2B,CAIvBP,EAAYS,CAAZ,EAA+BP,CAA/B,CAJuB,EAKvBF,EAAYS,CAAZ,EAA+BP,CAA/B,EAAuCS,KAAvC,EAKX,CA2BM,CAEHC,OAXW,QAATA,OAAS,GAAW,CACtB,GAAM,GAAQd,EAASe,EAAMX,CAAN,CAAT,CAAd,CACIY,UAFkB,CAGlBd,EAAYe,IAAZ,CAAiBF,CAAjB,CAHkB,CAKlBb,EAAYc,CAAZ,EAAqBD,CAE5B,CAEM,CAIV,C","file":"validation-helper.js","sourcesContent":["\nexport default (opts = {}) => {\n    const elProp = opts.element || 'el';\n    const invalidProp = opts.invalid || 'invalid';\n\n    const fieldStates = [];\n\n    const submit = (e, onValidated) => {\n        e.preventDefault();\n        const firstInvalidIndex = getInvalidIndex();\n        if (firstInvalidIndex !== undefined) {\n            if (fieldStates[firstInvalidIndex][elProp]) {\n                fieldStates[firstInvalidIndex][elProp].focus();\n            }\n        } else {\n            onValidated(e);\n        }\n    };\n\n    const getIndex = (el) => {\n        for (let i = 0; i < fieldStates.length; i++) {\n            if (fieldStates[i][elProp] === el) {\n                return i;\n            }\n        }\n    };\n\n    const getInvalidIndex = () => {\n        for (let i = 0; i < fieldStates.length; i++) {\n            if (fieldStates[i][invalidProp]) {\n                return i;\n            }\n        }\n    };\n\n    const update = (state) => {\n        const index = getIndex(state[elProp]);\n        if (index === undefined) {\n            fieldStates.push(state);\n        } else {\n            fieldStates[index] = state;\n        }\n    };\n\n    return {\n        submit,\n        update\n    };\n};\n"]}