{"version":3,"sources":["mixin.es6"],"names":["_config","require","vendorize","what","prefixes","vendorsSel","map","v","join","_defineProperty","fit","offset","arguments","length","undefined","offsetPx","position","top","right","bottom","left","fontSmoothing","smoothing","-webkit-font-smoothing","-moz-osx-font-smoothing","ellipsis","lines","lineHeight","unit","text-overflow","overflow","display","height","Object","assign","text-rendering","-webkit-line-clamp","-webkit-box-orient","max-height","clearfix","&:after","content","clear","hairline","sticky","zIndex","z-index","createStyles","common","fn","Array","isArray","o","scope","defaultTransition","properties","duration","_config2","default","animation_duration","curve","animation_curve_default","transition-delay","prefixes_transition","transition-duration","transition-timing-function","transition-property","fluidScale","property","minValue","maxValue","minBreakpoint","maxBreakpoint","orientation","fluidScales","sizes","sorted","sort","minBreakpoints","data","maxBreakpoints","shift","push","minValues","maxValues","index","fluidRule","isFirst","isLast","orientationUnit","orientationRule","rule","multiplier","adder","formula","p"],"mappings":"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","file":"mixin.js","sourcesContent":["// Mixins for j2c\n\nimport common from 'polythene/config/config';\nimport 'polythene/common/object.assign';\n\n// Creates j2c vendor key string from vendor list\n// mixin.vendorize({'user-select': 'none'}, common.prefixes_user_select)\nconst vendorize = (what, prefixes) => {\n    const vendorsSel = prefixes.map((v) => ('_' + v + '$')).join('');\n    return {\n        [vendorsSel]: what\n    };\n};\n\n// Centers an item absolutely within relative parent\n// mixin.fit()\nconst fit = (offset = 0) => {\n    const offsetPx = offset + 'px';\n    return {\n        position: 'absolute',\n        top: offsetPx,\n        right: offsetPx,\n        bottom: offsetPx,\n        left: offsetPx\n    };\n};\n\n// Optional font smoothing\n// mixin.fontSmoothing()\nconst fontSmoothing = (smoothing = true) => {\n    if (smoothing) {\n        return {\n            '-webkit-font-smoothing': 'antialiased',\n            '-moz-osx-font-smoothing': 'grayscale'\n        };\n    } else {\n        return {\n            '-webkit-font-smoothing': 'subpixel-antialiased',\n            '-moz-osx-font-smoothing': 'auto'\n        };\n    }\n};\n\n// Breaks off a line with ...\n// unless lines is 'none'\n// mixin.ellipsis(1, 16) // max 1 line, 16px high\n// mixin.ellipsis(2, 1.3, 'em') // max 2 lines, 2.6em high\nconst ellipsis = (lines, lineHeight, unit = 'px') => {\n    if (lines === 'none') {\n        return {\n            'text-overflow': 'initial',\n            overflow: 'initial',\n            display: 'block',\n            height: 'auto'\n        };\n    }\n    return Object.assign(\n        {},\n        {\n            overflow: 'hidden',\n            'text-overflow': 'ellipsis',\n            'text-rendering': 'auto' // Samsung Android\n        },\n        (lines !== undefined) ? {\n            '-webkit-line-clamp': lines,\n            '-webkit-box-orient': 'vertical',\n            display: '-webkit-box'\n        } : null,\n        (lineHeight !== undefined) ? {\n            'max-height': (lines * lineHeight) + unit\n        } : null\n    );\n};\n\n// Clears float\n// mixin.clearfix()\nconst clearfix = () => ({\n    '&:after': {\n        content: '\"\"',\n        display: 'table',\n        clear: 'both'\n    }\n});\n\n\n// Creates a very thin line\n// disabled, does not work in Chrome\n// mixin.hairline()\nconst hairline = () => ({});\n\n// const hairline = (which) => ({\n//     [`${which}-width`]: '1px',\n//\n//     ' html.pe-hairlines &': {\n//         [`${which}-width`]: '0.5px'\n//     }\n// });\n\n// Test if browser handles 0.5px borders\n// and add class pe-hairlines if so\n// if (window.devicePixelRatio && devicePixelRatio >= 2) {\n//     const el = document.createElement('div');\n//     el.style.border = '.5px solid transparent';\n//     document.body.appendChild(el);\n//     if (el.offsetHeight === 1) {\n//         document.querySelector('html').classList.add('pe-hairlines');\n//     }\n//     document.body.removeChild(el);\n// }\n\n// Creates sticky headers in a scrollable list\n// Does not work in Chrome: http://caniuse.com/#feat=css-sticky\n// mixin.sticky()\nconst sticky = (zIndex = 1) => ([\n    {position: '-webkit-sticky'},\n    {position: '-moz-sticky'},\n    {position: '-o-sticky'},\n    {position: '-ms-sticky'},\n    {position: 'sticky'},\n    {\n        top: 0,\n        'z-index': zIndex\n    }\n]);\n\n// Polythene utility function to generate style objects with scopes\n// Used in theme files\nconst createStyles = (common, fn) => {\n    if (Array.isArray(common)) {\n        return common.map((o) => {\n            for (let scope in o) {\n                return {[scope]: fn(o[scope])};\n            };\n        });\n    } else {\n        return fn(common);\n    }\n};\n\n// Creats a transition with presets\n// mixin.defaultTransition('opacity', config.animation_duration)\nconst defaultTransition = (properties = 'all', duration = common.animation_duration, curve = common.animation_curve_default) => {\n    return [\n        vendorize({\n            'transition-delay': 0\n        }, common.prefixes_transition),\n        vendorize({\n            'transition-duration': duration\n        }, common.prefixes_transition),\n        vendorize({\n            'transition-timing-function': curve\n        }, common.prefixes_transition),\n        vendorize({\n            'transition-property': properties\n        }, common.prefixes_transition),\n    ];\n};\n\n// Scales an item dynamically between 2 screen sizes\n// mixin.fluidScale('font-size', 'px', 50, 100);\n// => 50px at 320 and below; scaling between sizes 50px and 100px in between the breakpoints; 100px at 1920 and above\nconst fluidScale = (property, unit, minValue, maxValue, minBreakpoint = 320, maxBreakpoint = 1920, orientation = 'horizontal') => (fluidScales([property], unit, [[minBreakpoint, minValue], [maxBreakpoint, maxValue]], orientation));\n\n// Scales an item dynamically between multiple screen sizes\n// mixin.fluidScales(['padding-left', 'padding-right'], 'px', [[375, 40], [320, 35], [480, 55]])\n// => 35px padding-left and padding-right at 320 and below; scaling between sizes 35px and 40px in between the breakpoints 320 and 375; scaling between sizes 40px and 55px in between the breakpoints 375 and 480; 55px at 480 and above\nconst fluidScales = (property, unit, sizes, orientation) => {\n    const sorted = sizes.sort();\n    const minBreakpoints = sorted.map((data) => (data[0]));\n    const maxBreakpoints = sorted.map((data) => (data[0]));\n    maxBreakpoints.shift();\n    maxBreakpoints.push(minBreakpoints[minBreakpoints.length - 1]);\n    const minValues = sorted.map((data) => (data[1]));\n    const maxValues = sorted.map((data) => (data[1]));\n    maxValues.shift();\n    maxValues.push(minValues[minValues.length - 1]);\n    return sorted.map((data, index) => (fluidRule(\n        property,\n        unit,\n        orientation,\n        minBreakpoints[index],\n        maxBreakpoints[index],\n        minValues[index],\n        maxValues[index],\n        index === 0,\n        index === sorted.length - 1\n    )));\n};\n\nconst fluidRule = (property, unit, orientation = 'horizontal', minBreakpoint, maxBreakpoint, minValue, maxValue, isFirst, isLast) => {\n    const orientationUnit = (orientation === 'vertical') ? 'vh' : 'vw';\n    const orientationRule = (orientation === 'vertical') ? 'height' : 'width';\n    const rule = isLast\n        ? [`@media (min-${orientationRule}: ${minBreakpoint}px)`]\n        : [`@media (min-${orientationRule}: ${minBreakpoint}px) and (max-${orientationRule}: ${maxBreakpoint}px)`];\n    const multiplier = `((${maxValue} - ${minValue}) / (${maxBreakpoint} - ${minBreakpoint}) * 100${orientationUnit})`;\n    const adder = `(((${minValue} * ${maxBreakpoint}) - (${maxValue} * ${minBreakpoint})) / (${maxBreakpoint} - ${minBreakpoint})) * 1${unit}`;\n    const formula = `calc(${multiplier} + ${adder})`;\n    const properties = Array.isArray(property) ? property : [property];\n    return [\n        isFirst ? properties.map((p) => ({[p]: `${minValue}${unit}`})) : null,\n        {[rule]: properties.map((p) => ({[p]: isLast ? `${maxValue}${unit}` : formula}))}\n    ];\n};\n\nexport default {\n    clearfix,\n    createStyles,\n    defaultTransition,\n    ellipsis,\n    fit,\n    fontSmoothing,\n    fluidScale,\n    fluidScales,\n    hairline,\n    sticky,\n    vendorize\n};\n"]}