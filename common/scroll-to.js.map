{"version":3,"sources":["scroll-to.es6"],"names":["_easing","require","scrollTo","opts","element","which","direction","to","duration","start","change","animationStart","Date","getTime","animating","Promise","resolve","animateScroll","requestAnimFrame","now","percentage","val","_easing2","default","easeInOutCubic","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout"],"mappings":"qJAMA,IAAAA,SAAAC,QAAA,oEAsBMC,SAAW,SAACC,MACd,GAAMC,SAAUD,KAAKC,QACfC,MAA4B,eAAnBF,KAAKG,UAA8B,aAAe,YAC3DC,GAAKJ,KAAKI,GACVC,SAA2B,IAAhBL,KAAKK,SAChBC,MAAQL,QAAQC,OAChBK,OAASH,GAAKE,MACdE,gBAAiB,GAAIC,OAAOC,UAC9BC,WAAY,CAChB,OAAO,IAAIC,SAAQ,SAASC,SACxB,GAAMC,eAAgB,QAAhBA,iBACF,GAAKH,UAAL,CAGAI,iBAAiBD,cACjB,IAAME,MAAM,GAAIP,OAAOC,UACjBO,YAAeD,IAAMR,gBAAkBH,SACvCa,IAAMZ,MAAQC,OAASY,SAAAC,QAAOC,eAAeJ,WACnDhB,SAAQC,OAASgB,IACbD,YAAc,IACdhB,QAAQC,OAASE,GACjBO,WAAY,EACZE,YAGRE,kBAAiBD,kBAInBC,iBAAoB,WACtB,MAAOO,QAAOC,uBAAyBD,OAAOE,6BAA+BF,OAAOG,0BAA6B,SAAAC,UAC7GJ,OAAOK,WAAWD,SAAU,IAAO,wBAI5B3B","file":"scroll-to.js","sourcesContent":["/*\nAnimated scroll to a position.\nDerived from https://github.com/madebysource/animated-scrollto\nAdapted to Mithril and rewritten to es6.\n*/\n\nimport easing from 'polythene/common/easing';\n\n/*\nopts:\n    element: HTML Element\n    to: position\n    duration: seconds\n    direction: 'vertical' or 'horizontal'\n\n\nFunction returns a Promise:\n\n    scrollTo({\n        element: scroller,\n        to: left,\n        duration: .5,\n        direction: 'horizontal'\n    }).then(() => {\n        console.log('scroll done')\n    });\n\n*/\nconst scrollTo = (opts) => {\n    const element = opts.element;\n    const which = (opts.direction === 'horizontal') ? 'scrollLeft' : 'scrollTop';\n    const to = opts.to;\n    const duration = opts.duration * 1000;\n    const start = element[which];\n    const change = to - start;\n    const animationStart = new Date().getTime();\n    let animating = true;\n    return new Promise(function(resolve) {\n        const animateScroll = function() {\n            if (!animating) {\n                return;\n            }\n            requestAnimFrame(animateScroll);\n            const now = new Date().getTime();\n            const percentage = ((now - animationStart) / duration);\n            const val = start + change * easing.easeInOutCubic(percentage);\n            element[which] = val;\n            if (percentage >= 1) {\n                element[which] = to;\n                animating = false;\n                resolve();\n            }\n        };\n        requestAnimFrame(animateScroll);\n    });\n};\n\nconst requestAnimFrame = (() => {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || (callback => {\n        window.setTimeout(callback, 1000 / 60);\n    });\n})();\n\nexport default scrollTo;\n"]}