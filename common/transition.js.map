{"version":3,"sources":["transition.es6"],"names":["_mithril","require","SHOW_DURATION","HIDE_DURATION","SHOW_DELAY","HIDE_DELAY","TRANSITION","show","opts","transition","hide","getDuration","state","undefined","showDuration","hideDuration","getDelay","showDelay","hideDelay","deferred","_mithril2","default","el","resolve","promise","transitionDuration","delay","style","beforeTransition","beforeShow","transitionDelay","applyTransition","showClass","classList","applyAfterTransition","afterHide","doTransition","setTimeout","maybeDelayTransition"],"mappings":"qJAIA,IAAAA,UAAAC,QAAA,sDAGMC,cAAgB,IAChBC,cAAgB,GAChBC,WAAa,EACbC,WAAa,EACbC,WAAa,OAGbC,KAAO,SAACC,MACV,MAAOC,YAAWD,KAAM,SAGtBE,KAAO,SAACF,MACV,MAAOC,YAAWD,KAAM,SAWtBG,YAAc,SAACH,KAAMI,OACvB,GAAMH,YAAaD,KAAKC,YAAcH,UACtC,OAAmB,SAAfG,WACO,EACe,SAAfA,YAAmC,SAAVG,MACzB,EACe,SAAfH,YAAmC,SAAVG,MACzB,EAGW,SAAVA,MAA2CC,SAAtBL,KAAKM,aAA8BN,KAAKM,aAAeZ,cAAuCW,SAAtBL,KAAKO,aAA8BP,KAAKO,aAAeZ,eAa9Ja,SAAW,SAACR,KAAMI,OACpB,GAAMH,YAAaD,KAAKC,YAAcH,UACtC,OAAmB,SAAfG,WACO,EACe,SAAfA,YAAmC,SAAVG,MACzB,EACe,SAAfH,YAAmC,SAAVG,MACzB,EAGW,SAAVA,MAAwCC,SAAnBL,KAAKS,UAA2BT,KAAKS,UAAYb,WAAiCS,SAAnBL,KAAKU,UAA2BV,KAAKU,UAAYb,YAoB/II,WAAa,SAACD,KAAMI,OACtB,GAAMO,UAAWC,UAAAC,QAAEF,WACbG,GAAKd,KAAKc,EAChB,KAAKA,GAED,MADAH,UAASI,UACFJ,SAASK,OAEpB,IAAMC,oBAAgD,IAA3Bd,YAAYH,KAAMI,OACvCc,MAAgC,IAAxBV,SAASR,KAAMI,OACvBe,MAAQL,GAAGK,MACXC,iBAAoBpB,KAAKqB,YAAwB,SAAVjB,MACvC,WACEe,MAAMF,mBAAqB,MAC3BE,MAAMG,gBAAkB,MACxBtB,KAAKqB,cAEP,KACAE,gBAAkB,WACpBJ,MAAMF,mBAAqBA,mBAAqB,KAChDE,MAAMG,gBAAkBJ,MAAQ,KAC5BlB,KAAKwB,WACLV,GAAGW,UAAqB,SAAVrB,MAAoB,MAAQ,UAAUJ,KAAKwB,WAEzDxB,KAAKD,MAA6B,kBAAdC,MAAKD,MAAiC,SAAVK,OAChDJ,KAAKD,OAELC,KAAKE,MAA6B,kBAAdF,MAAKE,MAAiC,SAAVE,OAChDJ,KAAKE,QAGPwB,qBAAuB,WACrB1B,KAAK2B,WAAuB,SAAVvB,QAClBe,MAAMF,mBAAqB,MAC3BE,MAAMG,gBAAkB,MACxBtB,KAAK2B,cAIPC,aAAe,WACjBL,kBACAM,WAAW,WACPH,uBACAf,SAASI,WACVE,mBAAqBC,QAGtBY,qBAAuB,WACE,IAAvBb,mBACAW,eAEAC,WAAW,WACPD,gBACD,GAaX,OATIR,mBACAA,mBACAS,WAAW,WACPC,wBACD,IAEHA,uBAGGnB,SAASK,0BAIhBjB,KAAAA,KACAG,KAAAA","file":"transition.js","sourcesContent":["/*\nGeneric show/hide transition module\n*/\n\nimport m from 'mithril';\n\n// defaults\nconst SHOW_DURATION = .220; // default dialog timing\nconst HIDE_DURATION = .200; // default dialog timing\nconst SHOW_DELAY = 0;\nconst HIDE_DELAY = 0;\nconst TRANSITION = 'both';\n\n// See: transition\nconst show = (opts) => {\n    return transition(opts, 'show');\n};\n\nconst hide = (opts) => {\n    return transition(opts, 'hide');\n};\n\n/*\nopts:\n- transition\n- showDuration\n- hideDuration\n\n- state (show, hide)\n*/\nconst getDuration = (opts, state) => {\n    const transition = opts.transition || TRANSITION;\n    if (transition === 'none') {\n        return 0;\n    } else if (transition === 'show' && state === 'hide') {\n        return 0;\n    } else if (transition === 'hide' && state === 'show') {\n        return 0;\n    } else {\n        // both\n        return (state === 'show') ? (opts.showDuration !== undefined) ? opts.showDuration : SHOW_DURATION : (opts.hideDuration !== undefined) ? opts.hideDuration : HIDE_DURATION;\n    }\n    return 0;\n};\n\n/*\nopts:\n- transition (show, hide, both)\n- showDelay\n- hideDelay\n\n- state (show, hide)\n*/\nconst getDelay = (opts, state) => {\n    const transition = opts.transition || TRANSITION;\n    if (transition === 'none') {\n        return 0;\n    } else if (transition === 'show' && state === 'hide') {\n        return 0;\n    } else if (transition === 'hide' && state === 'show') {\n        return 0;\n    } else {\n        // both\n        return (state === 'show') ? (opts.showDelay !== undefined) ? opts.showDelay : SHOW_DELAY : (opts.hideDelay !== undefined) ? opts.hideDelay : HIDE_DELAY;\n    }\n    return 0;\n};\n\n/*\nopts:\n- el\n- duration\n- delay\n- showClass\n- beforeShow\n- show\n- hide\n- afterHide\n- showDelay\n- hideDelay\n\n- state (show, hide)\n*/\nconst transition = (opts, state) => {\n    const deferred = m.deferred();\n    const el = opts.el;\n    if (!el) {\n        deferred.resolve();\n        return deferred.promise;\n    }\n    const transitionDuration = getDuration(opts, state) * 1000;\n    const delay = getDelay(opts, state) * 1000;\n    const style = el.style;\n    const beforeTransition = (opts.beforeShow && state === 'show')\n        ? () => {\n            style.transitionDuration = '0ms';\n            style.transitionDelay = '0ms';\n            opts.beforeShow();\n        }\n        : null;\n    const applyTransition = () => {\n        style.transitionDuration = transitionDuration + 'ms';\n        style.transitionDelay = delay + 'ms';\n        if (opts.showClass) {\n            el.classList[(state === 'show') ? 'add' : 'remove'](opts.showClass);\n        }\n        if (opts.show && typeof opts.show === 'function' && state === 'show') {\n            opts.show();\n        }\n        if (opts.hide && typeof opts.hide === 'function' && state === 'hide') {\n            opts.hide();\n        }\n    };\n    const applyAfterTransition = () => {\n        if (opts.afterHide && state === 'hide') {\n            style.transitionDuration = '0ms';\n            style.transitionDelay = '0ms';\n            opts.afterHide();\n        }\n    };\n\n    const doTransition = () => {\n        applyTransition();\n        setTimeout(() => {\n            applyAfterTransition();\n            deferred.resolve();\n        }, transitionDuration + delay);\n    };\n\n    const maybeDelayTransition = () => {\n        if (transitionDuration === 0) {\n            doTransition();\n        } else {\n            setTimeout(() => {\n                doTransition();\n            }, 0);\n        }\n    };\n\n    if (beforeTransition) {\n        beforeTransition();\n        setTimeout(() => {\n            maybeDelayTransition();\n        }, 0);\n    } else {\n        maybeDelayTransition();\n    }\n\n    return deferred.promise;\n};\n\nexport default {\n    show,\n    hide\n};\n"]}