{"version":3,"sources":["color.es6"],"names":["style","scope","color","config","tint","createStyles"],"mappings":"oEAAA,oF,8MAEA,GAAMA,OAAQ,aAA8B,8DAAP,EAAO,CACxC,MAAO,oBACFC,EAAQ,eADN,CACwB,CAEvBC,MAAOC,EAAO,SAAWC,CAAX,CAAkB,eAAzB,CAFgB,CAIvB,6BAA8B,CAC1BF,MAAO,SADmB,CAG1B,6CAH0B,CAJP,CAWvB,2BAA4B,CACxB,mCAAoC,CAChC,mBAAoBC,EAAO,SAAWC,CAAX,CAAkB,oBAAzB,CADY,CADZ,CAXL,CAiBvB,wBAAyB,CACrBF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,aAAzB,CADc,CAErB,eAAgBD,EAAO,SAAWC,CAAX,CAAkB,sBAAzB,CAFK,CAjBF,CAsBvB,wBAAyB,CACrBF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,aAAzB,CADc,CAtBF,CA0BvB,qDAAsD,CAClD,mCAAoC,CAChC,mBAAoB,aADY,CAEhC,mBAAoB,6BAA+BD,EAAO,SAAWC,CAAX,CAAkB,sBAAzB,CAA/B,CAAkF,kCAFtE,CADc,CA1B/B,CAiCvB,2BAA4B,CACxB,8CAA+C,CAC3CF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,sBAAzB,CADoC,CADvB,CAjCL,CAuCvB,2BAA4B,CACxB,8CAA+C,CAC3CF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,sBAAzB,CADoC,CADvB,CAvCL,CA6CvB,0BAA2B,CAEvB,sDAAuD,CACnDF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,iBAAzB,CAD4C,CAFhC,CAMvB,wDAAyD,CACrD,8BAA+B,CAC3BF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,kBAAzB,CADoB,CADsB,CANlC,CA7CJ,CA0DvB,+CAAgD,CAC5CF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,YAAzB,CADqC,CA1DzB,CA8DvB,8DAA+D,CAC3D,wBAAyB,CACrB,eAAgBD,EAAO,SAAWC,CAAX,CAAkB,qBAAzB,CADK,CAErB,aAAc,MAFO,CADkC,CAK3D,wBAAyB,CACrBF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,mBAAzB,CADc,CALkC,CAQ3D,qEAAsE,CAClEF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,mBAAzB,CAD2D,CARX,CAW3D,gDAAiD,CAC7CF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,mBAAzB,CADsC,CAXU,CAc3D,6BAA8B,CAC1B,mCAAoC,CAChC,mBAAoBD,EAAO,SAAWC,CAAX,CAAkB,qBAAzB,CADY,CADV,CAd6B,CA9DxC,CAmFvB,yCAA0C,CACtC,qBAAsB,kBAAoBD,EAAO,SAAWC,CAAX,CAAkB,mBAAzB,CAApB,CAAoE,QADpD,CAEtCF,MAAOC,EAAO,SAAWC,CAAX,CAAkB,aAAzB,EAA0C,aAFX,CAnFnB,CADxB,EA0FV,CA3FD,CA6FMC,aAAe,WAAY,CAC7B,MAAO,CACHL,MAAMG,CAAN,CAAc,OAAd,CADG,CAEH,CACI,iBAAkB,CAEdH,MAAMG,CAAN,CAAc,MAAd,CAAsB,GAAtB,CAFc,CAIdH,MAAMG,CAAN,CAAc,MAAd,CAAsB,GAAtB,CAJc,CADtB,CAFG,CAWV,CAzGD,C,gBA2Ge,kBAAa,iBAAME,YAAN,CAAmBF,CAAnB,CAA2BE,YAA3B,CAAb,C","file":"color.js","sourcesContent":["import mixin from 'polythene/common/mixin';\n\nconst style = (config, tint, scope = '') => {\n    return [{\n        [scope + '.pe-textfield']: {\n            // border color\n            color: config['color_' + tint + '_focus_border'], // override by specifying 'color'\n\n            ' .pe-textfield__input-area': {\n                color: 'inherit',\n\n                '&:after': {\n                    'background-color': 'currentcolor'\n                }\n            },\n            '&.pe-textfield--counter ': {\n                ' .pe-textfield__input-area:after': {\n                    'background-color': config['color_' + tint + '_counter_ok_border']\n                }\n            },\n\n            ' .pe-textfield__input': {\n                color: config['color_' + tint + '_input_text'],\n                'border-color': config['color_' + tint + '_input_bottom_border']\n            },\n\n            ' .pe-textfield__label': {\n                color: config['color_' + tint + '_label_text']\n            },\n\n            '&.pe-textfield--disabled, &.pe-textfield--readonly': {\n                ' .pe-textfield__input-area:after': {\n                    'background-color': 'transparent',\n                    'background-image': 'linear-gradient(to right, ' + config['color_' + tint + '_disabled_label_text'] + ' 20%, rgba(255, 255, 255, 0) 0%)',\n                }\n            },\n\n            '&.pe-textfield--disabled': {\n                ' .pe-textfield__input, .pe-textfield__label': {\n                    color: config['color_' + tint + '_disabled_label_text']\n                }\n            },\n\n            '&.pe-textfield--readonly': {\n                ' .pe-textfield__input, .pe-textfield__label': {\n                    color: config['color_' + tint + '_readonly_label_text']\n                }\n            },\n\n            '&.pe-textfield--focused': {\n                // note: not when textfield--dirty and not textfield--focused\n                '&.pe-textfield--floating-label .pe-textfield__label': {\n                    color: config['color_' + tint + '_highlight_text']\n                },\n\n                '&.pe-textfield--required.pe-textfield--floating-label': {\n                    ' .pe-textfield__label:after': {\n                        color: config['color_' + tint + '_required_symbol']\n                    }\n                }\n            },\n\n            ' .pe-textfield__help, .pe-textfield__counter': {\n                color: config['color_' + tint + '_help_text']\n            },\n\n            '&.pe-textfield--invalid:not(.pe-textfield--hide-validation)': {\n                ' .pe-textfield__input': {\n                    'border-color': config['color_' + tint + '_input_error_border'],\n                    'box-shadow': 'none'\n                },\n                ' .pe-textfield__label': {\n                    color: config['color_' + tint + '_input_error_text']\n                },\n                ' .pe-textfield__error, .pe-textfield__counter, .pe-textfield__help': {\n                    color: config['color_' + tint + '_input_error_text']\n                },\n                '&.pe-textfield--required .pe-textfield__label': {\n                    color: config['color_' + tint + '_input_error_text']\n                },\n                '&, &.pe-textfield--counter': {\n                    ' .pe-textfield__input-area:after': {\n                        'background-color': config['color_' + tint + '_input_error_border']\n                    }\n                }\n            },\n\n            ' .pe-textfield__input:-webkit-autofill': {\n                '-webkit-box-shadow': '0 0 0px 1000px ' + config['color_' + tint + '_input_background'] + ' inset',\n                color: config['color_' + tint + '_input_text'] + ' !important'\n            }\n        }\n    }];\n};\n\nconst createStyles = (config) => {\n    return [\n        style(config, 'light'),\n        {\n            '.pe-dark-theme': [\n                // inside dark theme\n                style(config, 'dark', ' '),\n                // has dark theme\n                style(config, 'dark', '&')\n            ]\n        }\n    ];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}