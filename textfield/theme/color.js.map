{"version":3,"sources":["color.es6"],"names":["_mixin","require","style","config","tint","scope","arguments","length","undefined","_defineProperty","color"," .pe-textfield__input-area","&:after","background-color","&.pe-textfield--counter "," .pe-textfield__input-area:after"," .pe-textfield__input","border-color"," .pe-textfield__label","&.pe-textfield--disabled, &.pe-textfield--readonly","background-image","&.pe-textfield--disabled"," .pe-textfield__input, .pe-textfield__label","&.pe-textfield--readonly","&.pe-textfield--focused","&.pe-textfield--floating-label .pe-textfield__label","&.pe-textfield--required.pe-textfield--floating-label"," .pe-textfield__label:after"," .pe-textfield__help, .pe-textfield__counter","&.pe-textfield--invalid:not(.pe-textfield--hide-validation)","box-shadow"," .pe-textfield__error, .pe-textfield__counter, .pe-textfield__help","&.pe-textfield--required .pe-textfield__label","&, &.pe-textfield--counter"," .pe-textfield__input:-webkit-autofill","-webkit-box-shadow","createStyles",".pe-dark-theme","_mixin2","default"],"mappings":"yTAAA,IAAAA,QAAAC,QAAA,iEAEMC,MAAQ,SAACC,OAAQC,MAAqB,GAAfC,OAAeC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAP,EACjC,QAAOG,mBACFJ,MAAQ,iBAELK,MAAOP,OAAO,SAAWC,KAAO,iBAEhCO,8BACID,MAAO,UAEPE,WACIC,mBAAoB,iBAG5BC,4BACIC,oCACIF,mBAAoBV,OAAO,SAAWC,KAAO,wBAIrDY,yBACIN,MAAOP,OAAO,SAAWC,KAAO,eAChCa,eAAgBd,OAAO,SAAWC,KAAO,yBAG7Cc,yBACIR,MAAOP,OAAO,SAAWC,KAAO,gBAGpCe,sDACIJ,oCACIF,mBAAoB,cACpBO,mBAAoB,6BAA+BjB,OAAO,SAAWC,KAAO,wBAA0B,qCAI9GiB,4BACIC,+CACIZ,MAAOP,OAAO,SAAWC,KAAO,0BAIxCmB,4BACID,+CACIZ,MAAOP,OAAO,SAAWC,KAAO,0BAIxCoB,2BAEIC,uDACIf,MAAOP,OAAO,SAAWC,KAAO,oBAGpCsB,yDACIC,+BACIjB,MAAOP,OAAO,SAAWC,KAAO,uBAK5CwB,gDACIlB,MAAOP,OAAO,SAAWC,KAAO,eAGpCyB,+DACIb,yBACIC,eAAgBd,OAAO,SAAWC,KAAO,uBACzC0B,aAAc,QAElBZ,yBACIR,MAAOP,OAAO,SAAWC,KAAO,sBAEpC2B,sEACIrB,MAAOP,OAAO,SAAWC,KAAO,sBAEpC4B,iDACItB,MAAOP,OAAO,SAAWC,KAAO,sBAEpC6B,8BACIlB,oCACIF,mBAAoBV,OAAO,SAAWC,KAAO,0BAKzD8B,0CACIC,qBAAsB,kBAAoBhC,OAAO,SAAWC,KAAO,qBAAuB,SAC1FM,MAAOP,OAAO,SAAWC,KAAO,eAAiB,mBAM3DgC,aAAe,SAACjC,QAClB,OACID,MAAMC,OAAQ,UAEVkC,kBAEInC,MAAMC,OAAQ,OAAQ,KAEtBD,MAAMC,OAAQ,OAAQ,yBAMvB,SAACA,QAAD,MAAamC,SAAAC,QAAMH,aAAajC,OAAQiC","file":"color.js","sourcesContent":["import mixin from 'polythene/common/mixin';\n\nconst style = (config, tint, scope = '') => {\n    return [{\n        [scope + '.pe-textfield']: {\n            // border color\n            color: config['color_' + tint + '_focus_border'], // override by specifying 'color'\n\n            ' .pe-textfield__input-area': {\n                color: 'inherit',\n\n                '&:after': {\n                    'background-color': 'currentcolor'\n                }\n            },\n            '&.pe-textfield--counter ': {\n                ' .pe-textfield__input-area:after': {\n                    'background-color': config['color_' + tint + '_counter_ok_border']\n                }\n            },\n\n            ' .pe-textfield__input': {\n                color: config['color_' + tint + '_input_text'],\n                'border-color': config['color_' + tint + '_input_bottom_border']\n            },\n\n            ' .pe-textfield__label': {\n                color: config['color_' + tint + '_label_text']\n            },\n\n            '&.pe-textfield--disabled, &.pe-textfield--readonly': {\n                ' .pe-textfield__input-area:after': {\n                    'background-color': 'transparent',\n                    'background-image': 'linear-gradient(to right, ' + config['color_' + tint + '_disabled_label_text'] + ' 20%, rgba(255, 255, 255, 0) 0%)',\n                }\n            },\n\n            '&.pe-textfield--disabled': {\n                ' .pe-textfield__input, .pe-textfield__label': {\n                    color: config['color_' + tint + '_disabled_label_text']\n                }\n            },\n\n            '&.pe-textfield--readonly': {\n                ' .pe-textfield__input, .pe-textfield__label': {\n                    color: config['color_' + tint + '_readonly_label_text']\n                }\n            },\n\n            '&.pe-textfield--focused': {\n                // note: not when textfield--dirty and not textfield--focused\n                '&.pe-textfield--floating-label .pe-textfield__label': {\n                    color: config['color_' + tint + '_highlight_text']\n                },\n\n                '&.pe-textfield--required.pe-textfield--floating-label': {\n                    ' .pe-textfield__label:after': {\n                        color: config['color_' + tint + '_required_symbol']\n                    }\n                }\n            },\n\n            ' .pe-textfield__help, .pe-textfield__counter': {\n                color: config['color_' + tint + '_help_text']\n            },\n\n            '&.pe-textfield--invalid:not(.pe-textfield--hide-validation)': {\n                ' .pe-textfield__input': {\n                    'border-color': config['color_' + tint + '_input_error_border'],\n                    'box-shadow': 'none'\n                },\n                ' .pe-textfield__label': {\n                    color: config['color_' + tint + '_input_error_text']\n                },\n                ' .pe-textfield__error, .pe-textfield__counter, .pe-textfield__help': {\n                    color: config['color_' + tint + '_input_error_text']\n                },\n                '&.pe-textfield--required .pe-textfield__label': {\n                    color: config['color_' + tint + '_input_error_text']\n                },\n                '&, &.pe-textfield--counter': {\n                    ' .pe-textfield__input-area:after': {\n                        'background-color': config['color_' + tint + '_input_error_border']\n                    }\n                }\n            },\n\n            ' .pe-textfield__input:-webkit-autofill': {\n                '-webkit-box-shadow': '0 0 0px 1000px ' + config['color_' + tint + '_input_background'] + ' inset',\n                color: config['color_' + tint + '_input_text'] + ' !important'\n            }\n        }\n    }];\n};\n\nconst createStyles = (config) => {\n    return [\n        style(config, 'light'),\n        {\n            '.pe-dark-theme': [\n                // inside dark theme\n                style(config, 'dark', ' '),\n                // has dark theme\n                style(config, 'dark', '&')\n            ]\n        }\n    ];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}