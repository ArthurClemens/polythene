{"version":3,"sources":["textfield.es6"],"names":["startEventType","isClient","window","PointerEvent","DocumentTouch","document","CSS_CLASSES","block","inputArea","input","label","counter","help","focusHelp","error","errorPlaceholder","stateFocused","stateDisabled","stateReadonly","stateInvalid","stateDirty","hasFloatingLabel","isDense","isRequired","hideRequiredChar","hasFullWidth","hasCounter","hideSpinner","hideClear","hideValidation","validateCustom","opts","validate","ctrl","value","invalid","state","valid","message","validateCounter","length","validateHTML","inputEl","checkValidity","getValidStatus","touched","isInvalid","validateResetOnClear","status","validateAtStart","previousInvalid","setTimeout","redraw","checkDirty","isDirty","toString","updateState","notifyState","getState","focus","dirty","el","ignoreEvent","ignoreEvents","indexOf","name","createView","tag","type","multiline","min","max","minlength","required","pattern","disabled","readonly","inactive","onBlur","e","target","classList","remove","class","floatingLabel","dense","fullWidth","hideRequiredMark","join","id","config","inited","context","vdom","inputTag","Object","assign","onclick","onfocus","add","oninput","validateOnInput","onkeydown","which","blur","addEventListener","onunload","removeEventListener","events","maxlength","autofocus","tabindex","rows","showError","validates","props","before","content","after","component","controller","prop","v","hasFocus","view"],"mappings":"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","file":"textfield.js","sourcesContent":["import 'polythene/common/object.assign';\nimport m from 'mithril';\nimport 'polythene/textfield/theme/theme';\nimport isomorphic from 'polythene/common/isomorphic';\n\nlet startEventType = 'mousedown';\nif(isomorphic.isClient()) {\n\tstartEventType = window.PointerEvent ? 'pointerdown' : (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) ? 'touchstart' : 'mousedown';\n}\n\nconst CSS_CLASSES = {\n    block: 'pe-textfield',\n    inputArea: 'pe-textfield__input-area',\n    input: 'pe-textfield__input',\n    label: 'pe-textfield__label',\n    counter: 'pe-textfield__counter',\n    help: 'pe-textfield__help',\n    focusHelp: 'pe-textfield__help-focus',\n    error: 'pe-textfield__error',\n    errorPlaceholder: 'pe-textfield__error-placeholder',\n    stateFocused: 'pe-textfield--focused',\n    stateDisabled: 'pe-textfield--disabled',\n    stateReadonly: 'pe-textfield--readonly',\n    stateInvalid: 'pe-textfield--invalid',\n    stateDirty: 'pe-textfield--dirty',\n    hasFloatingLabel: 'pe-textfield--floating-label',\n    isDense: 'pe-textfield--dense',\n    isRequired: 'pe-textfield--required',\n    hideRequiredChar: 'pe-textfield--no-char',\n    hasFullWidth: 'pe-textfield--full-width',\n    hasCounter: 'pe-textfield--counter',\n    hideSpinner: 'pe-textfield--hide-spinner',\n    hideClear: 'pe-textfield--hide-clear',\n    hideValidation: 'pe-textfield--hide-validation'\n};\n\nconst validateCustom = (ctrl, opts) => {\n    const state = opts.validate(ctrl.value);\n    return {\n        invalid: (state && !state.valid),\n        message: (state && state.error)\n    };\n};\n\nconst validateCounter = (ctrl, opts) => {\n    return {\n        invalid: (ctrl.value.length > opts.counter),\n        message: opts.error\n    };\n};\n\nconst validateHTML = (ctrl, opts) => {\n    return {\n        invalid: !ctrl.inputEl().checkValidity(),\n        message: opts.error\n    };\n};\n\nconst getValidStatus = (ctrl, opts) => {\n    let status = {\n        invalid: false,\n        message: undefined\n    };\n\n    // validateResetOnClear: reset validation when field is cleared\n    if (ctrl.touched && ctrl.isInvalid && ctrl.value.length === 0 && opts.validateResetOnClear) {\n        ctrl.touched = false;\n        ctrl.isInvalid = false;\n        ctrl.error = undefined;\n    }\n\n    if (!status.invalid && opts.counter) {\n        status = validateCounter(ctrl, opts);\n    }\n    if (!status.invalid && ctrl.inputEl() && ctrl.inputEl().checkValidity) {\n        status = validateHTML(ctrl, opts);\n    }\n    if (!status.invalid && opts.validate) {\n        status = validateCustom(ctrl, opts);\n    }\n    return status;\n};\n\nconst checkValidity = (ctrl, opts) => {\n    // default\n    const status = (!ctrl.touched && !opts.validateAtStart)\n        ? {\n            invalid: false,\n            message: undefined\n        }\n        : getValidStatus(ctrl, opts);\n    const previousInvalid = ctrl.isInvalid;\n    ctrl.error = status.message;\n    ctrl.isInvalid = status.invalid;\n    if (status.invalid !== previousInvalid) {\n        setTimeout(m.redraw, 0);\n    }\n\n    if (!status.invalid) {\n        ctrl.error = undefined;\n    }\n};\n\n// dirty = contains text\nconst checkDirty = (ctrl) => {\n    ctrl.isDirty = (ctrl.value.toString().length > 0);\n};\n\nconst updateState = (ctrl, opts) => {\n    checkValidity(ctrl, opts);\n    checkDirty(ctrl);\n};\n\nconst notifyState = (ctrl, opts) => {\n    if (opts.getState) {\n        // get status directly without updating controller\n        const status = getValidStatus(ctrl, opts);\n        opts.getState({\n            focus: ctrl.focus(),\n            dirty: ctrl.isDirty,\n            value: ctrl.value,\n            el: ctrl.inputEl(),\n            invalid: status.invalid,\n            error: status.error\n        });\n    }\n};\n\nconst ignoreEvent = (opts, name) => (opts.ignoreEvents && opts.ignoreEvents.indexOf(name) !== -1);\n\nconst createView = (ctrl, opts = {}) => {\n    // Early state update to prevent a flash (which would happen if the update is done in config)\n    updateState(ctrl, opts);\n\n    const isInvalid = ctrl.isInvalid;\n    const tag = opts.tag || 'div';\n    const type = (!opts.type || opts.type === 'submit' || opts.type === 'search') ? 'text' : opts.type;\n    const inputTag = opts.multiline ? 'textarea' : 'input';\n    const showError = isInvalid && ctrl.error;\n    const validates = opts.validate || opts.min || opts.max || opts.minlength || opts.required || opts.pattern;\n    const inactive = opts.disabled || opts.readonly;\n\n    if (opts.focus && !ctrl.focus() && !inactive) {\n        ctrl.focus(true);\n        if (ctrl.inputEl()) {\n            ctrl.inputEl().focus();\n        }\n    }\n\n    // Only update from outside if the field is not being edited\n    if (typeof opts.value === 'function' && ctrl.inputEl() && !ctrl.focus() && !inactive) {\n        const value = opts.value();\n        ctrl.value = value;\n        ctrl.touched = true;\n        updateState(ctrl, opts);\n        notifyState(ctrl, opts);\n        ctrl.inputEl().value = value;\n    }\n\n    const onBlur = (e) => {\n        ctrl.focus(false);\n        ctrl.touched = true;\n        ctrl.value = e.target.value;\n        updateState(ctrl, opts);\n        notifyState(ctrl, opts);\n        // same principle as onfocus\n        ctrl.el.classList.remove(CSS_CLASSES.stateFocused);\n    };\n\n    const props = {\n        class: [\n            CSS_CLASSES.block,\n            (isInvalid ? CSS_CLASSES.stateInvalid : ''),\n            (ctrl.focus() ? CSS_CLASSES.stateFocused : ''),\n            (opts.floatingLabel ? CSS_CLASSES.hasFloatingLabel : ''),\n            (opts.disabled ? CSS_CLASSES.stateDisabled : ''),\n            (opts.readonly ? CSS_CLASSES.stateReadonly : ''),\n            (ctrl.isDirty ? CSS_CLASSES.stateDirty : ''),\n            (opts.dense ? CSS_CLASSES.isDense : ''),\n            (opts.required ? CSS_CLASSES.isRequired : ''),\n            (opts.fullWidth ? CSS_CLASSES.hasFullWidth : ''),\n            (opts.counter ? CSS_CLASSES.hasCounter : ''),\n            (opts.hideSpinner !== false ? CSS_CLASSES.hideSpinner : ''),\n            (opts.hideClear !== false ? CSS_CLASSES.hideClear : ''),\n            (opts.hideValidation ? CSS_CLASSES.hideValidation : ''),\n            (opts.hideRequiredMark ? CSS_CLASSES.hideRequiredChar : ''),\n            opts.class\n        ].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context, vdom) => {\n            if (inited) {\n                return;\n            }\n            if (opts.config) {\n                opts.config(el, inited, context, vdom);\n            }\n            ctrl.el = el;\n            if (!inactive) {\n                updateState(ctrl, opts);\n            }\n        }\n    };\n\n\n    const content = [\n        m('div', {\n            class: CSS_CLASSES.inputArea\n        }, [\n            opts.label ? m('label', {\n                class: CSS_CLASSES.label,\n                // In IE10 the label catches click events on the field\n                // the function causes the input to get focus\n\n                ['on' + startEventType]: () => {\n                    if (!inactive) {\n                        setTimeout(() => {\n                            ctrl.inputEl().focus();\n                        }, 0);\n                    }\n                }\n            }, opts.label) : null,\n            m(inputTag, Object.assign(\n                {},\n                {\n                    class: CSS_CLASSES.input,\n                    type,\n                    name: opts.name || '',\n                    disabled: opts.disabled\n                },\n\n                (!ignoreEvent(opts, 'onclick'))\n                    ? {\n                        onclick: () => {\n                            if (inactive) {\n                                return;\n                            }\n                            // in case the browser does not give the field focus,\n                            // for instance when the user tapped to the current field off screen\n                            ctrl.focus(true);\n                            notifyState(ctrl, opts);\n                        }\n                    }\n                    : null,\n\n                (!ignoreEvent(opts, 'onfocus'))\n                    ? {\n                        onfocus: () => {\n                            if (inactive) {\n                                return;\n                            }\n                            ctrl.focus(true);\n                            // set CSS class manually in case field gets focus but is off screen\n                            // and no redraw is triggered\n                            // at the next redraw ctrl.focus() will be read and the focus class be set\n                            // in the props.class statement\n                            if (ctrl.el) {\n                                ctrl.el.classList.add(CSS_CLASSES.stateFocused);\n                            }\n                            notifyState(ctrl, opts);\n                        }\n                    }\n                    : null,\n\n                // onblur defined in config\n\n                (!ignoreEvent(opts, 'oninput'))\n                    ? {\n                        oninput: (e) => {\n                            // default input event\n                            // may be overwritten by opts.events\n                            ctrl.value = e.target.value;\n                            // Don't set ctrl.touched to true to prevent error messages popping up while typing\n                            if (opts.validateOnInput) {\n                                ctrl.touched = true;\n                            }\n                            updateState(ctrl, opts);\n                            notifyState(ctrl, opts);\n                            if (opts.oninput) {\n                                opts.oninput(ctrl.value, e);\n                            }\n                        }\n                    }\n                    : null,\n\n                (!ignoreEvent(opts, 'onkeydown'))\n                    ? {\n                        onkeydown: (e) => {\n                            if (e.which === 13) {\n                                // ENTER\n                                ctrl.touched = true;\n                                updateState(ctrl, opts);\n                                notifyState(ctrl, opts);\n                            } else if (e.which === 27) {\n                                // ESCAPE\n                                ctrl.inputEl().blur(e);\n                            } else if (e.which === 9) {\n                                // TAB\n                                // Update after the blur event when TAB is used to leave the field and no other field will get focus.\n                                // Safari only needs 1 tick, but Chrome needs more than 150ms to create a distinctive new redraw event.\n                                // But we also may have buttons that change place (search field), a large timeout works better in general.\n                                setTimeout(() => {\n                                    m.redraw();\n                                    setTimeout(m.redraw, 250);\n                                }, 1);\n                            }\n                        }\n                    }\n                    : null,\n\n                {\n                    config: (el, inited, context) => {\n                        if (inited) {\n                            return;\n                        }\n                        ctrl.inputEl(el);\n                        el.value = ctrl.value;\n                        notifyState(ctrl, opts);\n                        if (!inactive) {\n                            if (!ignoreEvent(opts, 'onblur')) {\n                                // use event delegation for the blur event\n                                // so that click events bubble up\n                                // http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n                                el.addEventListener('blur', onBlur, true);\n                                context.onunload = function() {\n                                    el.removeEventListener('blur', onBlur, true);\n                                };\n                            }\n                        }\n                    }\n                },\n                opts.events ? opts.events : null, // NOTE: may overwrite oninput\n                (opts.readonly !== undefined) ? {readonly: true} : null,\n                (opts.pattern !== undefined) ? {pattern: opts.pattern} : null,\n                (opts.maxlength !== undefined) ? {maxlength: opts.maxlength} : null,\n                (opts.minlength !== undefined) ? {minlength: opts.minlength} : null,\n                (opts.max !== undefined) ? {max: opts.max} : null,\n                (opts.min !== undefined) ? {min: opts.min} : null,\n                (opts.autofocus !== undefined) ? {autofocus: opts.autofocus} : null,\n                (opts.required !== undefined) ? {required: opts.required} : null,\n                (opts.tabindex !== undefined) ? {tabindex: opts.tabindex} : null,\n                (opts.rows !== undefined) ? {rows: opts.rows} : null\n            ))\n        ]),\n        opts.counter ? m('div', {class: CSS_CLASSES.counter}, ctrl.value.length + ' / ' + opts.counter) : null,\n        (opts.help && !showError) ? m('div', {\n            class: [CSS_CLASSES.help, opts.focusHelp ? CSS_CLASSES.focusHelp : ''].join(' ')\n        }, opts.help) : null,\n        showError\n            ? m('div', {class: CSS_CLASSES.error}, ctrl.error)\n            : (validates && !opts.help)\n                ? m('div', {class: CSS_CLASSES.errorPlaceholder})\n                : null\n    ];\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: (opts = {}) => {\n        let value,\n            isInvalid = false,\n            touched = false, // true when any change is made\n            error = opts.error || '',\n            el,\n            inputEl = m.prop(),\n            hasFocus = opts.focus || false;\n\n        if (typeof opts.value === 'function') {\n            const v = opts.value();\n            value = (v !== undefined) ? v : '';\n        } else {\n            value = (opts.value !== undefined) ? opts.value : '';\n        }\n        if (value !== '') {\n            touched = true;\n        }\n\n        const focus = (state) => {\n            // read\n            if (state === undefined) {\n                return hasFocus;\n            }\n            // write\n            hasFocus = state;\n        };\n\n        return {\n            value,\n            error,\n            el,\n            inputEl,\n            focus,\n            isInvalid,\n            touched\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}