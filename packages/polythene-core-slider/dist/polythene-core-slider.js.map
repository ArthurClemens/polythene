{"version":3,"file":"polythene-core-slider.js","sources":["../../polythene-css-classes/slider.js","../src/index.js"],"sourcesContent":["\nexport default {\n  component:      \"pe-slider\",\n\n  // elements\n  control:        \"pe-slider__control\",\n  label:          \"pe-slider__label\",\n  pin:            \"pe-slider__pin\",\n  thumb:          \"pe-slider__thumb\",\n  tick:           \"pe-slider__tick\",\n  ticks:          \"pe-slider__ticks\",\n  track:          \"pe-slider__track\",\n  trackBar:       \"pe-slider__track-bar\",\n  trackBarValue:  \"pe-slider__track-bar-value\",\n  trackPart:      \"pe-slider__track-part\",\n  trackPartRest:  \"pe-slider__track-rest\",\n  trackPartValue: \"pe-slider__track-value\",\n\n  // states\n  hasFocus:       \"pe-slider--focus\",\n  hasPin:         \"pe-slider--pin\",\n  hasTicks:       \"pe-slider--ticks\",\n  hasTrack:       \"pe-slider--track\",\n  isActive:       \"pe-slider--active\",\n  isAtMin:        \"pe-slider--min\",\n  isDisabled:     \"pe-slider--disabled\",\n  tickValue:      \"pe-slider__tick--value\",\n};\n","import {\n  isTouch,\n  pointerStartDownEvent,\n  pointerMoveEvent,\n  pointerEndDownEvent,\n  isClient,\n  filterSupportedAttributes,\n  getStyle,\n} from \"polythene-core\";\nimport classes from \"polythene-css-classes/slider\";\n\nconst MAX_TICKS = 100;\n\nconst positionFromEvent = (e, isVertical) =>\n  // isVertical not yet implemented\n  isTouch && e.touches\n    ? isVertical\n      ? e.touches[0].pageY\n      : e.touches[0].pageX\n    : isVertical\n    ? e.pageY\n    : e.pageX;\n\nexport const _Slider = ({\n  h,\n  a,\n  useState,\n  useEffect,\n  useRef,\n  getRef,\n  ...props\n}) => {\n  const min = props.min !== undefined ? props.min : 0;\n  const max = props.max !== undefined ? props.max : 100;\n  const range = max - min;\n  const stepSize = props.stepSize !== undefined ? props.stepSize : 1;\n  const normalizeFactor = 1 / stepSize;\n  const hasTicks = props.ticks !== undefined && props.ticks !== false;\n  const interactiveTrack =\n    props.interactiveTrack !== undefined ? props.interactiveTrack : true;\n  const stepCount = Math.min(MAX_TICKS, parseInt(range / stepSize, 10));\n  const defaultValue =\n    props.defaultValue !== undefined\n      ? props.defaultValue\n      : props.value !== undefined\n      ? props.value\n      : 0;\n\n  const focusElementRef = useRef();\n  const trackElRef = useRef();\n  const controlElRef = useRef();\n  const pinElRef = useRef();\n\n  const [domElement, setDomElement] = useState();\n  const [fraction, setFraction] = useState(min);\n  const [hasFocus, setHasFocus] = useState(false);\n  const [value, setValue] = useState();\n  const [previousValue, setPreviousValue] = useState();\n  const [isActive, setIsActive] = useState(false);\n  const isDraggingRef = useRef();\n  const clickOffsetRef = useRef();\n  const rangeWidthRef = useRef();\n  const rangeOffsetRef = useRef();\n  const controlWidthRef = useRef();\n\n  const updatePinPosition = () => {\n    if (controlElRef.current && pinElRef.current) {\n      const left = fraction * rangeWidthRef.current;\n      pinElRef.current.style.left = left + \"px\";\n    }\n  };\n\n  const generateTickMarks = (h, stepCount, stepSize, value) => {\n    const items = [];\n    const stepWithValue = value / stepSize;\n    let s = 0;\n    while (s < stepCount + 1) {\n      items.push(\n        h(\"div\", {\n          className:\n            s <= stepWithValue\n              ? [classes.tick, classes.tickValue].join(\" \")\n              : classes.tick,\n          key: `tick-${s}`,\n        })\n      );\n      s++;\n    }\n    return items;\n  };\n\n  const readRangeData = () => {\n    if (controlElRef.current && isClient) {\n      // range is from the far left to the far right minus the thumb width (max x is at the left side of the thumb)\n      controlWidthRef.current = parseFloat(\n        getStyle({ element: controlElRef.current, prop: \"width\" })\n      );\n      rangeWidthRef.current =\n        trackElRef.current.getBoundingClientRect().width -\n        controlWidthRef.current;\n      const styles = window.getComputedStyle(trackElRef.current);\n      rangeOffsetRef.current = parseFloat(styles.marginLeft);\n    }\n  };\n\n  const updateClickOffset = (controlOffset = 0) => {\n    clickOffsetRef.current =\n      trackElRef.current.getBoundingClientRect().left -\n      (rangeOffsetRef.current - controlWidthRef.current / 2) +\n      controlOffset;\n  };\n\n  const initControlEvent = (e) => {\n    const controlPos = controlElRef.current.getBoundingClientRect().left;\n    const eventPos = positionFromEvent(e);\n    const controlOffset = eventPos - controlPos - controlWidthRef.current / 2;\n    updateClickOffset(controlOffset);\n  };\n\n  const initTrackEvent = () => updateClickOffset(0);\n\n  const handlePosEvent = (e) => {\n    const pos = positionFromEvent(e) - clickOffsetRef.current;\n    const newValue =\n      min + ((pos - rangeOffsetRef.current) / rangeWidthRef.current) * range;\n    updateValue(newValue);\n  };\n\n  const startDrag = (e) => {\n    if (isDraggingRef.current) return;\n    e.preventDefault();\n    isDraggingRef.current = true;\n    setIsActive(true);\n    deFocus();\n\n    const drag = (e) => {\n      if (!isDraggingRef.current) return;\n      handlePosEvent(e);\n    };\n\n    const endDrag = () => {\n      if (!isDraggingRef.current) return;\n      deFocus();\n      if (isClient) {\n        pointerMoveEvent.forEach((evt) =>\n          window.removeEventListener(evt, drag)\n        );\n        pointerEndDownEvent.forEach((evt) =>\n          window.removeEventListener(evt, endDrag)\n        );\n      }\n      isDraggingRef.current = false;\n      setIsActive(false);\n    };\n\n    if (isClient) {\n      pointerMoveEvent.forEach((evt) => window.addEventListener(evt, drag));\n      pointerEndDownEvent.forEach((evt) =>\n        window.addEventListener(evt, endDrag)\n      );\n    }\n    readRangeData();\n  };\n\n  const handleNewValue = ({ value, shouldNotify = false }) => {\n    if (value < min) value = min;\n    if (value > max) value = max;\n    const newValue = stepSize\n      ? Math.round(value * normalizeFactor) / normalizeFactor\n      : value;\n    setFraction((newValue - min) / range);\n    setPreviousValue(newValue);\n    setValue(newValue);\n    if (shouldNotify && props.onChange) {\n      props.onChange({\n        value: newValue,\n      });\n    }\n  };\n\n  const updateValue = (value) => {\n    handleNewValue({ value, shouldNotify: true });\n  };\n\n  const increment = (useLargeStep) =>\n    updateValue(value + (useLargeStep ? 10 : 1) * (stepSize || 1));\n\n  const decrement = (useLargeStep) =>\n    updateValue(value - (useLargeStep ? 10 : 1) * (stepSize || 1));\n\n  const deFocus = () => {\n    if (focusElementRef.current) {\n      focusElementRef.current.blur();\n    }\n    focusElementRef.current = undefined;\n    setHasFocus(false);\n  };\n\n  const focus = (element) => {\n    deFocus();\n    focusElementRef.current = element;\n    setHasFocus(true);\n  };\n\n  // State refs\n  useEffect(() => {\n    isDraggingRef.current = false;\n    clickOffsetRef.current = 0;\n    rangeWidthRef.current = 0;\n    rangeOffsetRef.current = 0;\n    controlWidthRef.current = 0;\n  }, []);\n\n  // DOM children\n  useEffect(() => {\n    if (!domElement) {\n      return;\n    }\n\n    trackElRef.current = domElement.querySelector(`.${classes.track}`);\n    controlElRef.current = domElement.querySelector(`.${classes.control}`);\n    pinElRef.current = domElement.querySelector(`.${classes.pin}`);\n\n    readRangeData();\n    handleNewValue({ value: defaultValue });\n  }, [domElement]);\n\n  // Pin position\n  useEffect(() => {\n    if (!props.pin) {\n      return;\n    }\n    updatePinPosition();\n  }, [value]);\n\n  // Handle external changes of `value`\n  useEffect(() => {\n    if (previousValue !== props.value) {\n      handleNewValue({ value: props.value });\n    }\n  }, [props.value]);\n\n  const componentProps = Object.assign(\n    {},\n    filterSupportedAttributes(props),\n    getRef((dom) => dom && !domElement && setDomElement(dom)),\n    props.testId && { \"data-test-id\": props.testId },\n    {\n      className: [\n        classes.component,\n        props.disabled ? classes.isDisabled : null,\n        props.pin ? classes.hasPin : null,\n        interactiveTrack ? classes.hasTrack : null,\n        isActive ? classes.isActive : null,\n        hasFocus ? classes.hasFocus : null,\n        fraction === 0 ? classes.isAtMin : null,\n        hasTicks ? classes.hasTicks : null,\n        props.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        props.tone === \"light\" ? \"pe-light-tone\" : null,\n        props.className || props[a.class],\n      ].join(\" \"),\n    }\n  );\n\n  const onStartTrack = (e) => {\n    e.preventDefault();\n    if (isDraggingRef.current) {\n      return;\n    }\n    readRangeData();\n    initTrackEvent();\n    handlePosEvent(e);\n    startDrag(e);\n  };\n\n  const onInitDrag = (e) => {\n    e.preventDefault();\n    readRangeData();\n    initControlEvent(e);\n    startDrag(e);\n  };\n\n  const flexValueCss = fraction + \" 1 0%\";\n  const flexRestValue = 1 - fraction;\n  const flexRestCss = flexRestValue + \" 1 0%\";\n\n  const content = [\n    props.before,\n    h(\n      \"div\",\n      Object.assign(\n        {},\n        {\n          className: classes.track,\n          role: interactiveTrack ? \"button\" : undefined,\n        },\n        interactiveTrack &&\n          !props.disabled &&\n          pointerStartDownEvent.reduce(\n            (acc, evt) => ((acc[a[`on${evt}`]] = onStartTrack), acc),\n            {}\n          )\n      ),\n      [\n        h(\n          \"div\",\n          {\n            className: classes.trackPart + \" \" + classes.trackPartValue,\n            style: {\n              flex: flexValueCss,\n              msFlex: flexValueCss,\n              WebkitFlex: flexValueCss,\n            },\n          },\n          h(\n            \"div\",\n            { className: classes.trackBar },\n            h(\"div\", { className: classes.trackBarValue })\n          )\n        ),\n        h(\n          \"div\",\n          Object.assign(\n            {},\n            {\n              className: classes.control,\n            },\n            props.disabled\n              ? { disabled: true }\n              : {\n                  role: \"button\",\n                  [a.tabindex]: props[a.tabindex] || 0,\n                  [a.onfocus]: () => focus(controlElRef.current),\n                  [a.onblur]: () => deFocus(),\n                  [a.onkeydown]: (e) => {\n                    if (e.key !== \"Tab\") {\n                      e.preventDefault();\n                    }\n                    if (e.key === \"Escape\" || e.key === \"Esc\") {\n                      controlElRef.current.blur(e);\n                    } else if (\n                      e.key === \"ArrowLeft\" ||\n                      e.key === \"ArrowDown\" ||\n                      e.key === \"Left\" ||\n                      e.key === \"Down\"\n                    ) {\n                      decrement(!!e.shiftKey);\n                    } else if (\n                      e.key === \"ArrowRight\" ||\n                      e.key === \"ArrowUp\" ||\n                      e.key === \"Right\" ||\n                      e.key === \"Up\"\n                    ) {\n                      increment(!!e.shiftKey);\n                    } else if (e.key === \"Home\") {\n                      updateValue(min);\n                    } else if (e.key === \"End\") {\n                      updateValue(max);\n                    } else if (e.key === \"PageDown\") {\n                      decrement(true);\n                    } else if (e.key === \"PageUp\") {\n                      increment(true);\n                    }\n                    readRangeData();\n                  },\n                },\n            !props.disabled &&\n              pointerStartDownEvent.reduce(\n                (acc, evt) => ((acc[a[`on${evt}`]] = onInitDrag), acc),\n                {}\n              ),\n            props.events ? props.events : null,\n            hasTicks ? { step: stepCount } : null\n          ),\n          props.icon\n            ? h(\n                \"div\",\n                {\n                  className: classes.thumb,\n                },\n                props.icon\n              )\n            : null\n        ),\n        h(\n          \"div\",\n          {\n            className: classes.trackPart + \" \" + classes.trackPartRest,\n            style: {\n              flex: flexRestCss,\n              msFlex: flexRestCss,\n              WebkitFlex: flexRestCss,\n              maxWidth: flexRestValue * 100 + \"%\", // for IE Edge\n            },\n          },\n          h(\n            \"div\",\n            { className: classes.trackBar },\n            h(\"div\", { className: classes.trackBarValue })\n          )\n        ),\n        hasTicks && !props.disabled\n          ? h(\n              \"div\",\n              {\n                className: classes.ticks,\n              },\n              generateTickMarks(h, stepCount, stepSize, value)\n            )\n          : null,\n        hasTicks && props.pin && !props.disabled\n          ? h(\"div\", {\n              className: classes.pin,\n              value,\n            })\n          : null,\n      ]\n    ),\n    props.after,\n  ];\n\n  return h(props.element || \"div\", componentProps, content);\n};\n"],"names":["component","control","label","pin","thumb","tick","ticks","track","trackBar","trackBarValue","trackPart","trackPartRest","trackPartValue","hasFocus","hasPin","hasTicks","hasTrack","isActive","isAtMin","isDisabled","tickValue","positionFromEvent","e","isVertical","isTouch","touches","pageY","pageX","h","a","useState","useEffect","useRef","getRef","props","min","undefined","max","range","stepSize","normalizeFactor","interactiveTrack","stepCount","Math","parseInt","defaultValue","value","focusElementRef","trackElRef","controlElRef","pinElRef","domElement","setDomElement","fraction","setFraction","setHasFocus","setValue","previousValue","setPreviousValue","setIsActive","isDraggingRef","clickOffsetRef","rangeWidthRef","rangeOffsetRef","controlWidthRef","readRangeData","current","isClient","parseFloat","getStyle","element","prop","getBoundingClientRect","width","styles","window","getComputedStyle","marginLeft","updateClickOffset","controlOffset","left","handlePosEvent","pos","newValue","updateValue","startDrag","preventDefault","deFocus","drag","endDrag","pointerMoveEvent","forEach","evt","removeEventListener","pointerEndDownEvent","addEventListener","handleNewValue","shouldNotify","round","onChange","increment","useLargeStep","decrement","blur","querySelector","classes","style","updatePinPosition","componentProps","_extends","filterSupportedAttributes","dom","testId","className","disabled","tone","join","onStartTrack","onInitDrag","controlPos","initControlEvent","flexValueCss","flexRestValue","flexRestCss","content","before","role","pointerStartDownEvent","reduce","acc","flex","msFlex","WebkitFlex","tabindex","onfocus","onblur","onkeydown","key","shiftKey","events","step","icon","maxWidth","items","stepWithValue","s","push","generateTickMarks","after"],"mappings":"27DACe,CACbA,UAAgB,YAGhBC,QAAgB,qBAChBC,MAAgB,mBAChBC,IAAgB,iBAChBC,MAAgB,mBAChBC,KAAgB,kBAChBC,MAAgB,mBAChBC,MAAgB,mBAChBC,SAAgB,uBAChBC,cAAgB,6BAChBC,UAAgB,wBAChBC,cAAgB,wBAChBC,eAAgB,yBAGhBC,SAAgB,mBAChBC,OAAgB,iBAChBC,SAAgB,mBAChBC,SAAgB,mBAChBC,SAAgB,oBAChBC,QAAgB,iBAChBC,WAAgB,sBAChBC,UAAgB,0BCbZC,EAAoB,SAACC,EAAGC,UAE5BC,WAAWF,EAAEG,QACTF,EACED,EAAEG,QAAQ,GAAGC,MACbJ,EAAEG,QAAQ,GAAGE,MACfJ,EACAD,EAAEI,MACFJ,EAAEK,iBAEe,kBACrBC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,SACAC,IAAAA,UACAC,IAAAA,OACAC,IAAAA,OACGC,0DAEGC,OAAoBC,IAAdF,EAAMC,IAAoBD,EAAMC,IAAM,EAC5CE,OAAoBD,IAAdF,EAAMG,IAAoBH,EAAMG,IAAM,IAC5CC,EAAQD,EAAMF,EACdI,OAA8BH,IAAnBF,EAAMK,SAAyBL,EAAMK,SAAW,EAC3DC,EAAkB,EAAID,EACtBxB,OAA2BqB,IAAhBF,EAAM5B,QAAuC,IAAhB4B,EAAM5B,MAC9CmC,OACuBL,IAA3BF,EAAMO,kBAAiCP,EAAMO,iBACzCC,EAAYC,KAAKR,IA7BP,IA6BsBS,SAASN,EAAQC,EAAU,KAC3DM,OACmBT,IAAvBF,EAAMW,aACFX,EAAMW,kBACUT,IAAhBF,EAAMY,MACNZ,EAAMY,MACN,EAEAC,EAAkBf,IAClBgB,EAAahB,IACbiB,EAAejB,IACfkB,EAAWlB,QAEmBF,OAA7BqB,OAAYC,WACatB,EAASK,MAAlCkB,OAAUC,WACexB,GAAS,MAAlCjB,OAAU0C,WACSzB,OAAnBgB,OAAOU,WAC4B1B,OAAnC2B,OAAeC,WACU5B,GAAS,MAAlCb,OAAU0C,OACXC,EAAgB5B,IAChB6B,EAAiB7B,IACjB8B,EAAgB9B,IAChB+B,EAAiB/B,IACjBgC,EAAkBhC,IA4BlBiC,EAAgB,cAChBhB,EAAaiB,SAAWC,WAAU,CAEpCH,EAAgBE,QAAUE,WACxBC,WAAS,CAAEC,QAASrB,EAAaiB,QAASK,KAAM,WAElDT,EAAcI,QACZlB,EAAWkB,QAAQM,wBAAwBC,MAC3CT,EAAgBE,YACZQ,EAASC,OAAOC,iBAAiB5B,EAAWkB,SAClDH,EAAeG,QAAUE,WAAWM,EAAOG,cAIzCC,EAAoB,eAACC,yDAAgB,EACzClB,EAAeK,QACblB,EAAWkB,QAAQM,wBAAwBQ,MAC1CjB,EAAeG,QAAUF,EAAgBE,QAAU,GACpDa,GAYEE,GAAiB,SAAC3D,OAChB4D,EAAM7D,EAAkBC,GAAKuC,EAAeK,QAC5CiB,EACJhD,GAAQ+C,EAAMnB,EAAeG,SAAWJ,EAAcI,QAAW5B,EACnE8C,GAAYD,IAGRE,GAAY,SAAC/D,OACbsC,EAAcM,SAClB5C,EAAEgE,iBACF1B,EAAcM,SAAU,EACxBP,GAAY,GACZ4B,SAEMC,EAAO,SAAClE,GACPsC,EAAcM,SACnBe,GAAe3D,IAGXmE,EAAU,SAAVA,IACC7B,EAAcM,UACnBqB,KACIpB,aACFuB,mBAAiBC,SAAQ,SAACC,UACxBjB,OAAOkB,oBAAoBD,EAAKJ,MAElCM,sBAAoBH,SAAQ,SAACC,UAC3BjB,OAAOkB,oBAAoBD,EAAKH,OAGpC7B,EAAcM,SAAU,EACxBP,GAAY,KAGVQ,aACFuB,mBAAiBC,SAAQ,SAACC,UAAQjB,OAAOoB,iBAAiBH,EAAKJ,MAC/DM,sBAAoBH,SAAQ,SAACC,UAC3BjB,OAAOoB,iBAAiBH,EAAKH,OAGjCxB,MAGI+B,GAAiB,gBAAGlD,IAAAA,UAAOmD,aAAAA,gBAC3BnD,EAAQX,IAAKW,EAAQX,GACrBW,EAAQT,IAAKS,EAAQT,OACnB8C,EAAW5C,EACbI,KAAKuD,MAAMpD,EAAQN,GAAmBA,EACtCM,EACJQ,GAAa6B,EAAWhD,GAAOG,GAC/BoB,EAAiByB,GACjB3B,EAAS2B,GACLc,GAAgB/D,EAAMiE,UACxBjE,EAAMiE,SAAS,CACbrD,MAAOqC,KAKPC,GAAc,SAACtC,GACnBkD,GAAe,CAAElD,MAAAA,EAAOmD,cAAc,KAGlCG,GAAY,SAACC,UACjBjB,GAAYtC,GAASuD,EAAe,GAAK,IAAM9D,GAAY,KAEvD+D,GAAY,SAACD,UACjBjB,GAAYtC,GAASuD,EAAe,GAAK,IAAM9D,GAAY,KAEvDgD,GAAU,WACVxC,EAAgBmB,SAClBnB,EAAgBmB,QAAQqC,OAE1BxD,EAAgBmB,aAAU9B,EAC1BmB,GAAY,IAUdxB,GAAU,WACR6B,EAAcM,SAAU,EACxBL,EAAeK,QAAU,EACzBJ,EAAcI,QAAU,EACxBH,EAAeG,QAAU,EACzBF,EAAgBE,QAAU,IACzB,IAGHnC,GAAU,WACHoB,IAILH,EAAWkB,QAAUf,EAAWqD,yBAAkBC,EAAQlG,QAC1D0C,EAAaiB,QAAUf,EAAWqD,yBAAkBC,EAAQxG,UAC5DiD,EAASgB,QAAUf,EAAWqD,yBAAkBC,EAAQtG,MAExD8D,IACA+B,GAAe,CAAElD,MAAOD,OACvB,CAACM,IAGJpB,GAAU,WACHG,EAAM/B,KApKa,cACpB8C,EAAaiB,SAAWhB,EAASgB,QAAS,KACtCc,EAAO3B,EAAWS,EAAcI,QACtChB,EAASgB,QAAQwC,MAAM1B,KAAOA,EAAO,MAoKvC2B,KACC,CAAC7D,IAGJf,GAAU,WACJ0B,IAAkBvB,EAAMY,OAC1BkD,GAAe,CAAElD,MAAOZ,EAAMY,UAE/B,CAACZ,EAAMY,YAEJ8D,GAAiBC,EACrB,GACAC,4BAA0B5E,GAC1BD,GAAO,SAAC8E,UAAQA,IAAQ5D,GAAcC,EAAc2D,MACpD7E,EAAM8E,QAAU,gBAAkB9E,EAAM8E,QACxC,CACEC,UAAW,CACTR,EAAQzG,UACRkC,EAAMgF,SAAWT,EAAQtF,WAAa,KACtCe,EAAM/B,IAAMsG,EAAQ3F,OAAS,KAC7B2B,EAAmBgE,EAAQzF,SAAW,KACtCC,EAAWwF,EAAQxF,SAAW,KAC9BJ,EAAW4F,EAAQ5F,SAAW,KACjB,IAAbwC,EAAiBoD,EAAQvF,QAAU,KACnCH,EAAW0F,EAAQ1F,SAAW,KACf,SAAfmB,EAAMiF,KAAkB,eAAiB,KAC1B,UAAfjF,EAAMiF,KAAmB,gBAAkB,KAC3CjF,EAAM+E,WAAa/E,EAAML,UACzBuF,KAAK,OAILC,GAAe,SAAC/F,GACpBA,EAAEgE,iBACE1B,EAAcM,UAGlBD,IAtJ2Ba,EAAkB,GAwJ7CG,GAAe3D,GACf+D,GAAU/D,KAGNgG,GAAa,SAAChG,GAClBA,EAAEgE,iBACFrB,IArKuB,SAAC3C,OAClBiG,EAAatE,EAAaiB,QAAQM,wBAAwBQ,KAE1DD,EADW1D,EAAkBC,GACFiG,EAAavD,EAAgBE,QAAU,EACxEY,EAAkBC,GAkKlByC,CAAiBlG,GACjB+D,GAAU/D,IAGNmG,GAAepE,EAAW,QAC1BqE,GAAgB,EAAIrE,EACpBsE,GAAcD,GAAgB,QAE9BE,GAAU,CACd1F,EAAM2F,OACNjG,EACE,MACAiF,EACE,GACA,CACEI,UAAWR,EAAQlG,MACnBuH,KAAMrF,EAAmB,cAAWL,GAEtCK,IACGP,EAAMgF,UACPa,wBAAsBC,QACpB,SAACC,EAAKrC,UAAUqC,EAAIpG,cAAO+D,KAAUyB,GAAeY,IACpD,KAGN,CACErG,EACE,MACA,CACEqF,UAAWR,EAAQ/F,UAAY,IAAM+F,EAAQ7F,eAC7C8F,MAAO,CACLwB,KAAMT,GACNU,OAAQV,GACRW,WAAYX,KAGhB7F,EACE,MACA,CAAEqF,UAAWR,EAAQjG,UACrBoB,EAAE,MAAO,CAAEqF,UAAWR,EAAQhG,kBAGlCmB,EACE,MACAiF,EACE,GACA,CACEI,UAAWR,EAAQxG,SAErBiC,EAAMgF,SACF,CAAEA,UAAU,OAEVY,KAAM,cACLjG,EAAEwG,SAAWnG,EAAML,EAAEwG,WAAa,OAClCxG,EAAEyG,SAAU,kBAtIdhE,EAsI0BrB,EAAaiB,QArIpDqB,KACAxC,EAAgBmB,QAAUI,OAC1Bf,GAAY,GAHA,IAACe,SAuIEzC,EAAE0G,QAAS,kBAAMhD,YACjB1D,EAAE2G,WAAY,SAAClH,GACA,QAAVA,EAAEmH,KACJnH,EAAEgE,iBAEU,WAAVhE,EAAEmH,KAA8B,QAAVnH,EAAEmH,IAC1BxF,EAAaiB,QAAQqC,KAAKjF,GAEhB,cAAVA,EAAEmH,KACQ,cAAVnH,EAAEmH,KACQ,SAAVnH,EAAEmH,KACQ,SAAVnH,EAAEmH,IAEFnC,KAAYhF,EAAEoH,UAEJ,eAAVpH,EAAEmH,KACQ,YAAVnH,EAAEmH,KACQ,UAAVnH,EAAEmH,KACQ,OAAVnH,EAAEmH,IAEFrC,KAAY9E,EAAEoH,UACK,SAAVpH,EAAEmH,IACXrD,GAAYjD,GACO,QAAVb,EAAEmH,IACXrD,GAAY/C,GACO,aAAVf,EAAEmH,IACXnC,IAAU,GACS,WAAVhF,EAAEmH,KACXrC,IAAU,GAEZnC,WAGP/B,EAAMgF,UACLa,wBAAsBC,QACpB,SAACC,EAAKrC,UAAUqC,EAAIpG,cAAO+D,KAAU0B,GAAaW,IAClD,IAEJ/F,EAAMyG,OAASzG,EAAMyG,OAAS,KAC9B5H,EAAW,CAAE6H,KAAMlG,GAAc,MAEnCR,EAAM2G,KACFjH,EACE,MACA,CACEqF,UAAWR,EAAQrG,OAErB8B,EAAM2G,MAER,MAENjH,EACE,MACA,CACEqF,UAAWR,EAAQ/F,UAAY,IAAM+F,EAAQ9F,cAC7C+F,MAAO,CACLwB,KAAMP,GACNQ,OAAQR,GACRS,WAAYT,GACZmB,SAA0B,IAAhBpB,GAAsB,MAGpC9F,EACE,MACA,CAAEqF,UAAWR,EAAQjG,UACrBoB,EAAE,MAAO,CAAEqF,UAAWR,EAAQhG,kBAGlCM,IAAamB,EAAMgF,SACftF,EACE,MACA,CACEqF,UAAWR,EAAQnG,OA7UP,SAACsB,EAAGc,EAAWH,EAAUO,WAC3CiG,EAAQ,GACRC,EAAgBlG,EAAQP,EAC1B0G,EAAI,EACDA,EAAIvG,EAAY,GACrBqG,EAAMG,KACJtH,EAAE,MAAO,CACPqF,UACEgC,GAAKD,EACD,CAACvC,EAAQpG,KAAMoG,EAAQrF,WAAWgG,KAAK,KACvCX,EAAQpG,KACdoI,mBAAaQ,MAGjBA,WAEKF,EA+TGI,CAAkBvH,EAAGc,EAAWH,EAAUO,IAE5C,KACJ/B,GAAYmB,EAAM/B,MAAQ+B,EAAMgF,SAC5BtF,EAAE,MAAO,CACPqF,UAAWR,EAAQtG,IACnB2C,MAAAA,IAEF,OAGRZ,EAAMkH,cAGDxH,EAAEM,EAAMoC,SAAW,MAAOsC,GAAgBgB"}