{"version":3,"file":"polythene-core-slider.js","sources":["../../polythene-css-classes/slider.js","../src/index.js"],"sourcesContent":["\nexport default {\n  component:      \"pe-slider\",\n\n  // elements\n  control:        \"pe-slider__control\",\n  label:          \"pe-slider__label\",\n  pin:            \"pe-slider__pin\",\n  thumb:          \"pe-slider__thumb\",\n  tick:           \"pe-slider__tick\",\n  ticks:          \"pe-slider__ticks\",\n  track:          \"pe-slider__track\",\n  trackBar:       \"pe-slider__track-bar\",\n  trackBarValue:  \"pe-slider__track-bar-value\",\n  trackPart:      \"pe-slider__track-part\",\n  trackPartRest:  \"pe-slider__track-rest\",\n  trackPartValue: \"pe-slider__track-value\",\n\n  // states\n  hasFocus:       \"pe-slider--focus\",\n  hasPin:         \"pe-slider--pin\",\n  hasTicks:       \"pe-slider--ticks\",\n  hasTrack:       \"pe-slider--track\",\n  isActive:       \"pe-slider--active\",\n  isAtMin:        \"pe-slider--min\",\n  isDisabled:     \"pe-slider--disabled\",\n  tickValue:      \"pe-slider__tick--value\",\n};\n","import { isTouch, pointerStartDownEvent, pointerMoveEvent, pointerEndDownEvent, isClient, filterSupportedAttributes, getStyle } from \"polythene-core\";\nimport classes from \"polythene-css-classes/slider\";\n\nconst MAX_TICKS = 100;\n\nconst positionFromEvent = (e, isVertical) => (\n  // isVertical not yet implemented\n  isTouch && e.touches\n    ? isVertical ? e.touches[0].pageY : e.touches[0].pageX\n    : isVertical ? e.pageY : e.pageX);\n\nexport const _Slider = ({ h, a, useState, useEffect, useRef, getRef, ...props }) => {\n  const min = props.min !== undefined ? props.min : 0;\n  const max = props.max !== undefined ? props.max : 100;\n  const range = max - min;\n  const stepSize = props.stepSize !== undefined\n    ? props.stepSize\n    : 1;\n  const normalizeFactor = 1 / stepSize;\n  const hasTicks = props.ticks !== undefined && props.ticks !== false;\n  const interactiveTrack = (props.interactiveTrack !== undefined) ? props.interactiveTrack : true;\n  const stepCount = Math.min(MAX_TICKS, parseInt(range / stepSize, 10));\n  const defaultValue = props.defaultValue !== undefined\n    ? props.defaultValue\n    : props.value !== undefined\n      ? props.value\n      : 0;\n\n  const focusElementRef = useRef();\n  const trackElRef = useRef();\n  const controlElRef = useRef();\n  const pinElRef = useRef();\n\n  const [domElement, setDomElement] = useState();\n  const [fraction, setFraction] = useState(min);\n  const [hasFocus, setHasFocus] = useState(false);\n  const [value, setValue] = useState();\n  const [previousValue, setPreviousValue] = useState();\n  const [isActive, setIsActive] = useState(false);\n  const isDraggingRef = useRef();\n  const clickOffsetRef = useRef();\n  const rangeWidthRef = useRef();\n  const rangeOffsetRef = useRef();\n  const controlWidthRef = useRef();\n\n  const updatePinPosition = () => {\n    if (controlElRef.current && pinElRef.current) {\n      const left = fraction * rangeWidthRef.current;\n      pinElRef.current.style.left = left + \"px\";\n    }\n  };\n  \n  const generateTickMarks = (h, stepCount, stepSize, value) => {\n    const items = [];\n    const stepWithValue = value / stepSize;\n    let s = 0;\n    while (s < stepCount + 1) {\n      items.push(h(\"div\", {\n        className: s <= stepWithValue\n          ? [classes.tick, classes.tickValue].join(\" \")\n          : classes.tick,\n        key: `tick-${s}`\n      }));\n      s++;\n    }\n    return items;\n  };\n  \n  const readRangeData = () => {\n    if (controlElRef.current && isClient) {\n      // range is from the far left to the far right minus the thumb width (max x is at the left side of the thumb)\n      controlWidthRef.current = parseFloat(getStyle({ element: controlElRef.current, prop: \"width\" }));\n      rangeWidthRef.current = trackElRef.current.getBoundingClientRect().width - controlWidthRef.current;\n      const styles = window.getComputedStyle(trackElRef.current);\n      rangeOffsetRef.current = parseFloat(styles.marginLeft);\n    }\n  };\n  \n  const updateClickOffset = (controlOffset = 0) => {\n    clickOffsetRef.current = trackElRef.current.getBoundingClientRect().left - (rangeOffsetRef.current - controlWidthRef.current / 2) + controlOffset;\n  };\n  \n  const initControlEvent = e => {\n    const controlPos = controlElRef.current.getBoundingClientRect().left;\n    const eventPos = positionFromEvent(e);\n    const controlOffset = eventPos - controlPos - controlWidthRef.current / 2;\n    updateClickOffset(controlOffset);\n  };\n  \n  const initTrackEvent = () =>\n    updateClickOffset(0);\n  \n  const handlePosEvent = e => {\n    const pos = positionFromEvent(e) - clickOffsetRef.current;\n    const newValue = min + ((pos - rangeOffsetRef.current) / rangeWidthRef.current) * range;\n    updateValue(newValue);\n  };\n  \n  const startDrag = e => {\n    if (isDraggingRef.current) return;\n    e.preventDefault();\n    isDraggingRef.current = true;\n    setIsActive(true);\n    deFocus();\n  \n    const drag = e => {\n      if (!isDraggingRef.current) return;\n      handlePosEvent(e);\n    };\n  \n    const endDrag = () => {\n      if (!isDraggingRef.current) return;\n      deFocus();\n      if (isClient) {\n        pointerMoveEvent.forEach(evt =>\n          window.removeEventListener(evt, drag));\n        pointerEndDownEvent.forEach(evt =>\n          window.removeEventListener(evt, endDrag));\n      }\n      isDraggingRef.current = false;\n      setIsActive(false);\n    };\n  \n    if (isClient) {\n      pointerMoveEvent.forEach(evt =>\n        window.addEventListener(evt, drag));\n      pointerEndDownEvent.forEach(evt =>\n        window.addEventListener(evt, endDrag));\n    }\n    readRangeData();\n  };\n\n  const handleNewValue = ({ value, shouldNotify = false }) => {\n    if (value < min) value = min;\n    if (value > max) value = max;\n    const newValue = stepSize\n      ? Math.round(value * normalizeFactor) / normalizeFactor\n      : value;\n    setFraction((newValue - min) / range);\n    setPreviousValue(newValue);\n    setValue(newValue);\n    if (shouldNotify && props.onChange) {\n      props.onChange({\n        value: newValue\n      });\n    }\n  };\n\n  const updateValue = value => {\n    handleNewValue({ value, shouldNotify: true });\n  };\n\n  const increment = useLargeStep =>\n    updateValue(value + (useLargeStep ? 10 : 1) * (stepSize || 1));\n\n  const decrement = useLargeStep =>\n    updateValue(value - (useLargeStep ? 10 : 1) * (stepSize || 1));\n\n  const deFocus = () => {\n    if (focusElementRef.current) {\n      focusElementRef.current.blur();\n    }\n    focusElementRef.current = undefined;\n    setHasFocus(false);\n  };\n  \n  const focus = element => {\n    deFocus();\n    focusElementRef.current = element;\n    setHasFocus(true);\n  };\n  \n  // State refs\n  useEffect(\n    () => {\n      isDraggingRef.current = false;\n      clickOffsetRef.current = 0;\n      rangeWidthRef.current = 0;\n      rangeOffsetRef.current = 0;\n      controlWidthRef.current = 0;\n    },\n    []\n  );\n\n  // DOM children\n  useEffect(\n    () => {\n      if (!domElement) {\n        return;\n      }\n\n      trackElRef.current = domElement.querySelector(`.${classes.track}`);\n      controlElRef.current = domElement.querySelector(`.${classes.control}`);\n      pinElRef.current = domElement.querySelector(`.${classes.pin}`);\n\n      readRangeData();\n      handleNewValue({ value: defaultValue });\n    },\n    [domElement]\n  );\n\n  // Pin position\n  useEffect(\n    () => {\n      if (!props.pin) {\n        return;\n      }\n      updatePinPosition();\n    },\n    [value]\n  );\n\n  // Handle external changes of `value`\n  useEffect(\n    () => {\n      if (previousValue !== props.value) {\n        handleNewValue({ value: props.value });\n      }\n    },\n    [props.value]\n  );\n\n\n  const componentProps = Object.assign({}, \n    filterSupportedAttributes(props),\n    getRef(dom => dom && !domElement && setDomElement(dom)),\n    props.testId && { \"data-test-id\": props.testId },\n    {\n      className: [\n        classes.component,\n        props.disabled ? classes.isDisabled : null,\n        props.pin ? classes.hasPin : null,\n        interactiveTrack ? classes.hasTrack : null,\n        isActive ? classes.isActive : null,\n        hasFocus ? classes.hasFocus : null,\n        fraction === 0 ? classes.isAtMin : null,\n        hasTicks ? classes.hasTicks : null,\n        props.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        props.tone === \"light\" ? \"pe-light-tone\" : null,\n        props.className || props[a.class],\n      ].join(\" \")\n    }\n  );\n  \n  const onStartTrack = e => {\n    e.preventDefault();\n    if (isDraggingRef.current) {\n      return;\n    }\n    readRangeData();\n    initTrackEvent();\n    handlePosEvent(e);\n    startDrag(e);\n  };\n\n  const onInitDrag = e => {\n    e.preventDefault();\n    readRangeData();\n    initControlEvent(e);\n    startDrag(e);\n  };\n\n  const flexValueCss =  fraction + \" 1 0%\";\n  const flexRestValue = 1 - fraction;\n  const flexRestCss =   flexRestValue + \" 1 0%\";\n\n  const content = [\n    props.before,\n    h(\"div\",\n      Object.assign(\n        {},\n        { className: classes.track },\n        interactiveTrack && !props.disabled && pointerStartDownEvent.reduce((acc, evt) => (\n          acc[a[`on${evt}`]] = onStartTrack,\n          acc\n        ), {})\n      ),\n      [\n        h(\"div\",\n          {\n            className: classes.trackPart + \" \" + classes.trackPartValue,\n            style: {\n              flex: flexValueCss,\n              msFlex: flexValueCss,\n              WebkitFlex: flexValueCss\n            }\n          },\n          h(\"div\", { className: classes.trackBar },\n            h(\"div\", { className: classes.trackBarValue })\n          )\n        ),\n        h(\"div\", Object.assign(\n          {},\n          {\n            className: classes.control,\n          },\n          props.disabled\n            ? { disabled: true }\n            : {\n              [a.tabindex]: props[a.tabindex] || 0,\n              [a.onfocus]: () => focus(controlElRef.current),\n              [a.onblur]: () => deFocus(),\n              [a.onkeydown]: e => {\n                if (e.key !== \"Tab\") {\n                  e.preventDefault();\n                }\n                if (e.key === \"Escape\" || e.key === \"Esc\") {\n                  controlElRef.current.blur(e);\n                } else if (e.key === \"ArrowLeft\" || e.key === \"ArrowDown\" || e.key === \"Left\" || e.key === \"Down\") {\n                  decrement(!!e.shiftKey);\n                } else if (e.key === \"ArrowRight\" || e.key === \"ArrowUp\" || e.key === \"Right\" || e.key === \"Up\") {\n                  increment(!!e.shiftKey);\n                } else if (e.key === \"Home\") {\n                  updateValue(min);\n                } else if (e.key === \"End\") {\n                  updateValue(max);\n                } else if (e.key === \"PageDown\") {\n                  decrement(true);\n                } else if (e.key === \"PageUp\") {\n                  increment(true);\n                }\n                readRangeData();\n              }\n            },\n          !props.disabled &&\n            pointerStartDownEvent.reduce((acc, evt) => (\n              acc[a[`on${evt}`]] = onInitDrag,\n              acc\n            ), {}),\n          props.events\n            ? props.events\n            : null,\n          hasTicks\n            ? { step: stepCount }\n            : null\n        ),\n        props.icon\n          ? h(\"div\",\n            {\n              className: classes.thumb,\n            },\n            props.icon\n          )\n          : null\n        ),\n        h(\"div\",\n          {\n            className: classes.trackPart + \" \" + classes.trackPartRest,\n            style: {\n              flex: flexRestCss,\n              msFlex: flexRestCss,\n              WebkitFlex: flexRestCss,\n              maxWidth: (flexRestValue * 100) + \"%\" // for IE Edge\n            }\n          },\n          h(\"div\", { className: classes.trackBar },\n            h(\"div\", { className: classes.trackBarValue })\n          )\n        ),\n        hasTicks && !props.disabled\n          ? h(\"div\",\n            {\n              className: classes.ticks,\n            },\n            generateTickMarks(h, stepCount, stepSize, value)\n          )\n          : null,\n        hasTicks && props.pin && !props.disabled\n          ? h(\"div\",\n            {\n              className: classes.pin,\n              value\n            }\n          )\n          : null\n      ]\n    ),\n    props.after\n  ];\n\n  return h(props.element || \"div\", componentProps, content);\n};\n"],"names":["component","control","label","pin","thumb","tick","ticks","track","trackBar","trackBarValue","trackPart","trackPartRest","trackPartValue","hasFocus","hasPin","hasTicks","hasTrack","isActive","isAtMin","isDisabled","tickValue","positionFromEvent","e","isVertical","isTouch","touches","pageY","pageX","h","a","useState","useEffect","useRef","getRef","props","min","undefined","max","range","stepSize","normalizeFactor","interactiveTrack","stepCount","Math","parseInt","defaultValue","value","focusElementRef","trackElRef","controlElRef","pinElRef","domElement","setDomElement","fraction","setFraction","setHasFocus","setValue","previousValue","setPreviousValue","setIsActive","isDraggingRef","clickOffsetRef","rangeWidthRef","rangeOffsetRef","controlWidthRef","readRangeData","current","isClient","parseFloat","getStyle","element","prop","getBoundingClientRect","width","styles","window","getComputedStyle","marginLeft","updateClickOffset","controlOffset","left","handlePosEvent","pos","newValue","updateValue","startDrag","preventDefault","deFocus","drag","endDrag","pointerMoveEvent","forEach","evt","removeEventListener","pointerEndDownEvent","addEventListener","handleNewValue","shouldNotify","round","onChange","increment","useLargeStep","decrement","blur","querySelector","classes","style","updatePinPosition","componentProps","_extends","filterSupportedAttributes","dom","testId","className","disabled","tone","join","onStartTrack","onInitDrag","controlPos","initControlEvent","flexValueCss","flexRestValue","flexRestCss","content","before","pointerStartDownEvent","reduce","acc","flex","msFlex","WebkitFlex","tabindex","onfocus","onblur","onkeydown","key","shiftKey","events","step","icon","maxWidth","items","stepWithValue","s","push","generateTickMarks","after"],"mappings":"27DACe,CACbA,UAAgB,YAGhBC,QAAgB,qBAChBC,MAAgB,mBAChBC,IAAgB,iBAChBC,MAAgB,mBAChBC,KAAgB,kBAChBC,MAAgB,mBAChBC,MAAgB,mBAChBC,SAAgB,uBAChBC,cAAgB,6BAChBC,UAAgB,wBAChBC,cAAgB,wBAChBC,eAAgB,yBAGhBC,SAAgB,mBAChBC,OAAgB,iBAChBC,SAAgB,mBAChBC,SAAgB,mBAChBC,SAAgB,oBAChBC,QAAgB,iBAChBC,WAAgB,sBAChBC,UAAgB,0BCrBZC,EAAoB,SAACC,EAAGC,UAE5BC,WAAWF,EAAEG,QACTF,EAAaD,EAAEG,QAAQ,GAAGC,MAAQJ,EAAEG,QAAQ,GAAGE,MAC/CJ,EAAaD,EAAEI,MAAQJ,EAAEK,iBAER,kBAAGC,IAAAA,EAAGC,IAAAA,EAAGC,IAAAA,SAAUC,IAAAA,UAAWC,IAAAA,OAAQC,IAAAA,OAAWC,0DAChEC,OAAoBC,IAAdF,EAAMC,IAAoBD,EAAMC,IAAM,EAC5CE,OAAoBD,IAAdF,EAAMG,IAAoBH,EAAMG,IAAM,IAC5CC,EAAQD,EAAMF,EACdI,OAA8BH,IAAnBF,EAAMK,SACnBL,EAAMK,SACN,EACEC,EAAkB,EAAID,EACtBxB,OAA2BqB,IAAhBF,EAAM5B,QAAuC,IAAhB4B,EAAM5B,MAC9CmC,OAA+CL,IAA3BF,EAAMO,kBAAkCP,EAAMO,iBAClEC,EAAYC,KAAKR,IAlBP,IAkBsBS,SAASN,EAAQC,EAAU,KAC3DM,OAAsCT,IAAvBF,EAAMW,aACvBX,EAAMW,kBACUT,IAAhBF,EAAMY,MACJZ,EAAMY,MACN,EAEAC,EAAkBf,IAClBgB,EAAahB,IACbiB,EAAejB,IACfkB,EAAWlB,QAEmBF,OAA7BqB,OAAYC,WACatB,EAASK,MAAlCkB,OAAUC,WACexB,GAAS,MAAlCjB,OAAU0C,WACSzB,OAAnBgB,OAAOU,WAC4B1B,OAAnC2B,OAAeC,WACU5B,GAAS,MAAlCb,OAAU0C,OACXC,EAAgB5B,IAChB6B,EAAiB7B,IACjB8B,EAAgB9B,IAChB+B,EAAiB/B,IACjBgC,EAAkBhC,IAyBlBiC,EAAgB,cAChBhB,EAAaiB,SAAWC,WAAU,CAEpCH,EAAgBE,QAAUE,WAAWC,WAAS,CAAEC,QAASrB,EAAaiB,QAASK,KAAM,WACrFT,EAAcI,QAAUlB,EAAWkB,QAAQM,wBAAwBC,MAAQT,EAAgBE,YACrFQ,EAASC,OAAOC,iBAAiB5B,EAAWkB,SAClDH,EAAeG,QAAUE,WAAWM,EAAOG,cAIzCC,EAAoB,eAACC,yDAAgB,EACzClB,EAAeK,QAAUlB,EAAWkB,QAAQM,wBAAwBQ,MAAQjB,EAAeG,QAAUF,EAAgBE,QAAU,GAAKa,GAahIE,GAAiB,SAAA3D,OACf4D,EAAM7D,EAAkBC,GAAKuC,EAAeK,QAC5CiB,EAAWhD,GAAQ+C,EAAMnB,EAAeG,SAAWJ,EAAcI,QAAW5B,EAClF8C,GAAYD,IAGRE,GAAY,SAAA/D,OACZsC,EAAcM,SAClB5C,EAAEgE,iBACF1B,EAAcM,SAAU,EACxBP,GAAY,GACZ4B,SAEMC,EAAO,SAAAlE,GACNsC,EAAcM,SACnBe,GAAe3D,IAGXmE,EAAU,SAAVA,IACC7B,EAAcM,UACnBqB,KACIpB,aACFuB,mBAAiBC,SAAQ,SAAAC,UACvBjB,OAAOkB,oBAAoBD,EAAKJ,MAClCM,sBAAoBH,SAAQ,SAAAC,UAC1BjB,OAAOkB,oBAAoBD,EAAKH,OAEpC7B,EAAcM,SAAU,EACxBP,GAAY,KAGVQ,aACFuB,mBAAiBC,SAAQ,SAAAC,UACvBjB,OAAOoB,iBAAiBH,EAAKJ,MAC/BM,sBAAoBH,SAAQ,SAAAC,UAC1BjB,OAAOoB,iBAAiBH,EAAKH,OAEjCxB,MAGI+B,GAAiB,gBAAGlD,IAAAA,UAAOmD,aAAAA,gBAC3BnD,EAAQX,IAAKW,EAAQX,GACrBW,EAAQT,IAAKS,EAAQT,OACnB8C,EAAW5C,EACbI,KAAKuD,MAAMpD,EAAQN,GAAmBA,EACtCM,EACJQ,GAAa6B,EAAWhD,GAAOG,GAC/BoB,EAAiByB,GACjB3B,EAAS2B,GACLc,GAAgB/D,EAAMiE,UACxBjE,EAAMiE,SAAS,CACbrD,MAAOqC,KAKPC,GAAc,SAAAtC,GAClBkD,GAAe,CAAElD,MAAAA,EAAOmD,cAAc,KAGlCG,GAAY,SAAAC,UAChBjB,GAAYtC,GAASuD,EAAe,GAAK,IAAM9D,GAAY,KAEvD+D,GAAY,SAAAD,UAChBjB,GAAYtC,GAASuD,EAAe,GAAK,IAAM9D,GAAY,KAEvDgD,GAAU,WACVxC,EAAgBmB,SAClBnB,EAAgBmB,QAAQqC,OAE1BxD,EAAgBmB,aAAU9B,EAC1BmB,GAAY,IAUdxB,GACE,WACE6B,EAAcM,SAAU,EACxBL,EAAeK,QAAU,EACzBJ,EAAcI,QAAU,EACxBH,EAAeG,QAAU,EACzBF,EAAgBE,QAAU,IAE5B,IAIFnC,GACE,WACOoB,IAILH,EAAWkB,QAAUf,EAAWqD,yBAAkBC,EAAQlG,QAC1D0C,EAAaiB,QAAUf,EAAWqD,yBAAkBC,EAAQxG,UAC5DiD,EAASgB,QAAUf,EAAWqD,yBAAkBC,EAAQtG,MAExD8D,IACA+B,GAAe,CAAElD,MAAOD,OAE1B,CAACM,IAIHpB,GACE,WACOG,EAAM/B,KA/JW,cACpB8C,EAAaiB,SAAWhB,EAASgB,QAAS,KACtCc,EAAO3B,EAAWS,EAAcI,QACtChB,EAASgB,QAAQwC,MAAM1B,KAAOA,EAAO,MA+JrC2B,KAEF,CAAC7D,IAIHf,GACE,WACM0B,IAAkBvB,EAAMY,OAC1BkD,GAAe,CAAElD,MAAOZ,EAAMY,UAGlC,CAACZ,EAAMY,YAIH8D,GAAiBC,EAAc,GACnCC,4BAA0B5E,GAC1BD,GAAO,SAAA8E,UAAOA,IAAQ5D,GAAcC,EAAc2D,MAClD7E,EAAM8E,QAAU,gBAAkB9E,EAAM8E,QACxC,CACEC,UAAW,CACTR,EAAQzG,UACRkC,EAAMgF,SAAWT,EAAQtF,WAAa,KACtCe,EAAM/B,IAAMsG,EAAQ3F,OAAS,KAC7B2B,EAAmBgE,EAAQzF,SAAW,KACtCC,EAAWwF,EAAQxF,SAAW,KAC9BJ,EAAW4F,EAAQ5F,SAAW,KACjB,IAAbwC,EAAiBoD,EAAQvF,QAAU,KACnCH,EAAW0F,EAAQ1F,SAAW,KACf,SAAfmB,EAAMiF,KAAkB,eAAiB,KAC1B,UAAfjF,EAAMiF,KAAmB,gBAAkB,KAC3CjF,EAAM+E,WAAa/E,EAAML,UACzBuF,KAAK,OAILC,GAAe,SAAA/F,GACnBA,EAAEgE,iBACE1B,EAAcM,UAGlBD,IA/JAa,EAAkB,GAiKlBG,GAAe3D,GACf+D,GAAU/D,KAGNgG,GAAa,SAAAhG,GACjBA,EAAEgE,iBACFrB,IA/KuB,SAAA3C,OACjBiG,EAAatE,EAAaiB,QAAQM,wBAAwBQ,KAE1DD,EADW1D,EAAkBC,GACFiG,EAAavD,EAAgBE,QAAU,EACxEY,EAAkBC,GA4KlByC,CAAiBlG,GACjB+D,GAAU/D,IAGNmG,GAAgBpE,EAAW,QAC3BqE,GAAgB,EAAIrE,EACpBsE,GAAgBD,GAAgB,QAEhCE,GAAU,CACd1F,EAAM2F,OACNjG,EAAE,MACAiF,EACE,GACA,CAAEI,UAAWR,EAAQlG,OACrBkC,IAAqBP,EAAMgF,UAAYY,wBAAsBC,QAAO,SAACC,EAAKpC,UACxEoC,EAAInG,cAAO+D,KAAUyB,GACrBW,IACC,KAEL,CACEpG,EAAE,MACA,CACEqF,UAAWR,EAAQ/F,UAAY,IAAM+F,EAAQ7F,eAC7C8F,MAAO,CACLuB,KAAMR,GACNS,OAAQT,GACRU,WAAYV,KAGhB7F,EAAE,MAAO,CAAEqF,UAAWR,EAAQjG,UAC5BoB,EAAE,MAAO,CAAEqF,UAAWR,EAAQhG,kBAGlCmB,EAAE,MAAOiF,EACP,GACA,CACEI,UAAWR,EAAQxG,SAErBiC,EAAMgF,SACF,CAAEA,UAAU,aAEXrF,EAAEuG,SAAWlG,EAAML,EAAEuG,WAAa,OAClCvG,EAAEwG,SAAU,kBAtIX/D,EAsIuBrB,EAAaiB,QArIhDqB,KACAxC,EAAgBmB,QAAUI,OAC1Bf,GAAY,GAHA,IAAAe,SAuIDzC,EAAEyG,QAAS,kBAAM/C,YACjB1D,EAAE0G,WAAY,SAAAjH,GACC,QAAVA,EAAEkH,KACJlH,EAAEgE,iBAEU,WAAVhE,EAAEkH,KAA8B,QAAVlH,EAAEkH,IAC1BvF,EAAaiB,QAAQqC,KAAKjF,GACP,cAAVA,EAAEkH,KAAiC,cAAVlH,EAAEkH,KAAiC,SAAVlH,EAAEkH,KAA4B,SAAVlH,EAAEkH,IACjFlC,KAAYhF,EAAEmH,UACK,eAAVnH,EAAEkH,KAAkC,YAAVlH,EAAEkH,KAA+B,UAAVlH,EAAEkH,KAA6B,OAAVlH,EAAEkH,IACjFpC,KAAY9E,EAAEmH,UACK,SAAVnH,EAAEkH,IACXpD,GAAYjD,GACO,QAAVb,EAAEkH,IACXpD,GAAY/C,GACO,aAAVf,EAAEkH,IACXlC,IAAU,GACS,WAAVhF,EAAEkH,KACXpC,IAAU,GAEZnC,WAGL/B,EAAMgF,UACLY,wBAAsBC,QAAO,SAACC,EAAKpC,UACjCoC,EAAInG,cAAO+D,KAAU0B,GACrBU,IACC,IACL9F,EAAMwG,OACFxG,EAAMwG,OACN,KACJ3H,EACI,CAAE4H,KAAMjG,GACR,MAENR,EAAM0G,KACFhH,EAAE,MACF,CACEqF,UAAWR,EAAQrG,OAErB8B,EAAM0G,MAEN,MAEJhH,EAAE,MACA,CACEqF,UAAWR,EAAQ/F,UAAY,IAAM+F,EAAQ9F,cAC7C+F,MAAO,CACLuB,KAAMN,GACNO,OAAQP,GACRQ,WAAYR,GACZkB,SAA2B,IAAhBnB,GAAuB,MAGtC9F,EAAE,MAAO,CAAEqF,UAAWR,EAAQjG,UAC5BoB,EAAE,MAAO,CAAEqF,UAAWR,EAAQhG,kBAGlCM,IAAamB,EAAMgF,SACftF,EAAE,MACF,CACEqF,UAAWR,EAAQnG,OAtTL,SAACsB,EAAGc,EAAWH,EAAUO,WAC3CgG,EAAQ,GACRC,EAAgBjG,EAAQP,EAC1ByG,EAAI,EACDA,EAAItG,EAAY,GACrBoG,EAAMG,KAAKrH,EAAE,MAAO,CAClBqF,UAAW+B,GAAKD,EACZ,CAACtC,EAAQpG,KAAMoG,EAAQrF,WAAWgG,KAAK,KACvCX,EAAQpG,KACZmI,mBAAaQ,MAEfA,WAEKF,EA2SCI,CAAkBtH,EAAGc,EAAWH,EAAUO,IAE1C,KACJ/B,GAAYmB,EAAM/B,MAAQ+B,EAAMgF,SAC5BtF,EAAE,MACF,CACEqF,UAAWR,EAAQtG,IACnB2C,MAAAA,IAGF,OAGRZ,EAAMiH,cAGDvH,EAAEM,EAAMoC,SAAW,MAAOsC,GAAgBgB"}