{"version":3,"file":"polythene-css-material-design-spinner.js","sources":["../src/color.js","../src/layout.js","../src/vars.js","../src/index.js","../../polythene-css-classes/material-design-spinner.js"],"sourcesContent":["// @ts-check\n\nimport { color as superColor } from \"polythene-css-base-spinner\";\nimport { sel, createColor } from \"polythene-core-css\";\n\n/*\nStyling derived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst generalFns = ({\n  general_styles: selector => [\n    sel(selector, {\n      \" .pe-md-spinner__layer\": {\n        borderColor: \"currentcolor\"\n      },\n    })\n  ],\n});\n\nconst tintFns = tint => ({\n  [\"color_\" + tint + \"_single\"]: (selector, vars) => [\n    sel(selector, {\n      color: vars[\"color_\" + tint + \"_single\"],\n    })\n  ],\n  [\"color_\" + tint + \"_1\"]: (selector, vars) => [\n    sel(selector, {\n      \":not(.pe-spinner--single-color)\": {\n        \" .pe-md-spinner__layer-1\": {\n          borderColor: vars[\"color_\" + tint + \"_1\"]\n        },\n      }\n    })\n  ],\n  [\"color_\" + tint + \"_2\"]: (selector, vars) => [\n    sel(selector, {\n      \":not(.pe-spinner--single-color)\": {\n        \" .pe-md-spinner__layer-2\": {\n          borderColor: vars[\"color_\" + tint + \"_2\"]\n        },\n      }\n    })\n  ],\n  [\"color_\" + tint + \"_3\"]: (selector, vars) => [\n    sel(selector, {\n      \":not(.pe-spinner--single-color)\": {\n        \" .pe-md-spinner__layer-3\": {\n          borderColor: vars[\"color_\" + tint + \"_3\"]\n        },\n      }\n    })\n  ],\n  [\"color_\" + tint + \"_4\"]: (selector, vars) => [\n    sel(selector, {\n      \":not(.pe-spinner--single-color)\": {\n        \" .pe-md-spinner__layer-4\": {\n          borderColor: vars[\"color_\" + tint + \"_4\"]\n        },\n      }\n    })\n  ],\n});\n\nconst lightTintFns = Object.assign({}, generalFns, tintFns(\"light\"));\nconst darkTintFns = Object.assign({}, generalFns, tintFns(\"dark\"));\n\nexport default createColor({\n  varFns: { lightTintFns, darkTintFns },\n  superColor\n});\n\n","// @ts-check\n\n/*\nStyling derived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { layout as superLayout } from \"polythene-css-base-spinner\";\nimport { mixin, sel, createLayout } from \"polythene-core-css\";\n\nconst OPACITY_MIN = 0;\nconst OPACITY_MAX = .99;\nconst CURVE_INFINITE = \"cubic-bezier(0.4, 0.0, 0.2, 1) infinite both\";\n\nconst kfRotate = () => ({\n  \" to\": {\n    transform: \"rotate(360deg)\"\n  }\n});\n\nconst kfLeftSpin = () => (kfSpin(1));\nconst kfRightSpin = () => (kfSpin(-1));\n\nconst kfSpin = (direction) => ({\n  \" from\": {\n    \"transform\": \"rotate(\" + (direction * 130) + \"deg)\"\n  },\n  \" 50%\": {\n    \"transform\": \"rotate(\" + (direction * -5) + \"deg)\"\n  },\n  \" to\": {\n    \"transform\": \"rotate(\" + (direction * 130) + \"deg)\"\n  }\n});\n\nconst kfFadeOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MAX\n  },\n  \" to\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst kfFillUnfillRotate = arcSize => ({\n  \" 12.5%\": {\n    transform: \"rotate(\" + (0.5 * arcSize) + \"deg)\"\n  },\n  \" 25%\": {\n    transform: \"rotate(\" + (1.0 * arcSize) + \"deg)\"\n  },\n  \" 37.5%\": {\n    transform: \"rotate(\" + (1.5 * arcSize) + \"deg)\"\n  },\n  \" 50%\": {\n    transform: \"rotate(\" + (2.0 * arcSize) + \"deg)\"\n  },\n  \" 62.5%\": {\n    transform: \"rotate(\" + (2.5 * arcSize) + \"deg)\"\n  },\n  \" 75%\": {\n    transform: \"rotate(\" + (3.0 * arcSize) + \"deg)\"\n  },\n  \" 87.5%\": {\n    transform: \"rotate(\" + (3.5 * arcSize) + \"deg)\"\n  },\n  \" to\": {\n    transform: \"rotate(\" + (4.0 * arcSize) + \"deg)\"\n  },\n});\n\n/**\n * HACK: Even though the intention is to have the current .pe-md-spinner__layer at\n * `opacity: 1`, we set it to `opacity: 0.99` instead since this forces Chrome\n * to do proper subpixel rendering for the elements being animated. This is\n * especially visible in Chrome 39 on Ubuntu 14.04. See:\n *\n * - https://github.com/Polymer/paper-spinner/issues/9\n * - https://code.google.com/p/chromium/issues/detail?id=436255\n */\nconst kfLayer1FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MAX\n  },\n  \" 25%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 26%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 89%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 90%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 100%\": {\n    opacity: OPACITY_MAX\n  },\n});\n\nconst kfLayer2FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MIN\n  },\n  \" 15%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 25%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 50%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 51%\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst kfLayer3FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MIN\n  },\n  \" 40%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 50%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 75%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 76%\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst kfLayer4FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MIN\n  },\n  \" 65%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 75%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 90%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 100%\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst layerAnimation = (vars, num) => ({\n  [\".pe-md-spinner__layer-\" + num]: {\n    animation: \"mdSpinnerFillUnfillRotate \" + 4 * vars.arc_time + \"s \" + CURVE_INFINITE + \",  mdSpinnerLayer\" + num + \"FadeInOut \" + 4 * vars.arc_time + \"s \" + CURVE_INFINITE\n  }\n});\n\nconst varFns = {\n  general_styles: (selector, vars) => [\n    sel(selector, {\n      \"@keyframes mdSpinnerRotate\": kfRotate(),\n      \"@keyframes mdSpinnerRightSpin\": kfRightSpin(),\n      \"@keyframes mdSpinnerLeftSpin\": kfLeftSpin(),\n      \"@keyframes mdSpinnerFadeOut\": kfFadeOut(),\n      \"@keyframes mdSpinnerLayer1FadeInOut\": kfLayer1FadeInOut(),\n      \"@keyframes mdSpinnerLayer2FadeInOut\": kfLayer2FadeInOut(),\n      \"@keyframes mdSpinnerLayer3FadeInOut\": kfLayer3FadeInOut(),\n      \"@keyframes mdSpinnerLayer4FadeInOut\": kfLayer4FadeInOut(),\n\n      \" .pe-md-spinner__animation\": {\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100%\",\n\n        /* The spinner does not have any contents that would have to be\n        * flipped if the direction changes. Always use ltr so that the\n        * style works out correctly in both cases. */\n        direction: \"ltr\"\n      },\n\n      /**\n      * Patch the gap that appear between the two adjacent div.pe-md-spinner__circle-clipper while the\n      * spinner is rotating (appears on Chrome 38, Safari 7.1, and IE 11).\n      *\n      * Update: the gap no longer appears on Chrome when .pe-md-spinner__layer\"s opacity is 0.99,\n      * but still does on Safari and IE.\n      */\n      \" .pe-md-spinner__gap-patch\": {\n        position: \"absolute\",\n        boxSizing: \"border-box\",\n        top: 0,\n        left: \"45%\",\n        width: \"10%\",\n        height: \"100%\",\n        overflow: \"hidden\",\n        borderColor: \"inherit\"\n      },\n\n      \" .pe-md-spinner__gap-patch .pe-md-spinner__circle\": {\n        width: \"1000%\",\n        left: \"-450%\"\n      },\n\n      \" .pe-md-spinner__circle-clipper\": {\n        display: \"inline-block\",\n        fontSize: 0,\n        lineHeight: 0,\n        position: \"relative\",\n        width: \"50%\",\n        height: \"100%\",\n        overflow: \"hidden\",\n        borderColor: \"inherit\"\n      },\n\n      \" .pe-md-spinner__circle-clipper .pe-md-spinner__circle\": {\n        width: \"200%\"\n      },\n\n      \" .pe-md-spinner__circle\": [\n        mixin.fit(),\n        {\n          animation: \"none\",\n          boxSizing: \"border-box\",\n          height: \"100%\",\n          borderStyle: \"solid\",\n          borderColor: \"inherit\",\n          borderRadius: \"50%\",\n          borderBottomColor: \"transparent !important\"\n        }\n      ],\n\n      \" .pe-md-spinner__circle-clipper-left .pe-md-spinner__circle\": {\n        transform: \"rotate(129deg)\",\n        borderRightColor: \"transparent !important\"\n      },\n\n      \" .pe-md-spinner__circle-clipper-right .pe-md-spinner__circle\": {\n        transform: \"rotate(-129deg)\",\n        left: \"-100%\",\n        borderLeftColor: \"transparent !important\"\n      },\n\n      /**\n      * IMPORTANT NOTE ABOUT CSS ANIMATION PROPERTIES (keanulee):\n      *\n      * iOS Safari (tested on iOS 8.1) does not handle animation-delay very well - it doesn\"t\n      * guarantee that the animation will start _exactly_ after that value. So we avoid using\n      * animation-delay and instead set custom keyframes for each color (as redundant as it\n      * seems).\n      *\n      * We write out each animation in full (instead of separating animation-name,\n      * animation-duration, etc.) because under the polyfill, Safari does not recognize those\n      * specific properties properly, treats them as -webkit-animation, and overrides the\n      * other animation rules. See https://github.com/Polymer/platform/issues/53.\n      */\n      \" .pe-md-spinner__layer\": [\n        [1,2,3,4].map(num => layerAnimation(vars, num)),\n        {\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          whiteSpace: \"nowrap\"\n        }\n      ],\n    })\n  ],\n  rotation_duration: (selector, vars) => [\n    sel(selector, {\n      \" .pe-md-spinner__animation\": {\n        animation: \"mdSpinnerRotate \" + vars.rotation_duration + \"s linear infinite\",\n      },\n    })\n  ],\n  border_width_small: (selector, vars) => [\n    sel(selector, {\n      \".pe-spinner--small\": {\n        \" .pe-md-spinner__circle\": {\n          borderWidth: vars.border_width_small + \"px\"\n        }\n      }\n    })\n  ],\n  border_width_regular: (selector, vars) => [\n    sel(selector, {\n      \".pe-spinner--regular\": {\n        \" .pe-md-spinner__circle\": {\n          borderWidth: vars.border_width_regular + \"px\"\n        }\n      }\n    })\n  ],\n  border_width_medium: (selector, vars) => [\n    sel(selector, {\n      \".pe-spinner--medium\": {\n        \" .pe-md-spinner__circle\": {\n          borderWidth: vars.border_width_medium + \"px\"\n        }\n      }\n    })\n  ],\n  border_width_large: (selector, vars) => [\n    sel(selector, {\n      \".pe-spinner--large\": {\n        \" .pe-md-spinner__circle\": {\n          borderWidth: vars.border_width_large + \"px\"\n        }\n      }\n    })\n  ],\n  border_width_fab: (selector, vars) => [\n    sel(selector, {\n      \".pe-spinner--fab\": {\n        \" .pe-md-spinner__circle\": {\n          borderWidth: vars.border_width_fab + \"px\"\n        }\n      }\n    })\n  ],\n  arc_size: (selector, vars) => [\n    sel(selector, {\n      \"@keyframes mdSpinnerFillUnfillRotate\": kfFillUnfillRotate(vars.arc_size),\n    })\n  ],\n  arc_time: (selector, vars) => [\n    sel(selector, {\n      \" .pe-md-spinner__circle-clipper-left .pe-md-spinner__circle\": {\n        animation: \"mdSpinnerLeftSpin \" + vars.arc_time + \"s \" + CURVE_INFINITE,\n      },\n      \" .pe-md-spinner__circle-clipper-right .pe-md-spinner__circle\": {\n        animation: \"mdSpinnerRightSpin \" + vars.arc_time + \"s \" + CURVE_INFINITE,\n      },\n      \" .pe-md-spinner__layer\": {\n        animation: \"mdSpinnerFillUnfillRotate \" + 4 * vars.arc_time + \"s \" + CURVE_INFINITE,\n      },\n    })\n  ],\n};\n\nexport default createLayout({ varFns, superLayout });\n","// @ts-check\n\n/**\n * @typedef {import(\"../index\").MaterialDesignSpinnerVars} MaterialDesignSpinnerVars\n */\n\n/*\nStyling derived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { rgba } from \"polythene-core-css\";\nimport { vars as superVars } from \"polythene-css-base-spinner\";\nimport { vars } from \"polythene-theme\";\n \nconst arc_size =          270; // degrees - amount of circle the arc takes up\nconst arc_time =          1.333; // s - time it takes to expand and contract arc\nconst arc_start_degrees = 360/5 * 3; // degrees - how much the start location of the arc should rotate each time, 216 gives us a 5 pointed star shape (it\"s 360/5 * 3). For a 7 pointed star, we might do 360/7 * 3 = 154.286.\nconst rotation_duration = 360 * arc_time / (arc_start_degrees + (360 - arc_size)); // 1.568s\n\nconst blue400 =   \"#42a5f5\";\nconst red500 =    \"#f44336\";\nconst yellow600 = \"#fdd835\";\nconst green500 =  \"#4caf50\";\n\n/**\n * @type {MaterialDesignSpinnerVars} materialDesignSpinnerVars\n */\nconst materialDesignSpinnerVars = {\n  /**\n   * Generate general styles, not defined by variables\n   */\n  general_styles:       true,\n  \n  arc_size,\n  arc_start_degrees,\n  arc_time,\n  border_width_fab:     superVars.size_fab / superVars.size_regular * 3,\n  border_width_large:   superVars.size_large / superVars.size_regular * 3,\n  border_width_medium:  superVars.size_medium / superVars.size_regular * 3,\n  border_width_regular: 3,\n  border_width_small:   superVars.size_small / superVars.size_regular * 3,\n  rotation_duration,\n\n  color_light_single:   rgba(vars.color_primary),\n  color_light_1:        blue400,\n  color_light_2:        red500,\n  color_light_3:        yellow600,\n  color_light_4:        green500,\n  \n  color_dark_single:    rgba(vars.color_primary),\n  color_dark_1:         blue400,\n  color_dark_2:         red500,\n  color_dark_3:         yellow600,\n  color_dark_4:         green500,\n};\n\nexport default materialDesignSpinnerVars;\n","// @ts-check\n\nimport classes from \"polythene-css-classes/material-design-spinner\";\nimport color from \"./color\";\nimport layout from \"./layout\";\nimport vars from \"./vars\";\nimport { styler } from \"polythene-core-css\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nconst addStyle = styler.createAddStyle(selector, fns, vars);\n\nconst getStyle = styler.createGetStyle(selector, fns, vars);\n\nconst addGeneralStyleToHead = () =>\n  styler.addStyle({\n    selectors: [selector],\n    fns,\n    vars\n  });\n\nexport {\n  addGeneralStyleToHead,\n  addStyle,\n  getStyle,\n  color,\n  layout,\n  vars,\n};\n","\nexport default {\n  component:          \"pe-md-spinner\",\n\n  // elements\n  animation:          \"pe-md-spinner__animation\",\n  circle:             \"pe-md-spinner__circle\",\n  circleClipper:      \"pe-md-spinner__circle-clipper\",\n  circleClipperLeft:  \"pe-md-spinner__circle-clipper-left\",\n  circleClipperRight: \"pe-md-spinner__circle-clipper-right\",\n  gapPatch:           \"pe-md-spinner__gap-patch\",\n  layer:              \"pe-md-spinner__layer\",\n  layerN:             \"pe-md-spinner__layer-\",\n};\n\n"],"names":["generalFns","general_styles","selector","sel","borderColor","tintFns","tint","vars","color","lightTintFns","_extends","darkTintFns","createColor","varFns","superColor","OPACITY_MAX","CURVE_INFINITE","kfSpin","direction","transform","opacity","position","width","height","boxSizing","top","left","overflow","display","fontSize","lineHeight","mixin","fit","animation","borderStyle","borderRadius","borderBottomColor","borderRightColor","borderLeftColor","map","num","arc_time","layerAnimation","whiteSpace","rotation_duration","border_width_small","borderWidth","border_width_regular","border_width_medium","border_width_large","border_width_fab","arc_size","arcSize","createLayout","superLayout","blue400","red500","yellow600","green500","materialDesignSpinnerVars","arc_start_degrees","superVars","size_fab","size_regular","size_large","size_medium","size_small","color_light_single","rgba","color_primary","color_light_1","color_light_2","color_light_3","color_light_4","color_dark_single","color_dark_1","color_dark_2","color_dark_3","color_dark_4","fns","layout","addStyle","styler","createAddStyle","getStyle","createGetStyle","selectors"],"mappings":"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"}