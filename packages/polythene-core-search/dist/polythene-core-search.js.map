{"version":3,"file":"polythene-core-search.js","sources":["../../polythene-css-classes/search.js","../src/index.js"],"sourcesContent":["\nexport default {\n  component:       \"pe-search\",\n\n  // elements\n  content:         \"pe-search__content\",\n\n  // states\n  searchFullWidth: \"pe-search--full-width\",\n  searchInset:     \"pe-search--inset\",\n};\n","import { filterSupportedAttributes } from \"polythene-core\";\nimport classes from \"polythene-css-classes/search\";\n\nconst getNameOfState = searchState =>\n  searchState.focus && searchState.dirty\n    ? \"focus_dirty\"\n    : searchState.focus\n      ? \"focus\"\n      : searchState.dirty\n        ? \"dirty\"\n        : \"none\";\n\nexport const _Search = ({ h, a, useState, TextField, ...props }) => {\n  delete props.key;\n\n  const [searchState, setSearchState] = useState({});\n  \n  const componentProps = Object.assign({},\n    filterSupportedAttributes(props),\n    props.testId && { \"data-test-id\": props.testId },\n    {\n      className: [\n        classes.component,\n        props.fullWidth ? classes.searchFullWidth : classes.searchInset,\n        props.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        props.tone === \"light\" ? \"pe-light-tone\" : null,\n        props.className || props[a.class],\n      ].join(\" \")\n    },\n    props.events\n  );\n\n  const searchStateName = getNameOfState(searchState);\n  const buttons = (props.buttons || {})[searchStateName] || {};\n  const textfieldAttrs = props.textfield || {};\n\n  const componentContent = h(\"div\",\n    { className: classes.content },\n    [\n      buttons.before,\n      h(TextField, Object.assign(\n        {},\n        textfieldAttrs,\n        {\n          onChange: newState => {\n            setSearchState(newState);\n            if (textfieldAttrs.onChange) {\n              textfieldAttrs.onChange(newState);\n            }\n          },\n        }\n      )),\n      buttons.after\n    ]\n  );\n  const content = [\n    props.before,\n    componentContent,\n    props.after\n  ];\n  \n  return h(props.element || \"div\", componentProps, content);\n};\n"],"names":["component","content","searchFullWidth","searchInset","h","a","useState","TextField","props","key","searchState","setSearchState","componentProps","_extends","filterSupportedAttributes","testId","className","classes","fullWidth","tone","join","events","searchStateName","focus","dirty","getNameOfState","buttons","textfieldAttrs","textfield","componentContent","before","onChange","newState","after","element"],"mappings":"m0DACe,CACbA,UAAiB,YAGjBC,QAAiB,qBAGjBC,gBAAiB,wBACjBC,YAAiB,8BCGI,gBAAGC,IAAAA,EAAGC,IAAAA,EAAGC,IAAAA,SAAUC,IAAAA,UAAcC,+CAC/CA,EAAMC,YAEyBH,EAAS,OAAxCI,OAAaC,OAEdC,EAAiBC,EAAc,GACnCC,4BAA0BN,GAC1BA,EAAMO,QAAU,gBAAkBP,EAAMO,QACxC,CACEC,UAAW,CACTC,EAAQjB,UACRQ,EAAMU,UAAYD,EAAQf,gBAAkBe,EAAQd,YACrC,SAAfK,EAAMW,KAAkB,eAAiB,KAC1B,UAAfX,EAAMW,KAAmB,gBAAkB,KAC3CX,EAAMQ,WAAaR,EAAMH,UACzBe,KAAK,MAETZ,EAAMa,QAGFC,EA7Be,SAAAZ,UACrBA,EAAYa,OAASb,EAAYc,MAC7B,cACAd,EAAYa,MACV,QACAb,EAAYc,MACV,QACA,OAsBgBC,CAAef,GACjCgB,GAAWlB,EAAMkB,SAAW,IAAIJ,IAAoB,GACpDK,EAAiBnB,EAAMoB,WAAa,GAEpCC,EAAmBzB,EAAE,MACzB,CAAEY,UAAWC,EAAQhB,SACrB,CACEyB,EAAQI,OACR1B,EAAEG,EAAWM,EACX,GACAc,EACA,CACEI,SAAU,SAAAC,GACRrB,EAAeqB,GACXL,EAAeI,UACjBJ,EAAeI,SAASC,OAKhCN,EAAQO,QAGNhC,EAAU,CACdO,EAAMsB,OACND,EACArB,EAAMyB,cAGD7B,EAAEI,EAAM0B,SAAW,MAAOtB,EAAgBX"}