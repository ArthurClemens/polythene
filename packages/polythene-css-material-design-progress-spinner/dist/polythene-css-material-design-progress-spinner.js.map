{"version":3,"file":"polythene-css-material-design-progress-spinner.js","sources":["../src/color.js","../src/layout.js","../src/vars.js","../src/index.js","../../polythene-css-classes/material-design-progress-spinner.js"],"sourcesContent":["// @ts-check\n\nimport { color as superColor } from \"polythene-css-material-design-spinner\";\nimport { sel, createColor } from \"polythene-core-css\";\n\nconst generalFns = ({\n  general_styles: selector => [\n    sel(selector, {\n      \" .pe-md-progress-spinner__circle\": {\n        borderColor: \"currentcolor\"\n      }\n    })\n  ],\n});\n\nconst tintFns = tint => ({\n  [\"color_\" + tint]: (selector, vars) => [\n    sel(selector, {\n      color: vars[\"color_\" + tint],\n    })\n  ]\n});\n\nconst lightTintFns = Object.assign({}, generalFns, tintFns(\"light\"));\nconst darkTintFns = Object.assign({}, generalFns, tintFns(\"dark\"));\n\nexport default createColor({\n  varFns: { lightTintFns, darkTintFns },\n  superColor\n});\n","// @ts-check\n\nimport { layout as superLayout } from \"polythene-css-material-design-spinner\";\nimport { sel, createLayout } from \"polythene-core-css\";\n\nconst varFns = {\n  general_styles: selector => [\n    sel(selector, {\n      position: \"relative\",\n\n      \" .pe-md-progress-spinner__animation\": {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n\n      \" .pe-md-progress-spinner__circle\": {\n        position: \"absolute\",\n        boxSizing: \"border-box\",\n        width: \"100%\",\n        height: \"100%\",\n        borderStyle: \"solid\",\n        borderRadius: \"50%\"\n      },\n\n      \" .pe-md-progress-spinner__circle-left, .pe-md-progress-spinner__circle-right\": {\n        transform: \"rotate(0)\",\n        clip: \"rect(0, 0, 0, 0)\"\n      },\n    })\n  ],\n  progress_animation_duration: (selector, vars) => [\n    sel(selector, {\n      \" .pe-md-progress-spinner__animation\": {\n        animationDuration: vars.progress_animation_duration,\n      },\n    })\n  ]\n};\n\nexport default createLayout({ varFns, superLayout });\n","// @ts-check\n\n/**\n * @typedef {import(\"../index\").MaterialDesignProgressSpinnerVars} MaterialDesignProgressSpinnerVars\n */\n\nimport { rgba } from \"polythene-core-css\";\nimport { vars } from \"polythene-theme\";\n\n/**\n * @type {MaterialDesignProgressSpinnerVars} materialDesignProgressSpinnerVars\n */\nconst materialDesignProgressSpinnerVars = {\n  /**\n   * Generate general styles, not defined by variables\n   */\n  general_styles:              true,\n  \n  progress_animation_duration: \".8s\",\n\n  color_light:                 rgba(vars.color_primary),\n  color_dark:                  rgba(vars.color_primary),\n};\n\nexport default materialDesignProgressSpinnerVars;\n","// @ts-check\n\nimport classes from \"polythene-css-classes/material-design-progress-spinner\";\nimport color from \"./color\";\nimport layout from \"./layout\";\nimport vars from \"./vars\";\nimport { styler } from \"polythene-core-css\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nconst addStyle = styler.createAddStyle(selector, fns, vars);\n\nconst getStyle = styler.createGetStyle(selector, fns, vars);\n\nconst addGeneralStyleToHead = () =>\n  styler.addStyle({\n    selectors: [selector],\n    fns,\n    vars\n  });\n\nexport {\n  addGeneralStyleToHead,\n  addStyle,\n  getStyle,\n  color,\n  layout,\n  vars,\n};\n","\nexport default {\n  component:          \"pe-md-progress-spinner\",\n\n  // elements\n  animation:          \"pe-md-progress-spinner__animation\",\n  circle:             \"pe-md-progress-spinner__circle\",\n  circleRight:        \"pe-md-progress-spinner__circle-right\",\n  circleLeft:         \"pe-md-progress-spinner__circle-left\"\n};\n"],"names":["generalFns","general_styles","selector","sel","borderColor","tintFns","tint","vars","color","lightTintFns","_extends","darkTintFns","createColor","varFns","superColor","position","width","height","boxSizing","borderStyle","borderRadius","transform","clip","progress_animation_duration","animationDuration","createLayout","superLayout","materialDesignProgressSpinnerVars","color_light","rgba","color_primary","color_dark","fns","layout","addStyle","styler","createAddStyle","getStyle","createGetStyle","selectors"],"mappings":"utBAKA,IAAMA,EAAc,CAClBC,eAAgB,SAAAC,SAAY,CAC1BC,MAAID,EAAU,oCACwB,CAClCE,YAAa,qBAMfC,EAAU,SAAAC,YACK,SAACJ,EAAUK,SAAS,CACrCJ,MAAID,EAAU,CACZM,MAAOD,EAAK,SAAWD,UAF1B,SAAWA,8GAORG,EAAeC,EAAc,GAAIV,EAAYK,EAAQ,UACrDM,EAAcD,EAAc,GAAIV,EAAYK,EAAQ,WAE3CO,cAAY,CACzBC,OAAQ,CAAEJ,aAAAA,EAAcE,YAAAA,GACxBG,WAAAA,UCvBID,EAAS,CACbZ,eAAgB,SAAAC,SAAY,CAC1BC,MAAID,EAAU,CACZa,SAAU,iDAE6B,CACrCA,SAAU,WACVC,MAAO,OACPC,OAAQ,2CAG0B,CAClCF,SAAU,WACVG,UAAW,aACXF,MAAO,OACPC,OAAQ,OACRE,YAAa,QACbC,aAAc,sFAGgE,CAC9EC,UAAW,YACXC,KAAM,wBAIZC,4BAA6B,SAACrB,EAAUK,SAAS,CAC/CJ,MAAID,EAAU,uCAC2B,CACrCsB,kBAAmBjB,EAAKgB,oCAMjBE,eAAa,CAAEZ,OAAAA,EAAQa,YAAAA,WC5BhCC,EAAoC,CAIxC1B,gBAA6B,EAE7BsB,4BAA6B,MAE7BK,YAA6BC,OAAKtB,OAAKuB,eACvCC,WAA6BF,OAAKtB,OAAKuB,gBCbnCE,EAAM,CAACC,EAAQzB,GACfN,aCPgB,0BDShBgC,EAAWC,SAAOC,eAAelC,EAAU8B,EAAKzB,GAEhD8B,EAAWF,SAAOG,eAAepC,EAAU8B,EAAKzB,2BAExB,kBAC5B4B,SAAOD,SAAS,CACdK,UAAW,CAACrC,GACZ8B,IAAAA,EACAzB,KAAAA"}