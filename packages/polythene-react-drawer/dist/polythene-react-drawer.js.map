{"version":3,"file":"polythene-react-drawer.js","sources":["../../polythene-css-classes/drawer.js","../../polythene-css-classes/dialog.js","../src/index.js"],"sourcesContent":["import dialogClasses from \"./dialog\";\n\nexport default {\n  component:       \"pe-dialog pe-drawer\",\n\n  // states\n  cover:           \"pe-drawer--cover\",\n  push:            \"pe-drawer--push\",\n  mini:            \"pe-drawer--mini\",\n  permanent:       \"pe-drawer--permanent\",\n  border:          \"pe-drawer--border\",\n  floating:        \"pe-drawer--floating\",\n  fixed:           \"pe-drawer--fixed\",\n  anchorEnd:       \"pe-drawer--anchor-end\",\n\n  visible:         dialogClasses.visible,\n};\n","import menuClasses from \"./menu\";\n\nexport default {\n  component:         \"pe-dialog\",\n\n  // elements\n  placeholder:       \"pe-dialog__placeholder\",\n  holder:            \"pe-dialog__holder\",\n  content:           \"pe-dialog__content\",\n  backdrop:          \"pe-dialog__backdrop\",\n  touch:             \"pe-dialog__touch\",\n\n  // states\n  fullScreen:        \"pe-dialog--full-screen\",\n  modal:             \"pe-dialog--modal\",\n  open:              \"pe-dialog--open\",    // class set to html element\n  visible:           \"pe-dialog--visible\", // class set to dialog element\n  showBackdrop:      \"pe-dialog--backdrop\",\n  transition:        \"pe-dialog--transition\",\n\n  // lookup\n  menuContent:       menuClasses.content,\n};\n","\nimport { _Conditional } from \"polythene-core\";\nimport { cast, h, useState, useEffect } from \"cyano-react\";\n\nimport { _Drawer, openDialogsSelector } from \"polythene-core-drawer\";\nimport { DialogInstance } from \"polythene-react-dialog\";\nimport classes from \"polythene-css-classes/drawer\";\n\nconst DrawerInstance = cast(_Drawer, { h, Dialog: DialogInstance, openDialogsSelector });\nDrawerInstance[\"displayName\"] = \"DrawerInstance\";\n\nconst DrawerToggle = cast(_Conditional, { h, useState, useEffect });\nDrawerToggle[\"displayName\"] = \"DrawerToggle\";\n\nexport const Drawer = props => (\n  h(DrawerToggle, Object.assign(\n    {},\n    props,\n    {\n      placeholderClassName: classes.placeholder,\n      instance: DrawerInstance,\n      permanent: props.permanent || props.mini, // passed to Conditional\n    }\n  ))\n);\n\nDrawer[\"displayName\"] = \"Drawer\";\n"],"names":["component","cover","push","mini","permanent","border","floating","fixed","anchorEnd","visible","DrawerInstance","cast","_Drawer","h","Dialog","DialogInstance","openDialogsSelector","DrawerToggle","_Conditional","useState","useEffect","Drawer","props","_extends","placeholderClassName","classes","placeholder","instance"],"mappings":"8uBAEe,CACbA,UAAiB,sBAGjBC,MAAiB,mBACjBC,KAAiB,kBACjBC,KAAiB,kBACjBC,UAAiB,uBACjBC,OAAiB,oBACjBC,SAAiB,sBACjBC,MAAiB,mBACjBC,UAAiB,wBAEjBC,QCCmB,sBCRfC,EAAiBC,OAAKC,UAAS,CAAEC,EAAAA,IAAGC,OAAQC,iBAAgBC,oBAAAA,wBAClEN,EAAc,YAAkB,iBAEhC,IAAMO,EAAeN,OAAKO,eAAc,CAAEL,EAAAA,IAAGM,SAAAA,WAAUC,UAAAA,cACvDH,EAAY,YAAkB,mBAEjBI,EAAS,SAAAC,UACpBT,IAAEI,EAAcM,EACd,GACAD,EACA,CACEE,qBAAsBC,EAAQC,YAC9BC,SAAUjB,EACVN,UAAWkB,EAAMlB,WAAakB,EAAMnB,SAK1CkB,EAAM,YAAkB"}