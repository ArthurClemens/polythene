{"version":3,"file":"polythene-core-textfield.js","sources":["../../polythene-css-classes/textfield.js","../src/index.js"],"sourcesContent":["\nexport default {\n  component:         \"pe-textfield\",\n\n  // elements\n  counter:           \"pe-textfield__counter\",\n  error:             \"pe-textfield__error\",\n  errorPlaceholder:  \"pe-textfield__error-placeholder\",\n  focusHelp:         \"pe-textfield__help-focus\",\n  help:              \"pe-textfield__help\",\n  input:             \"pe-textfield__input\",\n  inputArea:         \"pe-textfield__input-area\",\n  label:             \"pe-textfield__label\",\n  optionalIndicator: \"pe-textfield__optional-indicator\",\n  requiredIndicator: \"pe-textfield__required-indicator\",\n\n  // states\n  hasCounter:        \"pe-textfield--counter\",\n  hasFloatingLabel:  \"pe-textfield--floating-label\",\n  hasFullWidth:      \"pe-textfield--full-width\",\n  hideClear:         \"pe-textfield--hide-clear\",\n  hideSpinner:       \"pe-textfield--hide-spinner\",\n  hideValidation:    \"pe-textfield--hide-validation\",\n  isDense:           \"pe-textfield--dense\",\n  isRequired:        \"pe-textfield--required\",\n  stateDirty:        \"pe-textfield--dirty\",\n  stateDisabled:     \"pe-textfield--disabled\",\n  stateFocused:      \"pe-textfield--focused\",\n  stateInvalid:      \"pe-textfield--invalid\",\n  stateReadonly:     \"pe-textfield--readonly\",\n};\n","import {\n  filterSupportedAttributes,\n  createUid,\n  processDataset,\n} from \"polythene-core\";\nimport classes from \"polythene-css-classes/textfield\";\n\nconst DEFAULT_VALID_STATE = {\n  invalid: false,\n  message: undefined,\n};\n\nconst ignoreEvent = (props, name) =>\n  props.ignoreEvents && props.ignoreEvents.indexOf(name) !== -1;\n\nexport const _TextField = ({\n  h,\n  a,\n  useState,\n  useEffect,\n  useRef,\n  getRef,\n  ...props\n}) => {\n  // Id to match the label to the control\n  const uidRef = useRef(createUid());\n\n  const defaultValue =\n    props.defaultValue !== undefined && props.defaultValue !== null\n      ? props.defaultValue.toString()\n      : props.value !== undefined && props.value !== null\n      ? props.value.toString()\n      : \"\";\n\n  const [domElement, setDomElement] = useState();\n  const [isInvalid, setIsInvalid] = useState(false);\n  const [, setHasFocus] = useState(false);\n  const [value, setValue] = useState(defaultValue);\n  const inputElRef = useRef();\n  const previousValueRef = useRef();\n  const previousStatusRef = useRef();\n  const isDirtyRef = useRef();\n  const hasFocusRef = useRef();\n  const isTouchedRef = useRef();\n  const errorRef = useRef();\n  const inputType = props.multiLine ? \"textarea\" : \"input\";\n  const showErrorPlaceholder = !!(\n    props.valid !== undefined ||\n    props.validate ||\n    props.min ||\n    props.max ||\n    props[a.minlength] ||\n    props[a.maxlength] ||\n    props.required ||\n    props.pattern\n  );\n\n  const handleStateUpdate = ({ type, focus, value } = {}) => {\n    if (!inputElRef.current) {\n      return;\n    }\n    if (value !== undefined) {\n      inputElRef.current.value = value;\n    }\n    if (focus !== undefined) {\n      hasFocusRef.current = focus;\n      setHasFocus(focus); // force redraw\n      if (focus) {\n        inputElRef.current.focus();\n      } else {\n        inputElRef.current.blur();\n      }\n    }\n    if (type === \"input\" && (props.validateOnInput || props.counter)) {\n      isTouchedRef.current = inputElRef.current.value !== defaultValue;\n    }\n    if (type !== \"input\") {\n      isTouchedRef.current = inputElRef.current.value !== defaultValue;\n    }\n    if (type === \"onblur\") {\n      isTouchedRef.current = true;\n    }\n    isDirtyRef.current = inputElRef.current.value !== \"\";\n    checkValidity();\n    notifyState();\n    if (previousValueRef.current !== inputElRef.current.value) {\n      setValue(inputElRef.current.value); // force update\n    }\n  };\n\n  const validateCustom = () => {\n    if (!inputElRef.current) {\n      return DEFAULT_VALID_STATE;\n    }\n    const validState = props.validate(inputElRef.current.value);\n    return {\n      invalid: validState && !validState.valid,\n      message: validState && validState.error,\n    };\n  };\n\n  const validateCounter = () => ({\n    invalid: inputElRef.current.value.length > props.counter,\n    message: props.error,\n  });\n\n  const validateHTML = () => ({\n    invalid: !inputElRef.current.checkValidity(),\n    message: props.error,\n  });\n\n  const getValidStatus = () => {\n    let status = DEFAULT_VALID_STATE;\n\n    // props.validateResetOnClear: reset validation when field is cleared\n    if (\n      isTouchedRef.current &&\n      isInvalid &&\n      inputElRef.current.value.length === 0 &&\n      props.validateResetOnClear\n    ) {\n      isTouchedRef.current = false;\n      setIsInvalid(false);\n      errorRef.current = undefined;\n    }\n    if (props.counter) {\n      status = validateCounter();\n    }\n    if (!status.invalid && inputElRef.current.checkValidity) {\n      status = validateHTML();\n    }\n    if (!status.invalid && props.validate) {\n      status = validateCustom();\n    }\n    return status;\n  };\n\n  const checkValidity = () => {\n    // default\n    const status =\n      props.valid !== undefined\n        ? {\n            invalid: !props.valid,\n            message: props.error,\n          }\n        : !isTouchedRef.current && !props.validateAtStart\n        ? DEFAULT_VALID_STATE\n        : getValidStatus();\n    const previousInvalid = isInvalid;\n    errorRef.current = status.message;\n    if (status.invalid !== previousInvalid) {\n      setIsInvalid(status.invalid);\n    }\n    if (!status.invalid) {\n      errorRef.current = undefined;\n    }\n  };\n\n  const notifyState = () => {\n    if (props.onChange) {\n      const validStatus = getValidStatus();\n      const status = {\n        focus: hasFocusRef.current,\n        dirty: isDirtyRef.current,\n        invalid: validStatus.invalid,\n        error: validStatus.error,\n        value: inputElRef.current.value,\n      };\n      if (\n        JSON.stringify(status) !== JSON.stringify(previousStatusRef.current)\n      ) {\n        props.onChange({\n          ...status,\n          el: inputElRef.current,\n          setInputState: (newState) => {\n            const hasNewValue =\n              newState.value !== undefined &&\n              newState.value !== inputElRef.current.value;\n            const hasNewFocus =\n              newState.focus !== undefined &&\n              newState.focus !== hasFocusRef.current;\n            if (hasNewValue || hasNewFocus) {\n              handleStateUpdate(newState);\n            }\n          },\n        });\n        previousStatusRef.current = status;\n      }\n    }\n  };\n\n  const allProps = {\n    ...props,\n    ...props.domAttributes,\n  };\n\n  let errorMessage = props.error || errorRef.current;\n  const type = allProps.multiLine\n    ? null\n    : !allProps.type || allProps.type === \"submit\" || allProps.type === \"search\"\n    ? \"text\"\n    : allProps.type;\n  const showError = isInvalid && errorMessage !== undefined;\n  const inactive = allProps.disabled || allProps[a.readonly];\n  const requiredIndicator =\n    allProps.required && allProps.requiredIndicator !== \"\"\n      ? h(\n          \"span\",\n          {\n            className: classes.requiredIndicator,\n          },\n          allProps.requiredIndicator || \"*\"\n        )\n      : null;\n  const optionalIndicator =\n    !allProps.required && allProps.optionalIndicator\n      ? h(\n          \"span\",\n          {\n            className: classes.optionalIndicator,\n          },\n          allProps.optionalIndicator\n        )\n      : null;\n  const label = allProps.label\n    ? [allProps.label, requiredIndicator, optionalIndicator]\n    : null;\n  const events = allProps.events || {};\n\n  const componentContent = [\n    h(\n      \"div\",\n      {\n        className: classes.inputArea,\n      },\n      [\n        label\n          ? h(\n              \"label\",\n              {\n                className: classes.label,\n                [a.for]: uidRef.current,\n              },\n              label\n            )\n          : null,\n        h(\n          inputType,\n          Object.assign(\n            {},\n            {\n              className: classes.input,\n              disabled: allProps.disabled,\n              id: uidRef.current,\n            },\n            type ? { type } : null,\n            allProps.name ? { name: allProps.name } : null,\n            allProps.aria,\n\n            events,\n\n            !ignoreEvent(allProps, a.onclick)\n              ? {\n                  [a.onclick]: (e) => {\n                    if (inactive) {\n                      return;\n                    }\n                    // in case the browser does not give the field focus,\n                    // for instance when the user tapped to the current field off screen\n                    handleStateUpdate({ focus: true });\n                    events[a.onclick] && events[a.onclick](e);\n                  },\n                }\n              : null,\n\n            !ignoreEvent(allProps, a.onfocus)\n              ? {\n                  [a.onfocus]: (e) => {\n                    if (inactive) {\n                      return;\n                    }\n                    handleStateUpdate({ focus: true });\n\n                    // set CSS class manually in case field gets focus but is off screen\n                    // and no redraw is triggered\n                    // at the next redraw `hasFocusRef.current` will be read and the focus class be set\n                    // in the props.class statement\n                    if (domElement) {\n                      domElement.classList.add(classes.stateFocused);\n                    }\n                    events[a.onfocus] && events[a.onfocus](e);\n                  },\n                }\n              : null,\n\n            !ignoreEvent(allProps, a.onblur)\n              ? {\n                  [a.onblur]: (e) => {\n                    handleStateUpdate({ type: \"onblur\", focus: false });\n                    // same principle as onfocus\n                    domElement.classList.remove(classes.stateFocused);\n                    events[a.onblur] && events[a.onblur](e);\n                  },\n                }\n              : null,\n\n            !ignoreEvent(allProps, a.oninput)\n              ? {\n                  [a.oninput]: (e) => {\n                    // default input event\n                    // may be overwritten by props.events\n                    handleStateUpdate({ type: \"input\" });\n                    events[a.oninput] && events[a.oninput](e);\n                  },\n                }\n              : null,\n\n            !ignoreEvent(allProps, a.onkeydown)\n              ? {\n                  [a.onkeydown]: (e) => {\n                    if (e.key === \"Enter\") {\n                      isTouchedRef.current = true;\n                    } else if (e.key === \"Escape\" || e.key === \"Esc\") {\n                      handleStateUpdate({ focus: false });\n                    }\n                    events[a.onkeydown] && events[a.onkeydown](e);\n                  },\n                }\n              : null,\n\n            allProps.required !== undefined && !!allProps.required\n              ? { required: true }\n              : null,\n            allProps[a.readonly] !== undefined && !!allProps[a.readonly]\n              ? { [a.readonly]: true }\n              : null,\n            allProps.pattern !== undefined\n              ? { pattern: allProps.pattern }\n              : null,\n            allProps[a.maxlength] !== undefined\n              ? { [a.maxlength]: allProps[a.maxlength] }\n              : null,\n            allProps[a.minlength] !== undefined\n              ? { [a.minlength]: allProps[a.minlength] }\n              : null,\n            allProps.max !== undefined ? { max: allProps.max } : null,\n            allProps.min !== undefined ? { min: allProps.min } : null,\n            allProps[a.autofocus] !== undefined\n              ? { [a.autofocus]: allProps[a.autofocus] }\n              : null,\n            allProps[a.tabindex] !== undefined\n              ? { [a.tabindex]: allProps[a.tabindex] }\n              : null,\n            allProps.rows !== undefined ? { rows: allProps.rows } : null,\n            allProps.placeholder !== undefined\n              ? { placeholder: allProps.placeholder }\n              : null,\n            allProps.domAttributes !== undefined\n              ? { ...allProps.domAttributes }\n              : null\n          )\n        ),\n      ]\n    ),\n    allProps.counter\n      ? h(\n          \"div\",\n          {\n            className: classes.counter,\n          },\n          (value.length || 0) + \" / \" + allProps.counter\n        )\n      : null,\n    allProps.help && !showError\n      ? h(\n          \"div\",\n          {\n            className: [\n              classes.help,\n              allProps.focusHelp ? classes.focusHelp : null,\n            ].join(\" \"),\n          },\n          allProps.help\n        )\n      : null,\n    showError\n      ? h(\n          \"div\",\n          {\n            className: classes.error,\n          },\n          errorMessage\n        )\n      : showErrorPlaceholder && !allProps.help\n      ? h(\"div\", {\n          className: classes.errorPlaceholder,\n        })\n      : null,\n  ];\n\n  // State refs\n  useEffect(() => {\n    isDirtyRef.current = defaultValue !== \"\";\n    hasFocusRef.current = false;\n    isTouchedRef.current = false;\n    errorRef.current = props.error;\n  }, []);\n\n  // Input DOM element\n  useEffect(() => {\n    if (!domElement) {\n      return;\n    }\n    inputElRef.current = domElement.querySelector(inputType);\n    inputElRef.current.value = defaultValue;\n\n    if (allProps[a.autofocus]) {\n      handleStateUpdate({ focus: true });\n    } else {\n      handleStateUpdate();\n    }\n    checkValidity(); // handle `validateAtStart`\n    notifyState();\n  }, [domElement]);\n\n  // Handle value updates\n  useEffect(() => {\n    if (!inputElRef.current) {\n      return;\n    }\n    const value =\n      props.value !== undefined && props.value !== null\n        ? props.value\n        : inputElRef.current\n        ? inputElRef.current.value\n        : previousValueRef.current;\n    const valueStr =\n      value === undefined || value === null ? \"\" : value.toString();\n\n    if (inputElRef.current && previousValueRef.current !== valueStr) {\n      inputElRef.current.value = valueStr;\n      previousValueRef.current = valueStr;\n      handleStateUpdate({ type: \"input\" });\n    }\n  }, [inputElRef.current, props.value]);\n\n  // Handle error state updates\n  useEffect(() => {\n    if (!inputElRef.current) {\n      return;\n    }\n    checkValidity();\n    notifyState();\n  }, [props, inputElRef.current && inputElRef.current.value]);\n\n  const componentProps = Object.assign(\n    {},\n    filterSupportedAttributes(props),\n    processDataset(props),\n    props.testId && { \"data-test-id\": props.testId },\n    getRef(\n      (dom) =>\n        dom && !domElement && (setDomElement(dom), props.ref && props.ref(dom))\n    ),\n    {\n      className: [\n        classes.component,\n        isInvalid ? classes.stateInvalid : \"\",\n        hasFocusRef.current ? classes.stateFocused : \"\",\n        isDirtyRef.current ? classes.stateDirty : \"\",\n        props.floatingLabel ? classes.hasFloatingLabel : \"\",\n        props.disabled ? classes.stateDisabled : \"\",\n        props.readonly ? classes.stateReadonly : \"\",\n        props.dense ? classes.isDense : \"\",\n        props.required ? classes.isRequired : \"\",\n        props.fullWidth ? classes.hasFullWidth : \"\",\n        props.counter ? classes.hasCounter : \"\",\n        props.hideSpinner !== false && props.hideSpinner !== undefined\n          ? classes.hideSpinner\n          : \"\",\n        props.hideClear !== false && props.hideClear !== undefined\n          ? classes.hideClear\n          : \"\",\n        props.hideValidation ? classes.hideValidation : \"\",\n        props.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        props.tone === \"light\" ? \"pe-light-tone\" : null,\n        props.className || props[a.class],\n      ].join(\" \"),\n    }\n  );\n\n  const content = [props.before, ...componentContent, props.after];\n\n  return h(props.element || \"div\", componentProps, content);\n};\n"],"names":["component","counter","error","errorPlaceholder","focusHelp","help","input","inputArea","label","optionalIndicator","requiredIndicator","hasCounter","hasFloatingLabel","hasFullWidth","hideClear","hideSpinner","hideValidation","isDense","isRequired","stateDirty","stateDisabled","stateFocused","stateInvalid","stateReadonly","DEFAULT_VALID_STATE","invalid","message","undefined","ignoreEvent","props","name","ignoreEvents","indexOf","h","a","useState","useEffect","useRef","getRef","uidRef","createUid","defaultValue","toString","value","domElement","setDomElement","isInvalid","setIsInvalid","setHasFocus","setValue","inputElRef","previousValueRef","previousStatusRef","isDirtyRef","hasFocusRef","isTouchedRef","errorRef","inputType","multiLine","showErrorPlaceholder","valid","validate","min","max","minlength","maxlength","required","pattern","handleStateUpdate","type","focus","current","blur","validateOnInput","checkValidity","notifyState","getValidStatus","status","length","validateResetOnClear","validState","validateCustom","validateAtStart","previousInvalid","onChange","validStatus","dirty","JSON","stringify","el","setInputState","newState","hasNewValue","hasNewFocus","allProps","domAttributes","errorMessage","showError","inactive","disabled","readonly","className","classes","events","componentContent","_extends","id","aria","onclick","e","onfocus","classList","add","onblur","remove","oninput","onkeydown","key","autofocus","tabindex","rows","placeholder","join","querySelector","valueStr","componentProps","filterSupportedAttributes","processDataset","testId","dom","ref","floatingLabel","dense","fullWidth","tone","content","before","after","element"],"mappings":"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"}