{"version":3,"file":"polythene-core-selection-control.js","sources":["../../polythene-css-classes/selection-control.js","../src/ViewControl.js","../src/SelectionControl.js"],"sourcesContent":["\nexport default {\n  component: \"pe-control\",\n\n  // elements\n  formLabel: \"pe-control__form-label\",\n  input:     \"pe-control__input\",\n  label:     \"pe-control__label\",\n\n  // states\n  disabled:  \"pe-control--disabled\",\n  inactive:  \"pe-control--inactive\",\n  large:     \"pe-control--large\",\n  medium:    \"pe-control--medium\",\n  off:       \"pe-control--off\",\n  on:        \"pe-control--on\",\n  regular:   \"pe-control--regular\",\n  small:     \"pe-control--small\",\n\n  // control view elements\n  box:       \"pe-control__box\",\n  button:    \"pe-control__button\",\n\n  // control view states\n  buttonOff: \"pe-control__button--off\",\n  buttonOn:  \"pe-control__button--on\",\n};\n","import classes from \"polythene-css-classes/selection-control\";\n\nconst CONTENT = [\n  { iconType: \"iconOn\", className: classes.buttonOn},\n  { iconType: \"iconOff\", className: classes.buttonOff}\n];\n\nconst createIcon = (h, iconType, props, className) => (\n  // if props.iconOn/props.iconOff is passed, use that icon options object and ignore size\n  // otherwise create a new object\n  Object.assign(\n    {},\n    {\n      className,\n    },\n    props[iconType]\n      ? props[iconType]\n      : { svg: { content: h.trust(props.icons[iconType]) } },\n    props.icon,\n    props.size\n      ? { size: props.size }\n      : null\n  )\n);\n\nexport const _ViewControl = ({ h, Icon, IconButton, ...props }) => {\n  const element = props.element || `.${classes.box}`;\n  const content = h(IconButton, Object.assign({},\n    {\n      element: \"div\",\n      className: classes.button,\n      style: props.style,\n      content: CONTENT.map(o =>\n        h(Icon, createIcon(h, o.iconType, props, o.className))\n      ),\n      ripple: { center: true },\n      disabled: props.disabled,\n      events: props.events,\n      inactive: props.inactive,\n    },\n    props.iconButton // for example for hover behaviour\n  ));\n  return h(element, null, content);\n};\n","import { filterSupportedAttributes, classForSize } from \"polythene-core\";\nimport classes from \"polythene-css-classes/selection-control\";\n\nexport const _SelectionControl = ({ h, a, useState, useEffect, ViewControl, ...props }) => {\n  // remove unused props\n  delete props.key;\n\n  const defaultChecked = props.defaultChecked !== undefined\n    ? props.defaultChecked\n    : props.checked || false;\n  const [previousIsChecked, setIsChecked] = useState(defaultChecked);\n  const [isSelectable, setIsSelectable] = useState(props.selectable);\n  \n  const isChecked = props.checked !== undefined\n    ? props.checked\n    : previousIsChecked;\n  \n  const inactive = props.disabled || !isSelectable;\n  \n  // define isSelectable\n  // This variable is set in the next tick to allow button interaction (e.g. ripples) to show\n  // before the button is set to inactive state\n  useEffect(\n    () => {\n      const selectable = props.selectable !== undefined\n        ? props.selectable(isChecked)\n        : false;\n      if (selectable !== isSelectable) {\n        setIsSelectable(selectable);\n      }\n    },\n    [props.selectable, isChecked]\n  );\n\n  const notifyChange = (e, isChecked) => {\n    if (props.onChange) {\n      props.onChange({\n        event: e,\n        checked: isChecked,\n        value: props.value\n      });\n    } \n  };\n\n  const onChange = e => {\n    let isChecked = e.currentTarget.checked;\n    if (props.type === \"radio\") {\n      // do not set directly\n    } else {\n      setIsChecked(isChecked);\n    }\n    notifyChange(e, isChecked);\n  };\n\n  const toggle = e => {\n    const newChecked = !isChecked;\n    setIsChecked(newChecked);\n    notifyChange(e, newChecked);\n  };\n\n  const viewControlClickHandler = props.events && props.events[a.onclick];\n  const viewControlKeyDownHandler = props.events && props.events[a.onkeydown]\n    ? props.events[a.onkeydown]\n    : e => {\n      if (e.key === \"Enter\" || e.keyCode === 32) {\n        e.preventDefault();\n        if (viewControlClickHandler) {\n          viewControlClickHandler(e);\n        } else {\n          toggle(e);\n        }\n      }\n    };\n\n  const componentProps = Object.assign(\n    {},\n    filterSupportedAttributes(props, { remove: [\"style\"] }), // Set style on view control\n    props.testId && { \"data-test-id\": props.testId },\n    {\n      className: [\n        classes.component,\n        props.instanceClass, // for instance pe-checkbox-control\n        isChecked ? classes.on : classes.off,\n        props.disabled ? classes.disabled : null,\n        inactive ? classes.inactive : null,\n        classForSize(classes, props.size),\n        props.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        props.tone === \"light\" ? \"pe-light-tone\" : null,\n        props.className || props[a.class],\n      ].join(\" \")\n    }\n  );\n\n  const content = h(\"label\",\n    Object.assign(\n      {},\n      {\n        className: classes.formLabel,\n      },\n      viewControlClickHandler && {\n        [a.onclick]: e => (\n          e.preventDefault(),\n          viewControlClickHandler(e)\n        )\n      }\n    ),\n    [\n      props.before,\n      h(ViewControl, Object.assign(\n        {},\n        props,\n        {\n          inactive,\n          checked: isChecked,\n          events: {\n            // Only use key down event; click events are handled by input element\n            [a.onkeydown]: viewControlKeyDownHandler\n          }\n        }\n      )),\n      props.label\n        ? h(`.${classes.label}`,\n          props.label\n        )\n        : null,\n      h(\"input\", Object.assign({},\n        props.events,\n        {\n          name: props.name,\n          type: props.type,\n          value: props.value,\n          checked: isChecked\n        },\n        props.disabled || inactive\n          ? { [a.readonly]: \"readonly\" }\n          : {\n            [a.onchange]: onChange\n          }\n      )),\n      props.after,\n    ]\n  );\n  return h(props.element || \"div\", componentProps, content);\n};\n"],"names":["component","formLabel","input","label","disabled","inactive","large","medium","off","on","regular","small","box","button","buttonOff","buttonOn","CONTENT","iconType","className","classes","h","a","useState","useEffect","ViewControl","props","key","undefined","defaultChecked","checked","previousIsChecked","setIsChecked","selectable","isSelectable","setIsSelectable","isChecked","notifyChange","e","onChange","event","value","viewControlClickHandler","events","onclick","viewControlKeyDownHandler","onkeydown","keyCode","preventDefault","newChecked","toggle","componentProps","_extends","filterSupportedAttributes","remove","testId","instanceClass","classForSize","size","tone","join","content","before","name","type","readonly","onchange","currentTarget","after","element","Icon","IconButton","style","map","o","svg","trust","icons","icon","createIcon","ripple","center","iconButton"],"mappings":"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"}