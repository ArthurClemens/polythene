{"version":3,"file":"polythene-css-icon.js","sources":["../src/color.js","../src/layout.js","../src/vars.js","../src/index.js","../../polythene-css-classes/icon.js"],"sourcesContent":["// @ts-check\n\nimport { sel, createColor } from \"polythene-core-css\";\n\nconst generalFns = ({\n  general_styles: selector => [\n    sel(selector, {\n      color: \"currentColor\",\n    })\n  ],\n});\n\nconst tintFns = tint => ({\n  [\"color_\" + tint]: (selector, vars) => [\n    sel(selector, {\n      color: vars[\"color_\" + tint]\n    })\n  ],\n  [\"color_\" + tint + \"_avatar_background\"]: (selector, vars) => [\n    sel(selector, {\n      \".pe-icon--avatar\": {\n        backgroundColor: vars[\"color_\" + tint + \"_avatar_background\"],\n      } \n    })\n  ]\n});\n\nconst lightTintFns = Object.assign({}, generalFns, tintFns(\"light\"));\nconst darkTintFns = Object.assign({}, generalFns, tintFns(\"dark\"));\n\nexport default createColor({\n  varFns: { lightTintFns, darkTintFns }\n});\n","// @ts-check\n\nimport { sel, createLayout } from \"polythene-core-css\";\n\nconst sizeDirective = size => (selector, vars) =>\n  sel(selector, {\n    [`.pe-icon--${size}`]: {\n      width:  vars[`size_${size}`] + \"px\",\n      height: vars[`size_${size}`] + \"px\",\n    }\n  });\n\nconst varFns = Object.assign({},\n  {\n    general_styles: selector => [\n      sel(selector, {\n        display: \"inline-block\",\n        verticalAlign: \"middle\",\n        backgroundRepeat: \"no-repeat\",\n        position: \"relative\",\n        fontSize: 0,\n        lineHeight: 0,\n\n        \".pe-icon--avatar\": {\n          borderRadius: \"50%\",\n        },\n        \n        \".pe-icon--avatar img\": {\n          border: \"none\",\n          borderRadius: \"50%\",\n          width: \"inherit\",\n          height: \"inherit\"\n        },\n\n        \" img\": {\n          height: \"inherit\"\n        },\n\n        \" .pe-svg, .pe-svg > div\": { /* React creates an additional div when wrapping an SVG */\n          width: \"inherit\",\n          height: \"inherit\"\n        },\n      })\n    ],\n  },\n  [\"small\", \"regular\", \"medium\", \"large\"].reduce((acc, size) => (\n    acc[`size_${size}`] = sizeDirective(size),\n    acc\n  ), {})\n);\n\nexport default createLayout({ varFns });\n","// @ts-check\n\n/**\n * @typedef {import(\"../index\").IconVars} IconVars\n */\n\nimport { rgba } from \"polythene-core-css\";\nimport { vars } from \"polythene-theme\";\n\n/**\n * @type {IconVars} iconVars\n */\nconst iconVars = {\n  /**\n   * Generate general styles, not defined by variables\n   */\n  general_styles:                true,\n\n  size_small:                    vars.unit_icon_size_small,  // 16 \n  size_regular:                  vars.unit_icon_size,        // 24\n  size_medium:                   vars.unit_icon_size_medium, // 32\n  size_large:                    vars.unit_icon_size_large,  // 40\n\n  // avatar background is visible when image is not yet loaded\n  color_light_avatar_background: rgba(vars.color_light_foreground, vars.blend_light_background_disabled),\n  color_dark_avatar_background:  rgba(vars.color_dark_foreground, vars.blend_dark_background_disabled),\n\n  color_light:                   \"currentcolor\",\n  color_dark:                    \"currentcolor\"\n};\n\nexport default iconVars;","// @ts-check\n\nimport classes from \"polythene-css-classes/icon\";\nimport color from \"./color\";\nimport layout from \"./layout\";\nimport vars from \"./vars\";\nimport { styler } from \"polythene-core-css\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nconst addStyle = styler.createAddStyle(selector, fns, vars);\n\nconst getStyle = styler.createGetStyle(selector, fns, vars);\n\nconst addGeneralStyleToHead = () =>\n  styler.addStyle({\n    selectors: [selector],\n    fns,\n    vars\n  });\n\nexport {\n  addGeneralStyleToHead,\n  addStyle,\n  getStyle,\n  color,\n  layout,\n  vars,\n};\n","\nexport default {\n  component: \"pe-icon\",\n\n  // states\n  avatar:    \"pe-icon--avatar\",\n  large:     \"pe-icon--large\",\n  medium:    \"pe-icon--medium\",\n  regular:   \"pe-icon--regular\",\n  small:     \"pe-icon--small\",\n};\n"],"names":["generalFns","general_styles","selector","sel","color","tintFns","tint","vars","backgroundColor","lightTintFns","_extends","darkTintFns","createColor","varFns","display","verticalAlign","backgroundRepeat","position","fontSize","lineHeight","borderRadius","border","width","height","reduce","acc","size","sizeDirective","createLayout","iconVars","size_small","unit_icon_size_small","size_regular","unit_icon_size","size_medium","unit_icon_size_medium","size_large","unit_icon_size_large","color_light_avatar_background","rgba","color_light_foreground","blend_light_background_disabled","color_dark_avatar_background","color_dark_foreground","blend_dark_background_disabled","color_light","color_dark","fns","layout","addStyle","styler","createAddStyle","getStyle","createGetStyle","selectors"],"mappings":"ysBAIA,IAAMA,EAAc,CAClBC,eAAgB,SAAAC,SAAY,CAC1BC,MAAID,EAAU,CACZE,MAAO,oBAKPC,EAAU,SAAAC,uBACb,SAAWA,GAAO,SAACJ,EAAUK,SAAS,CACrCJ,MAAID,EAAU,CACZE,MAAOG,EAAK,SAAWD,aAG1B,SAAWA,EAAO,sBAAuB,SAACJ,EAAUK,SAAS,CAC5DJ,MAAID,EAAU,oBACQ,CAClBM,gBAAiBD,EAAK,SAAWD,EAAO,gCAM1CG,EAAeC,EAAc,GAAIV,EAAYK,EAAQ,UACrDM,EAAcD,EAAc,GAAIV,EAAYK,EAAQ,WAE3CO,cAAY,CACzBC,OAAQ,CAAEJ,aAAAA,EAAcE,YAAAA,KCnBpBE,EAASH,EAAc,GAC3B,CACET,eAAgB,SAAAC,SAAY,CAC1BC,MAAID,EAAU,CACZY,QAAS,eACTC,cAAe,SACfC,iBAAkB,YAClBC,SAAU,WACVC,SAAU,EACVC,WAAY,qBAEQ,CAClBC,aAAc,8BAGQ,CACtBC,OAAQ,OACRD,aAAc,MACdE,MAAO,UACPC,OAAQ,kBAGF,CACNA,OAAQ,qCAGiB,CACzBD,MAAO,UACPC,OAAQ,gBAKhB,CAAC,QAAS,UAAW,SAAU,SAASC,QAAO,SAACC,EAAKC,UACnDD,iBAAYC,IA1CM,SAAAA,UAAQ,SAACxB,EAAUK,UACvCJ,MAAID,2BACYwB,GAAS,CACrBJ,MAAQf,iBAAamB,IAAU,KAC/BH,OAAQhB,iBAAamB,IAAU,SAsCXC,CAAcD,GACpCD,IACC,OAGUG,eAAa,CAAEf,OAAAA,ICvCxBgB,EAAW,CAIf5B,gBAA+B,EAE/B6B,WAA+BvB,OAAKwB,qBACpCC,aAA+BzB,OAAK0B,eACpCC,YAA+B3B,OAAK4B,sBACpCC,WAA+B7B,OAAK8B,qBAGpCC,8BAA+BC,OAAKhC,OAAKiC,uBAAwBjC,OAAKkC,iCACtEC,6BAA+BH,OAAKhC,OAAKoC,sBAAuBpC,OAAKqC,gCAErEC,YAA+B,eAC/BC,WAA+B,gBCpB3BC,EAAM,CAACC,EAAQ5C,GACfF,aCPO,WDSP+C,EAAWC,SAAOC,eAAejD,EAAU6C,EAAKxC,GAEhD6C,EAAWF,SAAOG,eAAenD,EAAU6C,EAAKxC,2BAExB,kBAC5B2C,SAAOD,SAAS,CACdK,UAAW,CAACpD,GACZ6C,IAAAA,EACAxC,KAAAA"}