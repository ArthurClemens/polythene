{"version":3,"sources":["indeterminate-spinner.es6"],"names":["_mithril","require","_spinner","CSS_CLASSES","block","animation","layer","layerN","gapPatch","circle","circleClipper","circleClipperLeft","circleClipperRight","num","_mithril2","default","class","join","component","view","ctrl","opts","arguments","length","undefined","content","map","_spinner2"],"mappings":"qJAYA,IAAAA,UAAAC,QAAA,sDACAC,SAAAD,QAAA,uEACAA,SAAA,8CAEA,IAAME,cACFC,MAAO,2BACPC,UAAW,sCACXC,MAAO,kCACPC,OAAQ,oCACRC,SAAU,sCACVC,OAAQ,mCACRC,cAAe,2CACfC,kBAAmB,iDACnBC,mBAAoB,mDAGlBN,MAAQ,SAACO,KAAD,OACV,EAAAC,UAAAC,SAAE,OAEMC,OAAQb,YAAYG,MAAOH,YAAYI,OAASM,KAAKI,KAAK,QAE1D,EAAAH,UAAAC,SAAE,OACEC,OAAQb,YAAYO,cAAeP,YAAYQ,mBAAmBM,KAAK,OACxE,EAAAH,UAAAC,SAAE,OACDC,MAAOb,YAAYM,WAEvB,EAAAK,UAAAC,SAAE,OACEC,MAAOb,YAAYK,WACpB,EAAAM,UAAAC,SAAE,OACDC,MAAOb,YAAYM,WAEvB,EAAAK,UAAAC,SAAE,OACEC,OAAQb,YAAYO,cAAeP,YAAYS,oBAAoBK,KAAK,OACzE,EAAAH,UAAAC,SAAE,OACDC,MAAOb,YAAYM,aAM7BS,WACFC,KAAM,SAACC,MAAoB,GAAdC,MAAcC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KAQvB,OAPAD,MAAKI,SAAU,EAAAX,UAAAC,SAAE,OACbC,MAAOb,YAAYE,YACnB,EAAE,EAAE,EAAE,GAAGqB,IAAI,SAACb,KAAD,MAAUP,OAAMO,QACjCQ,KAAKL,OACDb,YAAYC,MACZiB,KAAKL,OACPC,KAAK,KACAH,UAAAC,QAAEG,UAAFS,UAAAZ,QAAqBM,wBAIrBH","file":"indeterminate-spinner.js","sourcesContent":["/*\nDerived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport m from 'mithril';\nimport spinner from 'polythene/spinner/spinner';\nimport 'polythene/spinner/theme/indeterminate/theme';\n\nconst CSS_CLASSES = {\n    block: 'pe-spinner-indeterminate',\n    animation: 'pe-spinner-indeterminate__animation',\n    layer: 'pe-spinner-indeterminate__layer',\n    layerN: 'pe-spinner-indeterminate__layer--',\n    gapPatch: 'pe-spinner-indeterminate__gap-patch',\n    circle: 'pe-spinner-indeterminate__circle',\n    circleClipper: 'pe-spinner-indeterminate__circle-clipper',\n    circleClipperLeft: 'pe-spinner-indeterminate__circle-clipper--left',\n    circleClipperRight: 'pe-spinner-indeterminate__circle-clipper--right'\n};\n\nconst layer = (num) => (\n    m('div',\n        {\n            class: [CSS_CLASSES.layer, CSS_CLASSES.layerN + num].join(' ')\n        }, [\n            m('div', {\n                class: [CSS_CLASSES.circleClipper, CSS_CLASSES.circleClipperLeft].join(' ')\n            }, m('div', {\n                class: CSS_CLASSES.circle\n            })),\n            m('div', {\n                class: CSS_CLASSES.gapPatch\n            }, m('div', {\n                class: CSS_CLASSES.circle\n            })),\n            m('div', {\n                class: [CSS_CLASSES.circleClipper, CSS_CLASSES.circleClipperRight].join(' ')\n            }, m('div', {\n                class: CSS_CLASSES.circle\n            }))\n        ]\n    )\n);\n\nconst component = {\n    view: (ctrl, opts = {}) => {\n        opts.content = m('div', {\n            class: CSS_CLASSES.animation\n        }, [1,2,3,4].map((num) => (layer(num))));\n        opts.class = [\n            CSS_CLASSES.block,\n            opts.class\n        ].join(' ');\n        return m.component(spinner, opts);\n    }\n};\n\nexport default component;\n"]}