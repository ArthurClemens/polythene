{"version":3,"sources":["layout.es6"],"names":["_config","require","_mixin","_layout","transition","config","properties","duration","arguments","length","undefined","animation_duration","_mixin2","default","defaultTransition","customSize","size","factor","_config2","unit_icon_size","thumbSize","Math","floor","thumb_size","scaledTrackHeight","track_height","scaledTrackWidth","track_length","scaledThumbSize","trackTop","label_height","thumbPadding","icon_button_padding","thumbMargin","thumbOuterSize","thumbOffsetMin","thumbOffsetMax","thumbOffsetY","trackVisualOffset"," .pe-control__label","height","min-width"," span","padding-left","padding"," .pe-control--switch__track","left","width","top","border-radius"," .pe-control--switch__thumb","z-index"," .pe-control--switch__knob","position","margin"," .pe-button__label"," .pe-icon","fit","&.pe-control--on","createStyles","_layout2",".pe-control--switch","color",":focus","outline"," .pe-button__focus","&.pe-control--small","unit_icon_size_small","&.pe-control--regular","&.pe-control--medium","unit_icon_size_medium","&.pe-control--large","unit_icon_size_large"],"mappings":"qJAAA,IAAAA,SAAAC,QAAA,oEACAC,OAAAD,QAAA,iEACAE,QAAAF,QAAA,qFAEMG,WAAa,SAACC,OAAQC,YAAqD,GAAzCC,UAAyCC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAA9BH,OAAOM,kBACtD,QACIC,QAAAC,QAAMC,kBAAkBR,WAAYC,SAAU,cAIhDQ,WAAa,SAACV,OAAQW,MACxB,GAAMC,QAASD,KAAOE,SAAAL,QAAOM,eACvBC,UAA2D,EAA/CC,KAAKC,MAAM,GAAMjB,OAAOkB,WAAaN,QACjDO,kBAAqE,EAAjDH,KAAKC,MAAM,GAAMjB,OAAOoB,aAAeR,QAC3DS,iBAAoE,EAAjDL,KAAKC,MAAM,GAAMjB,OAAOsB,aAAeV,QAC1DW,gBAAiE,EAA/CP,KAAKC,MAAM,GAAMjB,OAAOkB,WAAaN,QACvDY,UAAaxB,OAAOyB,aAAeb,OAASO,mBAAqB,EACjEO,aAAe1B,OAAO2B,oBACtBC,aAAejB,KAAOY,iBAAmB,EACzCM,eAAiBlB,KAAO,EAAIe,aAC5BI,iBAAmBD,eAAiB,GAAMd,UAAY,EACtDgB,eAAiBD,eAAiBT,iBAAmBN,UACrDiB,aAAeF,eAAiBF,YAChCK,kBAAoB,EAE1B,QACIC,uBACIC,OAAQxB,KAAO,KACfyB,YAAaf,iBAAmB,KAEhCgB,SACIC,eAAiBtC,OAAOuC,QAAU3B,OAAS,EAAIS,iBAAoB,OAG3EmB,+BACIC,KAAMR,kBAAoB,KAC1BE,OAAQhB,kBAAoB,KAC5BuB,MAAQrB,iBAAmB,EAAIY,kBAAqB,KACpDU,IAAKnB,SAAW,KAChBoB,gBAAiBzB,kBAAoB,MAEzC0B,+BACIF,IAAKX,aAAe,KACpBS,KAAMX,eAAiB,KACvBgB,UAAW,GAGfC,8BACIC,SAAU,WACVN,MAAOnB,gBAAkB,KACzBY,OAAQZ,gBAAkB,KAC1BqB,gBAAiB,MACjBK,OAAQrB,YAAc,MAG1BsB,sBACIH,8BACII,aACI5C,QAAAC,QAAM4C,OAEFV,MAAO,OACPP,OAAQ,WAMxBkB,oBACIR,+BACIJ,KAAMV,eAAiB,SAMjCuB,aAAe,SAACtD,QAClB,QAAQ,EAAAuD,SAAA/C,SAAsBR,OAAQ,sBAAuB,aACzDwD,uBAEIhB,+BACIzC,WAAWC,OAAQ,wBAEfgD,SAAU,WACVP,KAAM,IAIdI,+BACI9C,WAAWC,OAAQ,gBAEfgD,SAAU,WACVS,MAAO,UAEPC,UACIC,QAAS,KAKrBC,sBACI7D,WAAWC,OAAQ,QAGvB6D,sBAAuBnD,WAAWV,OAAQa,SAAAL,QAAOsD,sBACjDC,wBAAyBrD,WAAWV,OAAQa,SAAAL,QAAOM,gBACnDkD,uBAAwBtD,WAAWV,OAAQa,SAAAL,QAAOyD,uBAClDC,sBAAuBxD,WAAWV,OAAQa,SAAAL,QAAO2D,0CAK9C,SAACnE,QAAD,MAAaO,SAAAC,QAAM8C,aAAatD,OAAQsD","file":"layout.js","sourcesContent":["import common from 'polythene/config/config';\nimport mixin from 'polythene/common/mixin';\nimport selectionControlStyle from 'polythene/selection-control/theme/layout';\n\nconst transition = (config, properties, duration = config.animation_duration) => {\n    return [\n        mixin.defaultTransition(properties, duration, 'ease-out')\n    ];\n};\n\nconst customSize = (config, size) => {\n    const factor = size / common.unit_icon_size;\n    const thumbSize = Math.floor(0.5 * config.thumb_size * factor) * 2; // round to even\n    const scaledTrackHeight = Math.floor(0.5 * config.track_height * factor) * 2; // round to even\n    const scaledTrackWidth = Math.floor(0.5 * config.track_length * factor) * 2;\n    const scaledThumbSize = Math.floor(0.5 * config.thumb_size * factor) * 2;\n    const trackTop = ((config.label_height * factor - scaledTrackHeight) / 2);\n    const thumbPadding = config.icon_button_padding;\n    const thumbMargin = (size - scaledThumbSize) / 2;\n    const thumbOuterSize = size + 2 * thumbPadding;\n    const thumbOffsetMin = -(thumbOuterSize / 2) + (thumbSize / 2);\n    const thumbOffsetMax = thumbOffsetMin + scaledTrackWidth - thumbSize;\n    const thumbOffsetY = thumbOffsetMin + thumbMargin;\n    const trackVisualOffset = 0.3; // prevent sub pixel of track to shine through knob border\n\n    return {\n        ' .pe-control__label': {\n            height: size + 'px',\n            'min-width': scaledTrackWidth + 'px',\n\n            ' span': {\n                'padding-left': (config.padding * factor + 8 + scaledTrackWidth) + 'px'\n            }\n        },\n        ' .pe-control--switch__track': {\n            left: trackVisualOffset + 'px', \n            height: scaledTrackHeight + 'px',\n            width: (scaledTrackWidth - 2 * trackVisualOffset) + 'px',\n            top: trackTop + 'px',\n            'border-radius': scaledTrackHeight + 'px'\n        },\n        ' .pe-control--switch__thumb': {\n            top: thumbOffsetY + 'px',\n            left: thumbOffsetMin + 'px',\n            'z-index': 1\n        },\n\n        ' .pe-control--switch__knob': {\n            position: 'relative',\n            width: scaledThumbSize + 'px',\n            height: scaledThumbSize + 'px',\n            'border-radius': '50%',\n            margin: thumbMargin + 'px'\n        },\n\n        ' .pe-button__label': {\n            ' .pe-control--switch__knob': {\n                ' .pe-icon': [\n                    mixin.fit(),\n                    {\n                        width: '100%',\n                        height: '100%'\n                    }\n                ]\n            }\n        },\n\n        '&.pe-control--on': {\n            ' .pe-control--switch__thumb': {\n                left: thumbOffsetMax + 'px'\n            }\n        }\n    };\n};\n\nconst createStyles = (config) => {\n    return [selectionControlStyle(config, '.pe-control--switch', 'checkbox'), {\n        '.pe-control--switch': {\n\n            ' .pe-control--switch__track': [\n                transition(config, 'background, opacity'),\n                {\n                    position: 'absolute',\n                    left: 0\n                }\n            ],\n\n            ' .pe-control--switch__thumb': [\n                transition(config, 'left, color'),\n                {\n                    position: 'absolute',\n                    color: 'inherit',\n\n                    ':focus': {\n                        outline: 0\n                    }\n                }\n            ],\n\n            ' .pe-button__focus': [\n                transition(config, 'all')\n            ],\n\n            '&.pe-control--small': customSize(config, common.unit_icon_size_small),\n            '&.pe-control--regular': customSize(config, common.unit_icon_size),\n            '&.pe-control--medium': customSize(config, common.unit_icon_size_medium),\n            '&.pe-control--large': customSize(config, common.unit_icon_size_large)\n        }\n    }];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}