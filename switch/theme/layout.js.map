{"version":3,"sources":["layout.es6"],"names":["transition","config","animation_duration","defaultTransition","properties","duration","customSize","size","unit_icon_size","floor","thumb_size","factor","track_height","track_length","label_height","scaledTrackHeight","icon_button_padding","scaledThumbSize","thumbPadding","thumbSize","height","scaledTrackWidth","padding","left","trackVisualOffset","width","top","trackTop","thumbOffsetMin","thumbMargin","position","margin","fit","createStyles","color","outline","unit_icon_size_small","unit_icon_size_medium","unit_icon_size_large"],"mappings":"oEAAA,6Q,wEAIA,GAAMA,YAAa,aAA8D,8DAA9BC,EAAOC,kBAAuB,CAC7E,MAAO,CACH,gBAAMC,iBAAN,CAAwBC,CAAxB,CAAoCC,CAApC,CAA8C,UAA9C,CADG,CAGV,CAJD,CAMMC,WAAa,aAAkB,CACjC,GAAM,GAASC,EAAO,iBAAOC,cAA7B,CACM,EAA2D,CAA/C,MAAKC,KAAL,CAAW,IAAMR,EAAOS,UAAb,CAA0BC,CAArC,CADlB,CAEM,EAAqE,CAAjD,MAAKF,KAAL,CAAW,IAAMR,EAAOW,YAAb,CAA4BD,CAAvC,CAF1B,CAGM,EAAoE,CAAjD,MAAKF,KAAL,CAAW,IAAMR,EAAOY,YAAb,CAA4BF,CAAvC,CAHzB,CAIM,EAAiE,CAA/C,MAAKF,KAAL,CAAW,IAAMR,EAAOS,UAAb,CAA0BC,CAArC,CAJxB,CAKM,EAAY,CAACV,EAAOa,YAAP,CAAsBH,CAAtB,CAA+BI,CAAhC,EAAqD,CALvE,CAMM,EAAed,EAAOe,mBAN5B,CAOM,EAAc,CAACT,EAAOU,CAAR,EAA2B,CAP/C,CASM,EAAiB,EAAE,CADFV,EAAO,EAAIW,CACT,EAAiB,CAAnB,EAAyBC,EAAY,CAT5D,CAYM,EAAoB,GAZ1B,CAcA,MAAO,CACH,sBAAuB,CACnBC,OAAQb,EAAO,IADI,CAEnB,YAAac,EAAmB,IAFb,CAInB,QAAS,CACL,eAAiBpB,EAAOqB,OAAP,CAAiBX,CAAjB,CAA0B,CAA1B,CAA8BU,CAA/B,CAAmD,IAD9D,CAJU,CADpB,CASH,8BAA+B,CAC3BE,KAAMC,EAAoB,IADC,CAE3BJ,OAAQL,EAAoB,IAFD,CAG3BU,MAAQJ,EAAmB,EAAIG,CAAxB,CAA6C,IAHzB,CAI3BE,IAAKC,EAAW,IAJW,CAK3B,gBAAiBZ,EAAoB,IALV,CAT5B,CAgBH,8BAA+B,CAC3BW,IApBaE,EAAiBC,CAoBzB,CAAe,IADO,CAE3BN,KAAMK,EAAiB,IAFI,CAG3B,UAAW,CAHgB,CAhB5B,CAsBH,6BAA8B,CAC1BE,SAAU,UADgB,CAE1BL,MAAOR,EAAkB,IAFC,CAG1BG,OAAQH,EAAkB,IAHA,CAI1B,gBAAiB,KAJS,CAK1Bc,OAAQF,EAAc,IALI,CAtB3B,CA8BH,qBAAsB,CAClB,6BAA8B,CAC1B,YAAa,CACT,gBAAMG,GAAN,EADS,CAET,CACIP,MAAO,MADX,CAEIL,OAAQ,MAFZ,CAFS,CADa,CADZ,CA9BnB,CA0CH,mBAAoB,CAChB,8BAA+B,CAC3BG,KAhDWK,EAAiBP,CAAjB,CAAoCF,CAgDzC,CAAiB,IADI,CADf,CA1CjB,CAgDV,CArED,CAuEMc,aAAe,WAAY,CAC7B,MAAO,CAAC,qBAAsBhC,CAAtB,CAA8B,qBAA9B,CAAqD,UAArD,CAAD,CAAmE,CACtE,sBAAuB,CAEnB,8BAA+B,CAC3BD,WAAWC,CAAX,CAAmB,qBAAnB,CAD2B,CAE3B,CACI6B,SAAU,UADd,CAEIP,KAAM,CAFV,CAF2B,CAFZ,CAUnB,8BAA+B,CAC3BvB,WAAWC,CAAX,CAAmB,aAAnB,CAD2B,CAE3B,CACI6B,SAAU,UADd,CAEII,MAAO,SAFX,CAII,SAAU,CACNC,QAAS,CADH,CAJd,CAF2B,CAVZ,CAsBnB,qBAAsB,CAClBnC,WAAWC,CAAX,CAAmB,KAAnB,CADkB,CAtBH,CA0BnB,sBAAuBK,WAAWL,CAAX,CAAmB,iBAAOmC,oBAA1B,CA1BJ,CA2BnB,wBAAyB9B,WAAWL,CAAX,CAAmB,iBAAOO,cAA1B,CA3BN,CA4BnB,uBAAwBF,WAAWL,CAAX,CAAmB,iBAAOoC,qBAA1B,CA5BL,CA6BnB,sBAAuB/B,WAAWL,CAAX,CAAmB,iBAAOqC,oBAA1B,CA7BJ,CAD+C,CAAnE,CAiCV,CAzGD,C,gBA2Ge,kBAAa,iBAAML,YAAN,CAAmBhC,CAAnB,CAA2BgC,YAA3B,CAAb,C","file":"layout.js","sourcesContent":["import common from 'polythene/config/config';\nimport mixin from 'polythene/common/mixin';\nimport selectionControlStyle from 'polythene/selection-control/theme/layout';\n\nconst transition = (config, properties, duration = config.animation_duration) => {\n    return [\n        mixin.defaultTransition(properties, duration, 'ease-out')\n    ];\n};\n\nconst customSize = (config, size) => {\n    const factor = size / common.unit_icon_size;\n    const thumbSize = Math.floor(0.5 * config.thumb_size * factor) * 2; // round to even\n    const scaledTrackHeight = Math.floor(0.5 * config.track_height * factor) * 2; // round to even\n    const scaledTrackWidth = Math.floor(0.5 * config.track_length * factor) * 2;\n    const scaledThumbSize = Math.floor(0.5 * config.thumb_size * factor) * 2;\n    const trackTop = ((config.label_height * factor - scaledTrackHeight) / 2);\n    const thumbPadding = config.icon_button_padding;\n    const thumbMargin = (size - scaledThumbSize) / 2;\n    const thumbOuterSize = size + 2 * thumbPadding;\n    const thumbOffsetMin = -(thumbOuterSize / 2) + (thumbSize / 2);\n    const thumbOffsetMax = thumbOffsetMin + scaledTrackWidth - thumbSize;\n    const thumbOffsetY = thumbOffsetMin + thumbMargin;\n    const trackVisualOffset = 0.3; // prevent sub pixel of track to shine through knob border\n\n    return {\n        ' .pe-control__label': {\n            height: size + 'px',\n            'min-width': scaledTrackWidth + 'px',\n\n            ' span': {\n                'padding-left': (config.padding * factor + 8 + scaledTrackWidth) + 'px'\n            }\n        },\n        ' .pe-control--switch__track': {\n            left: trackVisualOffset + 'px', \n            height: scaledTrackHeight + 'px',\n            width: (scaledTrackWidth - 2 * trackVisualOffset) + 'px',\n            top: trackTop + 'px',\n            'border-radius': scaledTrackHeight + 'px'\n        },\n        ' .pe-control--switch__thumb': {\n            top: thumbOffsetY + 'px',\n            left: thumbOffsetMin + 'px',\n            'z-index': 1\n        },\n\n        ' .pe-control--switch__knob': {\n            position: 'relative',\n            width: scaledThumbSize + 'px',\n            height: scaledThumbSize + 'px',\n            'border-radius': '50%',\n            margin: thumbMargin + 'px'\n        },\n\n        ' .pe-button__label': {\n            ' .pe-control--switch__knob': {\n                ' .pe-icon': [\n                    mixin.fit(),\n                    {\n                        width: '100%',\n                        height: '100%'\n                    }\n                ]\n            }\n        },\n\n        '&.pe-control--on': {\n            ' .pe-control--switch__thumb': {\n                left: thumbOffsetMax + 'px'\n            }\n        }\n    };\n};\n\nconst createStyles = (config) => {\n    return [selectionControlStyle(config, '.pe-control--switch', 'checkbox'), {\n        '.pe-control--switch': {\n\n            ' .pe-control--switch__track': [\n                transition(config, 'background, opacity'),\n                {\n                    position: 'absolute',\n                    left: 0\n                }\n            ],\n\n            ' .pe-control--switch__thumb': [\n                transition(config, 'left, color'),\n                {\n                    position: 'absolute',\n                    color: 'inherit',\n\n                    ':focus': {\n                        outline: 0\n                    }\n                }\n            ],\n\n            ' .pe-button__focus': [\n                transition(config, 'all')\n            ],\n\n            '&.pe-control--small': customSize(config, common.unit_icon_size_small),\n            '&.pe-control--regular': customSize(config, common.unit_icon_size),\n            '&.pe-control--medium': customSize(config, common.unit_icon_size_medium),\n            '&.pe-control--large': customSize(config, common.unit_icon_size_large)\n        }\n    }];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}