{"version":3,"sources":["tabs.es6"],"names":["CSS_CLASSES","block","scrollButton","scrollButtonLeft","scrollButtonRight","scrollButtonOffset","tabRow","tabRowCentered","tabRowIndent","tab","tabContent","tabHasIcon","indicator","scrollable","isAutofit","isAtStart","isAtEnd","isMenu","isSmall","activeSelected","label","POSITION_LEFT","POSITION_RIGHT","getNewIndex","tabs","length","left","Math","max","index","right","min","maxTabIndex","handleScrollButtonClick","e","stopPropagation","preventDefault","ctrl","selectedTabIndex","currentTabIndex","direction","scrollToTab","newIndex","setSelectedTab","opts","redraw","createScrollButton","scrollIconForward","arrowForward","scrollIconBackward","arrowBackward","component","class","position","join","icon","ripple","center","config","scrollButtonLeftEl","scrollButtonRightEl","el","events","onclick","alignToTitle","firstTab","querySelector","getBoundingClientRect","width","firstInnerLabel","style","marginLeft","firstOuterLabelWidth","firstInnerLabelWidth","createRightButtonOffset","tabsEl","scrollButtonOffsetEl","scrollButtonRightWidth","scrollerEl","slice","tabIndex","reduce","totalWidth","tabData","scroller","scrollWidth","tabLeft","scrollingWidth","scrollerWidth","scrollLeft","currentLeft","abs","tabs_scroll_speed","tabs_scroll_delay","setTimeout","element","to","duration","tabs_scroll_min_duration","updateScrollButtons","scrollButtonStates","isAtLeft","isAtRight","animateIndicator","selectedTabEl","tabIndicatorEl","rect","parentRect","animate","indicator_slide_min_duration","transform","translateX","managesScroll","getState","data","createTab","buttonOpts","Object","assign","content","wash","noIndicatorSlide","inited","push","tabButtonOptions","sortNumbers","a","b","createView","tag","centered","autofit","selectedTab","previousOptsSelectedTab","menu","small","id","largestWidth","map","widths","sort","reverse","forEach","largest","isTouch","onResize","subscribe","context","onunload","unsubscribe","buttons","selected","animateOnTap","tabsOpts","buttonOptsCombined","concat","hideIndicator","tabIndicator","props","before","after","controller","view"],"mappings":"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","file":"tabs.js","sourcesContent":["import 'polythene/common/object.assign';\nimport p from 'polythene/polythene/polythene';\nimport events from 'polythene/common/events';\nimport m from 'mithril';\nimport button from 'polythene/button/button';\nimport icon from 'polythene/icon/icon';\nimport iconBtn from 'polythene/icon-button/icon-button';\nimport scrollTo from 'polythene/common/scroll-to';\nimport theme from 'polythene/tabs/theme/theme'; // contains icons\nimport config from 'polythene/tabs/theme/config';\n\nconst CSS_CLASSES = {\n    block: 'pe-tabs',\n    scrollButton: 'pe-tabs__scroll-button',\n    scrollButtonLeft: 'pe-tabs__scroll-button--start',\n    scrollButtonRight: 'pe-tabs__scroll-button--end',\n    scrollButtonOffset: 'pe-tabs__scroll-button--offset',\n    tabRow: 'pe-tabs__row',\n    tabRowCentered: 'pe-tabs__row--centered',\n    tabRowIndent: 'pe-tabs__row--indent',\n    tab: 'pe-tabs__tab',\n    tabContent: 'pe-tabs__tab-content',\n    tabHasIcon: 'pe-tabs__tab---icon',\n    indicator: 'pe-tabs__indicator',\n    scrollable: 'pe-tabs--scrollable',\n    isAutofit: 'pe-tabs--autofit',\n    isAtStart: 'pe-tabs--start',\n    isAtEnd: 'pe-tabs--end',\n    isMenu: 'pe-tabs--menu',\n    isSmall: 'pe-tabs--small',\n    activeSelected: 'pe-tabs__active-selected',\n    // reference:\n    label: 'pe-button__label',\n};\n\nconst POSITION_LEFT = (1 << 1);\nconst POSITION_RIGHT = (1 << 2);\n\nconst getNewIndex = (index, tabs) => {\n    const minTabIndex = 0;\n    const maxTabIndex = tabs.length - 1;\n    return {\n        left: Math.max(index - 1, minTabIndex),\n        right: Math.min(index + 1, maxTabIndex)\n    };\n};\n\nconst handleScrollButtonClick = (ctrl, opts, e, direction) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const tabs = ctrl.tabs;\n    const currentTabIndex = ctrl.selectedTabIndex;\n    const newIndex = getNewIndex(currentTabIndex, tabs)[direction];\n    scrollToTab(ctrl, newIndex);\n    if (newIndex !== currentTabIndex) {\n        setSelectedTab(ctrl, opts, newIndex, true);\n        m.redraw();\n    }\n};\n\n\nconst createScrollButton = (ctrl, position, opts) => {\n    const scrollIconForward = opts.scrollIconForward || theme.arrowForward;\n    const scrollIconBackward = opts.scrollIconBackward || theme.arrowBackward;\n\n    return m.component(iconBtn, {\n        class: [\n            CSS_CLASSES.scrollButton,\n            (position === POSITION_LEFT ? CSS_CLASSES.scrollButtonLeft : CSS_CLASSES.scrollButtonRight)\n        ].join(' '),\n        icon: position === POSITION_LEFT ? scrollIconBackward : scrollIconForward,\n        ripple: {\n            center: true\n        },\n        config: (el) => {\n            if (ctrl.scrollButtonLeftEl && ctrl.scrollButtonRightEl) {\n                return;\n            }\n            if (position === POSITION_LEFT) {\n                ctrl.scrollButtonLeftEl = el;\n            } else {\n                ctrl.scrollButtonRightEl = el;\n            }\n        },\n        events: {\n            onclick: (position === POSITION_LEFT) ? (e) => {\n                handleScrollButtonClick(ctrl, opts, e, 'left');\n            } : (e) => {\n                handleScrollButtonClick(ctrl, opts, e, 'right');\n            }\n        }\n    });\n};\n\nconst alignToTitle = (ctrl) => {\n    const firstTab = ctrl.tabs[0].el;\n    const firstInnerLabel = firstTab.querySelector('.' + CSS_CLASSES.label + ' span');\n    const firstOuterLabelWidth = firstTab.getBoundingClientRect().width;\n    const firstInnerLabelWidth = firstInnerLabel.getBoundingClientRect().width;\n    const firstTabOffset = (firstOuterLabelWidth - firstInnerLabelWidth) / 2;\n    firstTab.style.marginLeft = -firstTabOffset + 'px';\n};\n\nconst createRightButtonOffset = (ctrl) => {\n    // add padding to right so that last item is not hidden behind scroll button\n    const scrollButtonRightWidth = ctrl.scrollButtonRightEl.getBoundingClientRect().width;\n    const scrollButtonOffsetEl = ctrl.tabsEl.querySelector('.' + CSS_CLASSES.scrollButtonOffset);\n    scrollButtonOffsetEl.style.width = scrollButtonRightWidth + 'px';\n};\n\nconst scrollToTab = (ctrl, tabIndex) => {\n    const tabs = ctrl.tabs;\n    const scroller = ctrl.scrollerEl;\n    // scroll to position of selected tab\n    const tabLeft = tabs.slice(0, tabIndex).reduce((totalWidth, tabData) => {\n        return totalWidth + tabData.el.getBoundingClientRect().width;\n    }, 0);\n    // tabs at the far right will not fully move to the left\n    // because the scrollable row will stick to the right \n    // to get the max scroll left, we subtract the visible viewport from the scroll width\n    const scrollerWidth = scroller.getBoundingClientRect().width; // frame width\n    const scrollingWidth = scroller.scrollWidth;\n    const maxScroll = scrollingWidth - scrollerWidth;\n    const left = Math.min(tabLeft, maxScroll);\n    const currentLeft = scroller.scrollLeft;\n    if (currentLeft !== left) {\n        const duration = Math.abs(currentLeft - left) / config.tabs_scroll_speed;\n        const delaySeconds = config.tabs_scroll_delay || 0;\n        setTimeout(() => {\n            scrollTo({\n                element: scroller,\n                to: left,\n                duration: Math.max(config.tabs_scroll_min_duration, duration),\n                direction: 'horizontal'\n            });\n        }, delaySeconds * 1000);\n    }\n};\n\nconst updateScrollButtons = (ctrl) => {\n    const scrollerEl = ctrl.scrollerEl;\n    const scrollLeft = scrollerEl.scrollLeft;\n    const currentTabIndex = ctrl.selectedTabIndex;\n    const tabs = ctrl.tabs;\n    const tabsEl = ctrl.tabsEl;\n    const minTabIndex = 0;\n    const maxTabIndex = tabs.length - 1;\n    const isAtLeft = (scrollerEl.scrollLeft === 0) && (currentTabIndex === minTabIndex);\n    const isAtRight = (scrollLeft >= (scrollerEl.scrollWidth - tabsEl.getBoundingClientRect().width - 1)) && (currentTabIndex === maxTabIndex);\n    ctrl.scrollButtonStates.left = !isAtLeft;\n    ctrl.scrollButtonStates.right = !isAtRight;\n};\n\nconst animateIndicator = (selectedTabEl, animate, ctrl) => {\n    const parentRect = ctrl.tabsEl.getBoundingClientRect();\n    const rect = selectedTabEl.getBoundingClientRect();\n    const style = ctrl.tabIndicatorEl.style;\n    const translateX = rect.left - parentRect.left + ctrl.scrollerEl.scrollLeft;\n    const transformCmd = 'translate(' + translateX + 'px, 0)';\n    const duration = animate ? config.indicator_slide_min_duration : 0;\n    // use width instead of scale to please IE10\n    style.width = rect.width + 'px';\n    style['transition-duration'] =\n        style['-webkit-transition-duration'] =\n        style['-moz-transition-duration'] =\n        style['-o-transition-duration'] = duration + 's';\n    style.transform =\n        style['-webkit-transform'] =\n        style['-moz-transform'] =\n        style['-ms-transform'] =\n        style['-o-transform'] = transformCmd;\n};\n\nconst setSelectedTab = (ctrl, opts, index, animate) => {\n    ctrl.selectedTabIndex = index;\n    if (!ctrl.tabs.length) return;\n    const selectedTabEl = ctrl.tabs[index].el;\n    if (selectedTabEl && ctrl.tabIndicatorEl && ctrl.tabsEl) {\n        animateIndicator(selectedTabEl, animate, ctrl);\n    }\n    if (ctrl.managesScroll) {\n        updateScrollButtons(ctrl);\n        scrollToTab(ctrl, index);\n    }\n    if (opts.getState) {\n        opts.getState({\n            index: index,\n            data: ctrl.tabs[index].data,\n            el: selectedTabEl\n        });\n    }\n};\n\nconst createTab = (ctrl, opts, index, buttonOpts) => {\n    // Let internal onclick function co-exist with passed button option\n    buttonOpts.events = buttonOpts.events || {};\n    buttonOpts.events.onclick = buttonOpts.events.onclick || (() => {});\n    const tabButtonOptions = Object.assign(\n        {},\n        buttonOpts,\n        {\n            content: m('div', {\n                class: CSS_CLASSES.tabContent\n            }, [\n                buttonOpts.icon ? m.component(icon, buttonOpts.icon) : null,\n                buttonOpts.label ? m('div', {class: CSS_CLASSES.label}, m('span', buttonOpts.label)) : null,\n            ]),\n            class: [\n                CSS_CLASSES.tab,\n                (buttonOpts.icon && buttonOpts.label ? CSS_CLASSES.tabHasIcon : null),\n                buttonOpts.class\n            ].join(' '),\n            wash: false,\n            ripple: true,\n            events: Object.assign(\n                {},\n                buttonOpts.events,\n                {\n                    onclick: (e) => {\n                        setSelectedTab(ctrl, opts, index, opts.noIndicatorSlide ? false : true);\n                        buttonOpts.events.onclick(e);\n                    }\n                }\n            ),\n            config: (el, inited) => {\n                if (inited) {\n                    return;\n                }\n                ctrl.tabs.push({data: buttonOpts, el});\n            }\n        }\n    );\n    return m.component(button, tabButtonOptions);\n};\n\nconst sortNumbers = (a, b) => {\n    if (a < b)\n        return -1;\n    if (a > b)\n        return 1;\n    else\n        return 0;\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const tag = opts.tag || 'div';\n    const autofit = (opts.scrollable || opts.centered) ? false : (opts.autofit ? true : false);\n\n    // keep selected tab up to date\n    if (opts.selectedTab !== undefined && ctrl.previousOptsSelectedTab !== opts.selectedTab) {\n        setSelectedTab(ctrl, opts, opts.selectedTab, true);\n    }\n    ctrl.previousOptsSelectedTab = opts.selectedTab;\n\n    const props = {\n        class: [\n            CSS_CLASSES.block,\n            (opts.scrollable ? CSS_CLASSES.scrollable : null),\n            ((ctrl.selectedTabIndex === 0) ? CSS_CLASSES.isAtStart : null),\n            ((ctrl.selectedTabIndex === ctrl.tabs.length - 1) ? CSS_CLASSES.isAtEnd : null),\n            (opts.activeSelected ? CSS_CLASSES.activeSelected : null),\n            (autofit ? CSS_CLASSES.isAutofit : null),\n            (opts.menu ? CSS_CLASSES.isMenu : null),\n            (opts.small ? CSS_CLASSES.isSmall : null),\n            opts.class\n        ].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context) => {\n            if (inited) {\n                return;\n            }\n            ctrl.tabsEl = el;\n\n            if (opts.largestWidth) {\n                const widths = ctrl.tabs.map(tabData => tabData.el.getBoundingClientRect().width);\n                const largest = widths.sort(sortNumbers).reverse()[0];\n                ctrl.tabs.forEach(tabData => tabData.el.style.width = largest + 'px');\n            }\n\n            // align first scrollable tab to title\n            if (opts.scrollable) {\n                alignToTitle(ctrl);\n            }\n            // handle scroll\n            if (opts.scrollable && !p.isTouch) {\n                ctrl.managesScroll = true;\n                createRightButtonOffset(ctrl);\n            }\n\n            const onResize = () => {\n                setSelectedTab(ctrl, opts, ctrl.selectedTabIndex, false);\n                m.redraw();\n            };\n            events.subscribe('resize', onResize);\n\n            context.onunload = () => {\n                events.unsubscribe('resize', onResize);\n            };\n\n            setSelectedTab(ctrl, opts, ctrl.selectedTabIndex, false);\n        }\n    };\n    const tabRow = opts.buttons.map((buttonOpts, index) => {\n        const buttonOptsCombined = Object.assign(\n            {},\n            buttonOpts,\n            {\n                selected: index === ctrl.selectedTabIndex,\n                animateOnTap: (opts.animateOnTap !== false) ? true : false\n            },\n            opts.tabsOpts || {}\n        );\n        return createTab(ctrl, opts, index, buttonOptsCombined);\n    }).concat([\n        // offset for right scroll button\n        opts.scrollable ? m('div', {class: CSS_CLASSES.scrollButtonOffset}) : null\n    ]);\n\n    let scrollButtonLeft, scrollButtonRight;\n    if (opts.scrollable) {\n        scrollButtonLeft = createScrollButton(ctrl, POSITION_LEFT, opts);\n        scrollButtonRight = createScrollButton(ctrl, POSITION_RIGHT, opts);\n    }\n\n    const tabIndicator = opts.hideIndicator ? null : m('div', {\n        class: CSS_CLASSES.indicator,\n        config: (el, inited) => {\n            if (inited) {\n                return;\n            }\n            ctrl.tabIndicatorEl = el;\n        }\n    });\n\n    const content = [\n        opts.scrollable ? scrollButtonLeft : null,\n        m('div', {\n            class: [\n                CSS_CLASSES.tabRow,\n                (opts.centered ? CSS_CLASSES.tabRowCentered : null),\n                (opts.scrollable ? CSS_CLASSES.tabRowIndent : null)\n            ].join(' '),\n            config: (el, inited) => {\n                if (inited) {\n                    return;\n                }\n                ctrl.scrollerEl = el;\n            },\n            onscroll: () => {\n                updateScrollButtons(ctrl);\n            }\n        }, [\n            tabRow,\n            tabIndicator\n        ]),\n        opts.scrollable ? scrollButtonRight : null\n    ];\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: () => {\n        return {\n            tabsEl: null,\n            scrollerEl: null,\n            tabs: [], // {data, el}\n            tabIndicatorEl: null,\n            selectedTabIndex: 0,\n            previousOptsSelectedTab: undefined,\n            managesScroll: false,\n            scrollButtonStates: {\n                left: false,\n                right: false\n            }\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}