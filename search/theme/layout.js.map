{"version":3,"sources":["layout.es6"],"names":["createStyles","config","inset_height","line_height_input","fullwidth_height","unit_indent","fullwidth_side_padding","grid_unit_icon_button","flex","position","padding","display","font_size_input","border","top","bottom","layoutHorizontal","layoutVertical","selfCenter","inset_border_radius","inset_side_padding","height","inset_input_padding_v","inset_input_indent","inset_input_right_padding","fullwidth_border_radius","fullwidth_input_padding_v","fullwidth_input_indent","fullwidth_input_right_padding"],"mappings":"oEAAA,0P,wEAIA,GAAMA,cAAe,WAAY,CAC7B,GAAM,GAAyB,CAACC,EAAOC,YAAP,CAAsBD,EAAOE,iBAA9B,EAAmD,CAAlF,CACM,EAA6B,CAACF,EAAOG,gBAAP,CAA0BH,EAAOE,iBAAlC,EAAuD,CAD1F,CAEM,EAA0B,iBAAOE,WAAP,CAAqBJ,EAAOK,sBAA7B,CAAuD,iBAAOC,qBAF7F,CAIA,MAAO,CAAC,CACJ,aAAc,CACV,eAAKC,IAAL,EADU,CAEV,CACIC,SAAU,UADd,CAGI,iBAAkB,CACd,eAAKD,IAAL,EADc,CAEd,CACIE,QAAS,CADb,CAGID,SAAU,UAHd,CAII,UAAW,CAJf,CAFc,CAHtB,CAaI,6BAA8B,CAC1BC,QAAS,CADiB,CAG1B,UAAW,CACPC,QAAS,MADF,CAHe,CAblC,CAqBI,8CAA+C,CAC3C,YAAaV,EAAOW,eAAP,CAAyB,IADK,CAE3C,cAAeX,EAAOE,iBAAP,CAA2B,IAFC,CArBnD,CA0BI,wBAAyB,CAErBU,OAAQ,MAFa,CA1B7B,CA+BI,wBAAyB,CAErBC,IAAK,CAFgB,CAGrBC,OAAQ,CAHa,CA/B7B,CAqCI,uBAAwB,eAAKC,gBArCjC,CAuCI,2BAA4B,eAAKC,cAvCrC,CAyCI,oBAAqB,eAAKC,UAzC9B,CA2CI,qBAAsB,CAClB,gBAAiBjB,EAAOkB,mBAAP,CAA6B,IAD5B,CAElBT,QAAS,KAAOT,EAAOmB,kBAAd,CAAmC,IAF1B,CAIlB,2EAA4E,CACxEC,OAAQpB,EAAOC,YAAP,CAAsB,IAD0C,CAJ1D,CAOlB,8CAA+C,CAC3C,cAAeoB,EAAwB,IADI,CAE3C,iBAAkBA,EAAwB,IAFC,CAG3C,eAAgBrB,EAAOsB,kBAAP,CAA4B,IAHD,CAI3C,gBAAiBtB,EAAOuB,yBAAP,CAAmC,IAJT,CAP7B,CA3C1B,CA0DI,yBAA0B,CACtB,gBAAiBvB,EAAOwB,uBAAP,CAAiC,IAD5B,CAEtBf,QAAS,KAAOT,EAAOK,sBAAd,CAAuC,IAF1B,CAItB,2EAA4E,CACxEe,OAAQpB,EAAOG,gBAAP,CAA0B,IADsC,CAJtD,CAOtB,8CAA+C,CAC3C,cAAesB,EAA4B,IADA,CAE3C,iBAAkBA,EAA4B,IAFH,CAG3C,eAAgBC,EAAyB,IAHE,CAI3C,gBAAiB1B,EAAO2B,6BAAP,CAAuC,IAJb,CAPzB,CA1D9B,CAFU,CADV,CAAD,CA8EV,CAnFD,C,gBAqFe,kBAAa,iBAAM5B,YAAN,CAAmBC,CAAnB,CAA2BD,YAA3B,CAAb,C","file":"layout.js","sourcesContent":["import common from 'polythene/config/config';\nimport mixin from 'polythene/common/mixin';\nimport flex from 'polythene/layout/theme/flex';\n\nconst createStyles = (config) => {\n    const inset_input_padding_v = ((config.inset_height - config.line_height_input) / 2);\n    const fullwidth_input_padding_v = ((config.fullwidth_height - config.line_height_input) / 2);\n    const fullwidth_input_indent = (common.unit_indent - config.fullwidth_side_padding) - common.grid_unit_icon_button;\n\n    return [{\n        '.pe-search': [\n            flex.flex(),\n            {\n                position: 'relative', // necessary when a shadow is added\n\n                ' .pe-textfield': [\n                    flex.flex(),\n                    {\n                        padding: 0,\n                        // prevent that neighboring icon button with ripple hides the cursor\n                        position: 'relative',\n                        'z-index': 1\n                    }\n                ],\n\n                ' .pe-textfield__input-area': {\n                    padding: 0,\n\n                    '&:after': {\n                        display: 'none'\n                    }\n                },\n\n                ' .pe-textfield__input, .pe-textfield__label': {\n                    'font-size': config.font_size_input + 'px',\n                    'line-height': config.line_height_input + 'px'\n                },\n\n                ' .pe-textfield__input': {\n                    // reset\n                    border: 'none'\n                },\n\n                ' .pe-textfield__label': {\n                    // reset\n                    top: 0,\n                    bottom: 0\n                },\n\n                ' .pe-search__content': flex.layoutHorizontal,\n\n                ' .pe-search__content > *': flex.layoutVertical,\n\n                ' .pe-button--icon': flex.selfCenter,\n\n                '&.pe-search--inset': {\n                    'border-radius': config.inset_border_radius + 'px',\n                    padding: '0 ' + config.inset_side_padding + 'px',\n\n                    '&, .pe-textfield__input-area, .pe-textfield__input, .pe-textfield__label': {\n                        height: config.inset_height + 'px'\n                    },\n                    ' .pe-textfield__input, .pe-textfield__label': {\n                        'padding-top': inset_input_padding_v + 'px',\n                        'padding-bottom': inset_input_padding_v + 'px',\n                        'padding-left': config.inset_input_indent + 'px',\n                        'padding-right': config.inset_input_right_padding + 'px'\n                    }\n                },\n\n                '&.pe-search--fullwidth': {\n                    'border-radius': config.fullwidth_border_radius + 'px',\n                    padding: '0 ' + config.fullwidth_side_padding + 'px',\n\n                    '&, .pe-textfield__input-area, .pe-textfield__input, .pe-textfield__label': {\n                        height: config.fullwidth_height + 'px'\n                    },\n                    ' .pe-textfield__input, .pe-textfield__label': {\n                        'padding-top': fullwidth_input_padding_v + 'px',\n                        'padding-bottom': fullwidth_input_padding_v + 'px',\n                        'padding-left': fullwidth_input_indent + 'px',\n                        'padding-right': config.fullwidth_input_right_padding + 'px'\n                    }\n                }\n            }\n        ]\n    }];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}