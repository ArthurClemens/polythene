{"version":3,"sources":["dialog-instance.es6"],"names":["require","_events","_mithril","_dialog","_transition","_shadow","_isomorphic","CSS_CLASSES","block","visible","body","fullscreen","content","header","footer","footerHigh","title","actions","hasBackdrop","hasTopOverflow","hasBottomOverflow","menuContent","SCROLL_WATCH_TIMER","updateScrollState","ctrl","scroller","scrollEl","topOverflow","scrollTop","bottomOverflow","scrollHeight","getBoundingClientRect","height","updateFooterState","_isomorphic2","default","isServer","footerEl","style","window","getComputedStyle","minHeight","parseInt","classList","add","remove","show","opts","id","instanceId","isTransitioning","_transition2","Object","assign","el","showClass","then","didShow","hide","_dialog2","didHide","setTimeout","_mithril2","redraw","createViewContent","bodyOpts","menu","class","config","inited","onscroll","isScrolling","clearTimeout","scrollWatchId","createView","arguments","length","undefined","updateContentOnScroll","ignoreContent","tag","update","props","backdrop","borders","join","context","vdom","cleanup","_events2","unsubscribe","handleEscape","e","which","hideDelay","subscribe","onunload","onclick","target","modal","formOptions","subtree","component","_shadow2","z","animated","headerHeight","footerHeight","before","after","controller","instanceData","view"],"mappings":"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","file":"dialog-instance.js","sourcesContent":["import 'polythene/common/object.assign';\nimport events from 'polythene/common/events';\nimport m from 'mithril';\nimport dialog from 'polythene/dialog/dialog';\nimport transition from 'polythene/common/transition';\nimport shadow from 'polythene/shadow/shadow';\nimport isomorphic from 'polythene/common/isomorphic';\nimport 'polythene/dialog/theme/theme';\n\nconst CSS_CLASSES = {\n    block: 'pe-dialog',\n    visible: 'pe-dialog--visible',\n    body: 'pe-dialog__body',\n    fullscreen: 'pe-dialog--fullscreen',\n    content: 'pe-dialog__content',\n    header: 'pe-dialog__header',\n    footer: 'pe-dialog__footer',\n    footerHigh: 'pe-dialog__footer--high',\n    title: 'pe-dialog__title',\n    actions: 'pe-dialog__actions',\n    hasBackdrop: 'pe-dialog--backdrop',\n    hasTopOverflow: 'pe-dialog--overflow-top',\n    hasBottomOverflow: 'pe-dialog--overflow-bottom',\n    menuContent: 'pe-menu__content'\n};\n\nconst SCROLL_WATCH_TIMER = 150;\n\nconst updateScrollState = (ctrl) => {\n    const scroller = ctrl.scrollEl;\n    if (!scroller) {\n        return;\n    }\n    ctrl.topOverflow = (scroller.scrollTop > 0);\n    ctrl.bottomOverflow = (scroller.scrollHeight - (scroller.scrollTop + scroller.getBoundingClientRect().height) > 0);\n};\n\nconst updateFooterState = (ctrl) => {\n\tif(isomorphic.isServer()) {\n\t\treturn;\n\t}\n    const footerEl = ctrl.footerEl;\n    if (footerEl) {\n        const style = window.getComputedStyle(footerEl);\n        const height = footerEl.getBoundingClientRect().height;\n        const minHeight = parseInt(style.minHeight, 10);\n        if (height > minHeight) {\n            footerEl.classList.add(CSS_CLASSES.footerHigh);\n        } else {\n            footerEl.classList.remove(CSS_CLASSES.footerHigh);\n        }\n    }\n};\n\nconst show = (ctrl, opts) => {\n    const id = ctrl.instanceId;\n    ctrl.isTransitioning = true;\n    return transition.show(Object.assign({}, opts, {\n        el: ctrl.el,\n        showClass: CSS_CLASSES.visible\n    })).then(() => {\n        ctrl.isTransitioning = false;\n        ctrl.visible = true;\n        if (ctrl.didShow) {\n            // notify multiple\n            ctrl.didShow(id);\n            // this will call opts.didShow\n        }\n    });\n};\n\nconst hide = (ctrl, opts) => {\n    const id = ctrl.instanceId;\n    ctrl.isTransitioning = true;\n    return transition.hide(Object.assign({}, opts, {\n        el: ctrl.el,\n        showClass: CSS_CLASSES.visible\n    })).then(() => {\n        dialog.remove(id);\n        ctrl.isTransitioning = false;\n        ctrl.visible = false;\n        if (ctrl.didHide) {\n            // notify multiple\n            ctrl.didHide(id);\n            // this will call opts.didHide\n        }\n        setTimeout(m.redraw, 0); // removes remainder of drawn component\n    });\n};\n\nconst createViewContent = (ctrl, opts) => {\n    // if flex \"self-stretch\" is not supported, calculate the maximum height\n    let style = {};\n    const bodyOpts = opts.body || opts.menu;\n\n    return m('div', {\n        class: CSS_CLASSES.body,\n        style: style,\n        config: (el, inited) => {\n            if (inited) {\n                return;\n            }\n            ctrl.scrollEl = el;\n        },\n        onscroll: () => {\n            ctrl.isScrolling = true;\n            updateScrollState(ctrl);\n\n            clearTimeout(ctrl.scrollWatchId);\n            ctrl.scrollWatchId = setTimeout(() => {\n                ctrl.isScrolling = false;\n            }, SCROLL_WATCH_TIMER);\n        }\n    }, bodyOpts);\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const bodyOpts = opts.body || opts.menu;\n    const updateContentOnScroll = opts.updateContentOnScroll || false;\n    const ignoreContent = !updateContentOnScroll && ctrl.isScrolling;\n    const tag = opts.tag || 'form';\n\n    const update = () => {\n        updateScrollState(ctrl);\n        updateFooterState(ctrl);\n        m.redraw();\n    };\n\n    const props = Object.assign({}, {\n        class: [\n            CSS_CLASSES.block,\n            (opts.fullscreen ? CSS_CLASSES.fullscreen : null),\n            (opts.backdrop ? CSS_CLASSES.hasBackdrop : null),\n            (ctrl.topOverflow || opts.borders ? CSS_CLASSES.hasTopOverflow : null),\n            (ctrl.bottomOverflow || opts.borders ? CSS_CLASSES.hasBottomOverflow : null),\n            ctrl.visible ? CSS_CLASSES.visible : null,\n            opts.class\n        ].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context, vdom) => {\n            if (inited) {\n                return;\n            }\n            if (opts.config) {\n                opts.config(el, inited, context, vdom);\n            }\n            ctrl.el = el;\n\n            const cleanup = () => {\n                events.unsubscribe('resize', update);\n                events.unsubscribe('keydown', handleEscape);\n            };\n\n            const handleEscape = (e) => {\n                if (opts.fullscreen || opts.backdrop) return;\n                if (e.which === 27) {\n                    cleanup();\n                    hide(ctrl, Object.assign({}, opts, {hideDelay: 0}));\n                }\n            };\n\n            // resize: update scroll state ('overflow' borders)\n            events.subscribe('resize', update);\n            events.subscribe('keydown', handleEscape);\n\n            context.onunload = () => {\n                cleanup();\n            };\n\n            updateScrollState(ctrl);\n            updateFooterState(ctrl);\n\n            show(ctrl, opts).then(() => {\n                updateScrollState(ctrl);\n                updateFooterState(ctrl);\n                if (ctrl.topOverflow || ctrl.bottomOverflow) {\n                    setTimeout(m.redraw, 0);\n                }\n            });\n        },\n        // click backdrop: close dialog\n        onclick: (e) => {\n            if (e.target !== ctrl.el) {\n                return;\n            }\n            if (opts.modal) {\n                // not allowed\n                return;\n            }\n            if (!ctrl.isTransitioning) {\n                hide(ctrl, Object.assign({}, opts, {hideDelay: 0}));\n            }\n        }\n    }, opts.formOptions ? opts.formOptions : null);\n\n    const body = bodyOpts ? (ignoreContent ? {\n        subtree: 'retain'\n    } : createViewContent(ctrl, opts)) : null;\n\n    const content = m('div', {\n        class: [CSS_CLASSES.content, (opts.menu ? CSS_CLASSES.menuContent : null)].join(' ')\n    }, [\n        opts.fullscreen ? null : m.component(shadow, {\n            z: ctrl.z,\n            animated: true\n        }),\n        opts.fullscreen ? null : opts.title ? m('div', {\n            class: CSS_CLASSES.header,\n            config: (el) => {\n                ctrl.headerHeight = el.scrollHeight;\n            }\n        }, [\n            m('div', {class: CSS_CLASSES.title}, opts.title)\n        ]) : null,\n        body,\n        opts.fullscreen ? null : opts.footer ? m('div', {\n            class: CSS_CLASSES.footer,\n            config: (el, inited) => {\n                ctrl.footerHeight = el.scrollHeight;\n                if (inited) {\n                    return;\n                }\n                ctrl.footerEl = el;\n            }\n        }, [\n            m('div', {class: CSS_CLASSES.actions}, opts.footer)\n        ]) : null\n    ]);\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: (instanceData = {}) => {\n        // instanceData contains {id, opts}\n        const opts = instanceData.opts || {};\n        let z = (opts.z !== undefined) ? opts.z : 3; // shadow depth\n        return Object.assign({}, instanceData, {\n            instanceId: instanceData.instanceId,\n            z: z,\n            scrollEl: null,\n            footerEl: null,\n            topOverflow: false,\n            bottomOverflow: false,\n            scrollWatchId: 0,\n            isScrolling: false,\n            headerHeight: 0,\n            footerHeight: 0,\n            el: null,\n            visible: instanceData.show ? true : false,\n            isTransitioning: false\n        });\n    },\n    view: (ctrl, instanceData) => {\n        // instanceData contains {id, opts}\n        const opts = (typeof instanceData.opts === 'function')\n            ? instanceData.opts()\n            : instanceData.opts;\n        if (instanceData.hide && !ctrl.isTransitioning) {\n            hide(ctrl, opts);\n        }\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}