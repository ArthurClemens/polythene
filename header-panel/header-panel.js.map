{"version":3,"sources":["header-panel.es6"],"names":["require","_polythene","_events","_mithril","_toolbar","_isomorphic","CSS_CLASSES","panel","header","dropShadow","outerContainer","headerContainer","backgroundContainer","condensedBackground","headerBackground","mediaDimmer","mainContainer","headerAnimated","fixed","cascaded","modeCover","modeScroll","modeSeamed","modeStandard","modeTall","modeWaterfallTall","modeWaterfall","toolbar","toolbarTopbar","headerTall","DEFAULT_SHADOW_HEIGTH","DEFAULT_HEADER_HEIGHT","DEFAULT_CONDENSED_HEADER_HEIGHT","SCROLL_WATCH_TIMER","scroller","scrollPositions","modeConfigs","shadowAfterScroll","waterfall","waterfall-tall","alwaysShadow","standard","tall","noShadow","seamed","cover","scroll","tallMode","outerScroll","modeClasses","classForMode","mode","arguments","length","undefined","setTransform","style","string","transform","_isomorphic2","default","isClient","document","documentElement","webkitTransform","translateY","y","t","createHeaderComponent","opts","tallClass","toolbarOpts","class","join","topBar","_mithril2","component","_toolbar2","content","animated","createViewHeader","ctrl","initHeaderContainer","inited","headerContainerElem","Object","assign","headerConfig","config","shadow","createViewContent","scrollConfig","initMainContainer","main","scrollerElem","onscroll","e","_events2","emit","storeScrollPosition","target","scrollTop","createView","configs","init","updateContentOnScroll","ignoreContent","isScrolling","scrollerType","handleScroll","bind","tag","initOuterContainer","headerElem","querySelector","topBarElem","headerBg","condensedHeaderBg","outerContainerElem","headerTopBarElem","setHeight","clientHeight","outer","restoreScrollPosition","props","id","el","headerPanelElem","subtree","before","after","controller","scrolled","prevScrollTop","headerMargin","headerHeight","condenses","scrollAwayTopbar","noReveal","keepCondensedHeader","noDissolve","backgroundScrollSpeed","shadowHeight","condensedHeaderHeight","handleScrollFns","isScrolled","showShadow","classList","dynamicHeader","sy","sTop","scrollInited","initialScrollPosition","initialPositionFixed","Math","min","max","transformHeader","_polythene2","isTouch","enlargeImage","handleScrollFn","scrollWatchId","h","paddingTop","clearTimeout","setTimeout","condenseHeader","hy","reset","hbg","opacity","chbg","height","condensedHeight","abs","restoreScrollPositionId","restore","view"],"mappings":"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","file":"header-panel.js","sourcesContent":["import 'polythene/common/object.assign';\nimport p from 'polythene/polythene/polythene';\nimport events from 'polythene/common/events';\nimport m from 'mithril';\nimport toolbar from 'polythene/toolbar/toolbar';\nimport isomorphic from 'polythene/common/isomorphic';\nimport 'polythene/header-panel/theme/theme';\n\nconst CSS_CLASSES = {\n    panel: 'pe-header-panel',\n    header: 'pe-header',\n    dropShadow: 'pe-header-panel__drop-shadow',\n    outerContainer: 'pe-header-panel__outer-container',\n    headerContainer: 'pe-header-panel__header-container',\n    backgroundContainer: 'pe-header-panel__background-container',\n    condensedBackground: 'pe-header-panel__condensed-background',\n    headerBackground: 'pe-header-panel__header-background',\n    mediaDimmer: 'pe-header-panel__media-dimmer',\n    mainContainer: 'pe-header-panel__main-container',\n\n    headerAnimated: 'pe-header--animated',\n    fixed: 'pe-header-panel--fixed',\n    cascaded: 'pe-header-panel--cascaded',\n    modeCover: 'pe-header-panel--cover',\n    modeScroll: 'pe-header-panel--scroll',\n    modeSeamed: 'pe-header-panel--seamed',\n    modeStandard: 'pe-header-panel--standard',\n    modeTall: 'pe-header-panel--tall',\n    modeWaterfallTall: 'pe-header-panel--waterfall-tall',\n    modeWaterfall: 'pe-header-panel--waterfall',\n\n    // lookups:\n    toolbar: 'pe-toolbar',\n    toolbarTopbar: 'pe-toolbar__bar--top',\n    headerTall: 'pe-header--tall'\n};\n\nconst DEFAULT_SHADOW_HEIGTH = 6;\nconst DEFAULT_HEADER_HEIGHT = 192;\nconst DEFAULT_CONDENSED_HEADER_HEIGHT = DEFAULT_HEADER_HEIGHT / 3;\nconst SCROLL_WATCH_TIMER = 150;\n\nlet scroller; // keep track of scrolling elements on the page\nconst scrollPositions = {};\n\nconst modeConfigs = {\n    shadowAfterScroll: {\n        'waterfall': 1,\n        'waterfall-tall': 1\n    },\n    alwaysShadow: {\n        'standard': 1,\n        'tall': 1\n    },\n    noShadow: {\n        'seamed': 1,\n        'cover': 1,\n        'scroll': 1\n    },\n    tallMode: {\n        'tall': true,\n        'waterfall-tall': true\n    },\n    outerScroll: {\n        'scroll': 1\n    }\n};\n\nconst modeClasses = {\n    'cover': CSS_CLASSES.modeCover,\n    'scroll': CSS_CLASSES.modeScroll,\n    'seamed': CSS_CLASSES.modeSeamed,\n    'standard': CSS_CLASSES.modeStandard,\n    'tall': CSS_CLASSES.modeTall,\n    'waterfall-tall': CSS_CLASSES.modeWaterfallTall,\n    'waterfall': CSS_CLASSES.modeWaterfall\n};\n\nconst classForMode = (mode = 'standard') => {\n    return modeClasses[mode];\n};\n\nlet setTransform = (style, string) => {\n    style.transform = string;\n};\n\nif(isomorphic.isClient()) {\n\tsetTransform = (document.documentElement.style.transform !== undefined) ? ((style, string) => {\n\t    style.transform = string;\n\t}) : ((style, string) => {\n\t    style.webkitTransform = string;\n\t});\n}\n\nconst translateY = (style, y) => {\n    const t = (y === null) ? '' : 'translate3d(0, ' + y + 'px, 0)';\n    setTransform(style, t);\n};\n\nconst createHeaderComponent = (opts = {}) => {\n    const tall = opts.tall || false;\n    const tallClass = opts.tallClass || '';\n    const toolbarOpts = opts.toolbar;\n    if (toolbarOpts) {\n        toolbarOpts.class = [\n            (toolbarOpts.class || null),\n            tall ? tallClass : null\n        ].join(' ');\n        if (!toolbarOpts.topBar) {\n            toolbarOpts.topBar = m('div');\n        }\n        return m.component(toolbar, toolbarOpts);\n    } else if (opts.content) {\n        return m('div', {\n            class: [\n                CSS_CLASSES.header,\n                (opts.class || null),\n                (tall ? tallClass : null),\n                (opts.animated ? CSS_CLASSES.headerAnimated : '')\n            ].join(' ')\n        }, opts.content);\n    } else {\n        return m('div', opts);\n    }\n};\n\nconst createViewHeader = (ctrl, opts = {}) => {\n    const initHeaderContainer = (headerContainer, inited) => {\n        if (inited) {\n            return;\n        }\n        ctrl.headerContainerElem = headerContainer;\n    };\n    const header = opts.header ? createHeaderComponent(Object.assign({}, opts.header, ctrl.headerConfig)) : null;\n    return m('div', {\n        class: CSS_CLASSES.headerContainer,\n        config: initHeaderContainer\n    }, [\n        m('div', {\n            class: CSS_CLASSES.backgroundContainer\n        }, [\n            m('div', {class: CSS_CLASSES.condensedBackground}),\n            m('div', {class: CSS_CLASSES.headerBackground}),\n            m('div', {class: CSS_CLASSES.mediaDimmer})\n        ]),\n        header,\n        (ctrl.mode === 'seamed' || ctrl.shadow === false) ? null : m('div', {class: CSS_CLASSES.dropShadow})\n    ]);\n};\n\nconst createViewContent = (ctrl, scrollConfig, opts = {}) => {\n    const initMainContainer = (mainContainer, inited) => {\n        if (inited) {\n            return;\n        }\n        if (scrollConfig.main) {\n            ctrl.scrollerElem = mainContainer;\n        }\n    };\n    return [\n        m('div', {\n            class: CSS_CLASSES.mainContainer,\n            config: initMainContainer,\n            onscroll: (e) => {\n                scrollConfig.main(e);\n                events.emit('scroll', e);\n                ctrl.storeScrollPosition(e.target.scrollTop);\n            }\n        },\n        opts.content ? opts.content : null)\n    ];\n};\n\nconst createView = (ctrl, opts = {}) => {\n    opts.header = opts.header || {};\n    opts.configs = opts.configs || [];\n    ctrl.init(ctrl);\n\n    const updateContentOnScroll = opts.updateContentOnScroll || false;\n    const ignoreContent = !updateContentOnScroll && ctrl.isScrolling;\n    const scrollerType = modeConfigs.outerScroll[ctrl.mode] ? 'outer' : 'main';\n    const handleScroll = ctrl.handleScroll.bind(ctrl);\n    const header = createViewHeader(ctrl, opts);\n    const tag = opts.tag || 'div';\n\n    const scrollConfig = {};\n    scrollConfig[scrollerType] = handleScroll;\n\n    const initOuterContainer = (outerContainer, inited) => {\n        const headerElem = outerContainer.querySelector('.' + CSS_CLASSES.header) || outerContainer.querySelector('.' + CSS_CLASSES.toolbar);\n        if (!headerElem) {\n            return;\n        }\n        if (inited && ctrl.headerElem) {\n            return;\n        }\n        const headerContainer = outerContainer.querySelector('.' + CSS_CLASSES.headerContainer);\n        const topBarElem = headerContainer.querySelector('.' + CSS_CLASSES.toolbarTopbar);\n        const headerBg = headerContainer.querySelector('.' + CSS_CLASSES.headerBackground);\n        const condensedHeaderBg = headerContainer.querySelector('.' + CSS_CLASSES.condensedBackground);\n\n        ctrl.outerContainerElem = outerContainer;\n        ctrl.headerElem = headerElem;\n        ctrl.headerTopBarElem = topBarElem;\n        ctrl.headerBg = headerBg;\n        ctrl.condensedHeaderBg = condensedHeaderBg;\n\n        if (!opts.animated) {\n            ctrl.setHeight(headerContainer.clientHeight);\n        }\n        if (scrollConfig.outer) {\n            ctrl.scrollerElem = outerContainer;\n        }\n\n        ctrl.restoreScrollPosition();\n    };\n\n    const props = Object.assign({}, {\n        class: [\n            CSS_CLASSES.panel,\n            ctrl.fixed ? CSS_CLASSES.fixed : null,\n            classForMode(ctrl.mode),\n            opts.class\n        ].join(' '),\n        id: opts.id || '',\n        config: (el, inited) => {\n            if (inited) {\n                return;\n            }\n            ctrl.headerPanelElem = el;\n        }\n    });\n\n    const content = m('div', {\n        class: CSS_CLASSES.outerContainer,\n        config: initOuterContainer,\n        onscroll: (e) => {\n            scrollConfig.outer(e);\n            events.emit('scroll', e);\n        }\n    }, [\n        header,\n        ignoreContent ? {\n            subtree: 'retain'\n        } : createViewContent(ctrl, scrollConfig, opts)\n    ]);\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: (opts = {}) => {\n        let ctrl,\n            mode,\n            y,\n            scrolled,\n            prevScrollTop,\n            headerMargin,\n            headerHeight;\n\n        if (opts.mode) {\n            mode = opts.mode;\n        } else if (opts.header && opts.header.toolbar) {\n            mode = opts.header.toolbar.mode;\n        } else if (opts.header && opts.header.content) {\n            mode = opts.header.mode;\n        }\n        mode = mode || 'standard';\n        const tall = modeConfigs.tallMode[mode] || false;\n        const tallClass = opts.tallClass || CSS_CLASSES.headerTall;\n        const animated = opts.animated || false;\n        const fixed = opts.fixed || false;\n        const condenses = opts.condenses || false;\n        const scrollAwayTopbar = opts.scrollAwayTopbar || false;\n        const noReveal = opts.noReveal || false;\n        const keepCondensedHeader = opts.keepCondensedHeader || false;\n        const noDissolve = opts.noDissolve || false;\n        const backgroundScrollSpeed = (opts.backgroundScrollSpeed !== undefined) ? opts.backgroundScrollSpeed : 0.5;\n        y = 0;\n        scrolled = false;\n        prevScrollTop = 0;\n        // defaults, finally set with setHeight\n        const shadowHeight = DEFAULT_SHADOW_HEIGTH;\n        headerHeight = (opts.headerHeight || DEFAULT_HEADER_HEIGHT) + shadowHeight;\n        const condensedHeaderHeight = (opts.condensedHeaderHeight || DEFAULT_CONDENSED_HEADER_HEIGHT) + shadowHeight;\n        headerMargin = headerHeight - condensedHeaderHeight;\n\n        const handleScrollFns = {\n            standard: () => {\n                //\n            },\n            fixed: () => {\n                const isScrolled = (ctrl.scrollerElem.scrollTop > 0);\n                ctrl.showShadow(isScrolled);\n                scrolled = isScrolled;\n            },\n            animated: () => {\n                const isScrolled = (ctrl.scrollerElem.scrollTop > 0);\n                if (isScrolled !== scrolled) {\n                    const headerElem = ctrl.headerElem;\n                    if (headerElem && tall) {\n                        headerElem.classList[isScrolled ? 'remove' : 'add'](tallClass);\n                    }\n                    ctrl.showShadow(isScrolled);\n                    scrolled = isScrolled;\n                }\n            },\n            dynamicHeader: () => {\n                let sy,\n                    cascaded = false,\n                    sTop;\n\n                if (!ctrl.scrollInited && opts.initialScrollPosition) {\n                    sTop = opts.initialScrollPosition;\n                } else {\n                    sTop = ctrl.scrollerElem.scrollTop;\n                }\n\n                if (!ctrl.scrollInited && opts.initialPositionFixed) {\n                    prevScrollTop = sTop;\n                    y = 0;\n                    return;\n                }\n\n                if (sTop < headerMargin) {\n                    sy = sTop;\n                } else {\n                    sy = Math.min(keepCondensedHeader\n                            ? headerMargin\n                            : headerHeight,\n                        Math.max(0, ((noReveal || keepCondensedHeader)\n                            ? sTop\n                            : y + sTop - prevScrollTop))\n                    );\n                    if (condenses && prevScrollTop >= sTop && sTop > headerMargin) {\n                        sy = Math.max(sy, headerMargin);\n                    }\n                }\n                if (sTop > 0) {\n                    ctrl.transformHeader(sy);\n                } else if (p.isTouch) {\n                    ctrl.enlargeImage(sy);\n                }\n                if (!modeConfigs.noShadow[opts.mode]) {\n                    if (sTop > sy) {\n                        cascaded = true;\n                    }\n                    ctrl.showShadow(cascaded);\n                }\n                y = sy;\n                prevScrollTop = Math.max(sTop, 0);\n            }\n        };\n\n        let handleScrollFn;\n        if (animated) {\n            handleScrollFn = handleScrollFns.animated;\n        } else if (mode === 'standard') {\n            handleScrollFn = handleScrollFns.standard;\n        } else if (fixed) {\n            handleScrollFn = handleScrollFns.fixed;\n        } else {\n            handleScrollFn = handleScrollFns.dynamicHeader;\n        }\n\n        return {\n            headerPanelElem: undefined,\n            scrollerElem: undefined,\n            outerContainerElem: undefined,\n            headerContainerElem: undefined,\n            headerTopBarElem: undefined,\n            headerElem: undefined,\n            headerBg: undefined,\n            condensedHeaderBg: undefined,\n            mode: mode,\n            fixed: fixed,\n            shadow: (opts.shadow !== undefined && !opts.shadow) ? false : true,\n            scrollWatchId: 0,\n            isScrolling: false,\n            scrollInited: false,\n            headerConfig: {\n                tall: tall,\n                tallClass: tallClass,\n                animated: animated,\n                fixed: fixed\n            },\n\n            init: (controller) => {\n                ctrl = controller;\n            },\n\n            setHeight: (h) => {\n                if (opts.headerHeight === undefined) {\n                    headerHeight = h + shadowHeight;\n                    headerMargin = headerHeight - condensedHeaderHeight;\n                }\n                if (!fixed) {\n                    const mainContainer = ctrl.outerContainerElem.querySelector('.' + CSS_CLASSES.mainContainer);\n                    mainContainer.style.paddingTop = h + 'px';\n                }\n                if (noReveal) {\n                    ctrl.showShadow(false);\n                }\n            },\n\n            handleScroll: (e) => {\n                if (e) {\n                    // this is a real scroll event\n                    // instead of a programmatic call\n                    ctrl.isScrolling = true;\n                    scroller = ctrl;\n                    clearTimeout(ctrl.scrollWatchId);\n                    ctrl.scrollWatchId = setTimeout(() => {\n                        ctrl.isScrolling = false;\n                        scroller = undefined;\n                    }, SCROLL_WATCH_TIMER);\n                }\n\n                if (mode === 'scroll') {\n                    return;\n                }\n                if (modeConfigs.alwaysShadow[mode]) {\n                    ctrl.showShadow(true);\n                }\n\n                handleScrollFn();\n                ctrl.scrollInited = true;\n\n                if (e && opts.scroll) {\n                    opts.scroll(e);\n                }\n            },\n\n            condenseHeader: (hy) => {\n                const reset = (hy === null);\n\n                // adjust top bar in core-header so the top bar stays at the top\n                if (!scrollAwayTopbar) {\n                    if (ctrl.headerTopBarElem) {\n                        translateY(ctrl.headerTopBarElem.style, Math.min(hy, headerMargin));\n                    }\n                }\n\n                // transition header bg\n                const hbg = ctrl.headerBg.style;\n                if (hbg) {\n                    if (!noDissolve) {\n                        hbg.opacity = reset ? '' : (headerMargin - hy) / headerMargin;\n                    }\n\n                    // adjust header bg so it stays at the center\n                    translateY(hbg, reset ? null : hy * backgroundScrollSpeed);\n\n                    // transition condensed header bg\n                    if (!noDissolve) {\n                        const chbg = ctrl.condensedHeaderBg.style;\n                        chbg.opacity = reset ? '' : hy / headerMargin;\n                        // adjust condensed header bg so it stays at the center\n                        translateY(chbg, reset ? null : hy * backgroundScrollSpeed);\n                    }\n                }\n            },\n\n            transformHeader: (hy) => {\n                if (hy < 0) {\n                    return;\n                }\n                translateY(ctrl.headerContainerElem.style, -hy);\n                if (condenses) {\n                    ctrl.condenseHeader(hy);\n                }\n                if (opts.transform) {\n                    opts.transform({\n                        y: hy,\n                        height: headerHeight,\n                        condensedHeight: condensedHeaderHeight\n                    });\n                }\n            },\n\n            enlargeImage: (hy) => {\n                ctrl.headerBg.style.height = 100 / headerHeight * (headerHeight + Math.abs(hy / 2)) + '%';\n            },\n\n            showShadow: (cascaded) => {\n                if (modeConfigs.alwaysShadow[mode]) {\n                    cascaded = true;\n                }\n                ctrl.outerContainerElem.classList[cascaded ? 'add' : 'remove'](CSS_CLASSES.cascaded);\n            },\n\n            storeScrollPosition: (scrollTop) => {\n                if (opts.restoreScrollPositionId) {\n                    scrollPositions[opts.restoreScrollPositionId] = scrollTop;\n                }\n            },\n\n            restoreScrollPosition: () => {\n                if (opts.restoreScrollPositionId) {\n                    const scrollTop = scrollPositions[opts.restoreScrollPositionId];\n                    if (scrollTop !== undefined) {\n                        const restore = () => (ctrl.scrollerElem.scrollTop = scrollTop);\n                        restore();\n                        setTimeout(restore, 0);\n                    }\n                }\n            }\n        };\n    },\n\n    view: (ctrl, opts) => {\n        if (scroller && scroller !== ctrl) {\n            // if we are scrolling,\n            // don't render other header-panels\n            return {\n                subtree: 'retain'\n            };\n        } else {\n            return createView(ctrl, opts);\n        }\n    }\n};\n\nexport default component;\n"]}