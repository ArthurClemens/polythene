{"version":3,"sources":["layout.es6"],"names":["unifySize","size","config","min_size","widthClass","toString","replace","sizeStr","widthStyle","s","width","size_factor","createStyles","vendorize","prefixes_transition","sizes","map","z_menu","opacity","position","grid_unit_menu","border_radius","unit_screen_size_large","max_size_small_screen"],"mappings":"oEAAA,wK,8MAGA,GAAMA,WAAY,aAAkB,CAChC,MAAQC,GAAOC,EAAOC,QAAf,CAA2BD,EAAOC,QAAlC,CAA6CF,CACvD,CAFD,CAIMG,WAAa,aAAkB,CACjC,GAAM,GAAUH,EAAKI,QAAL,GAAgBC,OAAhB,CAAwB,GAAxB,CAA6B,GAA7B,CAAhB,CACA,MAAO,kBAAoBC,CAC9B,CAPD,CASMC,WAAa,aAAkB,CACjC,GAAM,GAAIR,UAAUE,CAAV,CAAkBD,CAAlB,CAAV,CACA,0BACK,KAAOG,WAAWF,CAAX,CAAmBO,CAAnB,CADZ,CACoC,CAC5BC,MAAOR,EAAOS,WAAP,CAAqBF,CAArB,CAAyB,IADJ,CAE5B,YAAa,MAFe,CADpC,CAMH,CAjBD,CAmBMG,aAAe,WAAY,CAC7B,MAAO,CAAC,CACJ,WAAY,CAER,gBAAMC,SAAN,2CAEG,iBAAOC,mBAFV,CAFQ,CAKR,gBAAMD,SAAN,mCAEG,iBAAOC,mBAFV,CALQ,CAQRZ,EAAOa,KAAP,CAAaC,GAAb,CAAiB,WAAU,CACvB,MAAOR,YAAWN,CAAX,CAAmBD,CAAnB,CACV,CAFD,CARQ,kBAYJ,UAAW,iBAAOgB,MAZd,CAaJC,QAAS,CAbL,CAcJC,SAAU,UAdN,CAeJT,MAAO,MAfH,CAgBJ,YAAa,iBAAOU,cAAP,CAAwBlB,EAAOC,QAA/B,CAA0C,IAhBnD,CAkBJ,wBAAyB,CACrBO,MAAO,MADc,CAlBrB,CAsBJ,qBAAsB,CAClBQ,QAAS,CADS,CAtBlB,CA0BJ,uBAAwB,CACpBC,SAAU,UADU,CAEpBD,QAAS,CAFW,CA1BpB,CA+BJ,qBAAsB,CAClBR,MAAO,MADW,CAElB,gBAAiBR,EAAOmB,aAAP,CAAuB,IAFtB,CA/BlB,EAoCH,sBAAwB,iBAAOC,sBAA/B,CAAwD,KApCrD,CAoC6D,CAC7D,YAAapB,EAAOqB,qBAAP,CAA+B,iBAAOH,cAAtC,CAAuD,IADP,CApC7D,EADR,CAAD,CA4CV,CAhED,C,gBAkEe,kBAAa,iBAAMR,YAAN,CAAmBV,CAAnB,CAA2BU,YAA3B,CAAb,C","file":"layout.js","sourcesContent":["import common from 'polythene/config/config';\nimport mixin from 'polythene/common/mixin';\n\nconst unifySize = (config, size) => {\n    return (size < config.min_size) ? config.min_size : size;\n};\n\nconst widthClass = (config, size) => {\n    const sizeStr = size.toString().replace('.', '-');\n    return 'pe-menu--width-' + sizeStr;\n};\n\nconst widthStyle = (config, size) => {\n    const s = unifySize(config, size);\n    return {\n        ['&.' + widthClass(config, s)]: {\n            width: config.size_factor * s + 'px',\n            'max-width': '100%'\n        }\n    };\n};\n\nconst createStyles = (config) => {\n    return [{\n        '.pe-menu': [\n            // transition-duration set in js\n            mixin.vendorize({\n                'transition-timing-function': 'ease-out'\n            }, common.prefixes_transition),\n            mixin.vendorize({\n                'transition-property': 'opacity'\n            }, common.prefixes_transition),\n            config.sizes.map((size) => {\n                return widthStyle(config, size);\n            }),\n            {\n                'z-index': common.z_menu,\n                opacity: 0,\n                position: 'absolute',\n                width: '100%',\n                'min-width': common.grid_unit_menu * config.min_size + 'px',\n\n                '&.pe-menu--width-auto': {\n                    width: 'auto'\n                },\n\n                '&.pe-menu--visible': {\n                    opacity: 1\n                },\n\n                '&.pe-menu--permanent': {\n                    position: 'relative',\n                    opacity: 1\n                },\n\n                ' .pe-menu__content': {\n                    width: '100%',\n                    'border-radius': config.border_radius + 'px'\n                },\n\n                ['@media (max-width: ' + common.unit_screen_size_large + 'px)']: {\n                    'max-width': config.max_size_small_screen * common.grid_unit_menu + 'px'\n                }\n            }\n        ]\n\n    }];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}