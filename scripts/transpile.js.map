{"version":3,"sources":["transpile.es6"],"names":["path","require","watch","persistent","process","argv","what","ignore","extension","createOutPath","inPath","replace","transform","outPath","dir","dirname","backPath","createBackPath","re","RegExp","inFile","outFile","sourceMapFile","command","join","depth","match","length","s"],"mappings":"YAKA,IAAMA,MAAOC,QAAQ,QACfC,MAAQD,QAAQ,kBAEtBC,QACIC,aAAkC,SAApBC,QAAQC,KAAK,IAC3BC,KAAMF,QAAQC,KAAK,GACnBE,OAASH,QAAQC,KAAK,IAA0B,SAApBD,QAAQC,KAAK,GAAiBD,QAAQC,KAAK,GAAK,KAC5EG,UAAW,OACXC,cAAe,SAACC,QAAD,MAAaA,QAAOC,QAAQ,QAAS,QACpDC,UAAW,SAACF,OAAQG,SAChB,GAAMC,KAAMd,KAAKe,QAAQL,QAAU,IAC7BM,SAAWC,eAAeH,KAC1BI,GAAK,GAAIC,QAAOL,KAChBM,OAASV,OAAOC,QAAQO,GAAI,IAC5BG,QAAUR,QAAQF,QAAQO,GAAI,IAC9BI,cAAmBD,QAAnB,OACAE,SAAU,MACNT,IACHE,SAFS,qFAEoFI,OAFpF,eAEyGC,QAFzG,sBAGTL,SAHS,2DAG0DK,QAH1D,iBAGkFC,cAHlF,oBAGmHA,cAC5HN,SAJS,6CAI4CK,QAJ5C,IAIuDA,SACrEG,KAAK,OACP,OAAOD,WAIf,IAAMN,gBAAiB,SAACH,KAGpB,IAFA,GAAIW,QAASX,IAAIY,MAAM,YAAcC,OACjCC,EAAI,GACDH,MAAQ,GACXG,GAAK,MACLH,OAEJ,OAAOG","file":"transpile.js","sourcesContent":["\n// argv[2]: state (run once or watch)\n// argv[3]: which dir to watch\n// argv[4]: which dir to ignore\n\nconst path = require('path');\nconst watch = require('transpile-watch');\n\nwatch({\n    persistent: !(process.argv[2] === 'once'),\n    what: process.argv[3],\n    ignore: (process.argv[4] && process.argv[4] !== 'null') ? process.argv[4] : null,\n    extension: '.es6',\n    createOutPath: (inPath) => (inPath.replace(/.es6$/, '.js')),\n    transform: (inPath, outPath) => {\n        const dir = path.dirname(inPath) + '/';\n        const backPath = createBackPath(dir);\n        const re = new RegExp(dir);\n        const inFile = inPath.replace(re, '');\n        const outFile = outPath.replace(re, '');\n        const sourceMapFile = `${outFile}.map`;\n        const command = [\n            `cd ${dir}`,\n            `${backPath}node_modules/babel-cli/bin/babel.js --presets es2015 --plugins add-module-exports ${inFile} --out-file ${outFile} --source-maps true`,\n            `${backPath}node_modules/uglify-js/bin/uglifyjs --compress --output ${outFile} --source-map ${sourceMapFile} --in-source-map ${sourceMapFile}`,\n            `${backPath}node_modules/mithril-objectify/bin/cli.js ${outFile} ${outFile}`\n        ].join(' && ');\n        return command;\n    }\n});\n\nconst createBackPath = (dir) => {\n    var depth = (dir.match(/\\//g) || []).length;\n    var s = '';\n    while (depth > 0) {\n        s += '../';\n        depth--;\n    }\n    return s;\n};"]}